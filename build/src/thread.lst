GAS LISTING /tmp/ccTdCIur.s 			page 1


   1              		.file	"thread.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCBC2EPFvPvES0_S0_NS_7ContextE
   9              	_ZN3TCBC2EPFvPvES0_S0_NS_7ContextE:
  10              	.LFB26:
  11              		.file 1 "src/thread.cpp"
   1:src/thread.cpp **** #include "../h/thread.hpp"
   2:src/thread.cpp **** #include "../h/Scheduler.hpp"
   3:src/thread.cpp **** 
   4:src/thread.cpp **** int TCB::id_count = 0;
   5:src/thread.cpp **** TCB* TCB::running = nullptr;
   6:src/thread.cpp **** time_t TCB::time_slice_count = 0;
   7:src/thread.cpp **** 
   8:src/thread.cpp **** TCB::TCB(routine_ptr fun, void *args, void *stack, Context c) : context(c) {
  12              		.loc 1 8 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C8100 		sd	s0,24(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040102 		addi	s0,sp,32
  20              		.cfi_def_cfa 8, 0
  21              	.LBB6:
  22              		.loc 1 8 74 is_stmt 0
  23 000c 2334E504 		sd	a4,72(a0)
  24 0010 2338F504 		sd	a5,80(a0)
  25 0014 230E0504 		sb	zero,92(a0)
   9:src/thread.cpp ****     // poziva se iz _threadCreate gde je inicijalni kontekst formiran
  10:src/thread.cpp ****     id = id_count++;
  26              		.loc 1 10 5 is_stmt 1
  27              		.loc 1 10 18 is_stmt 0
  28 0018 17070000 		lla	a4,.LANCHOR0
  28      13070700 
  29 0020 83270700 		lw	a5,0(a4)
  30 0024 1B881700 		addiw	a6,a5,1
  31 0028 23200701 		sw	a6,0(a4)
  32              		.loc 1 10 8
  33 002c 2320F500 		sw	a5,0(a0)
  11:src/thread.cpp **** 
  12:src/thread.cpp ****     // !!! body = nullptr => stack = nullptr + skip Scheduler::put()
  13:src/thread.cpp **** 
  14:src/thread.cpp ****     routine = fun;
  34              		.loc 1 14 5 is_stmt 1
  35              		.loc 1 14 13 is_stmt 0
  36 0030 2338B502 		sd	a1,48(a0)
  15:src/thread.cpp ****     this->args = args;
  37              		.loc 1 15 5 is_stmt 1
  38              		.loc 1 15 16 is_stmt 0
  39 0034 233CC502 		sd	a2,56(a0)
  16:src/thread.cpp ****     this->stack = (uint64*)stack; // stack start address (allocated)
  40              		.loc 1 16 5 is_stmt 1
  41              		.loc 1 16 17 is_stmt 0
GAS LISTING /tmp/ccTdCIur.s 			page 2


  42 0038 2330D504 		sd	a3,64(a0)
  17:src/thread.cpp ****     this->current_state = RUNNABLE;
  43              		.loc 1 17 5 is_stmt 1
  44              		.loc 1 17 25 is_stmt 0
  45 003c 232C0504 		sw	zero,88(a0)
  18:src/thread.cpp ****     this->next_ready = nullptr;
  46              		.loc 1 18 5 is_stmt 1
  47              		.loc 1 18 22 is_stmt 0
  48 0040 23340500 		sd	zero,8(a0)
  19:src/thread.cpp ****     this->next_sleepy= nullptr;
  49              		.loc 1 19 5 is_stmt 1
  50              		.loc 1 19 22 is_stmt 0
  51 0044 23380500 		sd	zero,16(a0)
  20:src/thread.cpp ****     this->sleeping_time = 0;
  52              		.loc 1 20 5 is_stmt 1
  53              		.loc 1 20 25 is_stmt 0
  54 0048 23300502 		sd	zero,32(a0)
  21:src/thread.cpp ****     this->time_slice = DEFAULT_TIME_SLICE; // add in constructor
  55              		.loc 1 21 5 is_stmt 1
  56              		.loc 1 21 22 is_stmt 0
  57 004c 93072000 		li	a5,2
  58 0050 2334F502 		sd	a5,40(a0)
  59              	.LBE6:
  22:src/thread.cpp **** }
  60              		.loc 1 22 1
  61 0054 03348101 		ld	s0,24(sp)
  62              		.cfi_restore 8
  63              		.cfi_def_cfa 2, 32
  64 0058 13010102 		addi	sp,sp,32
  65              		.cfi_def_cfa_offset 0
  66 005c 67800000 		jr	ra
  67              		.cfi_endproc
  68              	.LFE26:
  70              		.globl	_ZN3TCBC1EPFvPvES0_S0_NS_7ContextE
  71              		.set	_ZN3TCBC1EPFvPvES0_S0_NS_7ContextE,_ZN3TCBC2EPFvPvES0_S0_NS_7ContextE
  72              		.align	2
  73              		.globl	_ZN3TCB5yieldEPS_S0_
  75              	_ZN3TCB5yieldEPS_S0_:
  76              	.LFB30:
  23:src/thread.cpp **** 
  24:src/thread.cpp **** int TCB::_threadCreate(TCB** handle, routine_ptr routine, void *args, void *stack_space) {
  25:src/thread.cpp ****     Context context = {
  26:src/thread.cpp **** 
  27:src/thread.cpp ****             // initial context, starts from wrapper
  28:src/thread.cpp ****             // ra <= &wrapper, sp <= stack space + size (last used)
  29:src/thread.cpp **** 
  30:src/thread.cpp ****             (uint64)wrapper,
  31:src/thread.cpp ****             routine == nullptr ? 0 : (uint64)((char *)stack_space + DEFAULT_STACK_SIZE - 1)
  32:src/thread.cpp **** 
  33:src/thread.cpp ****             // handle == null -> main function thread, no need for new stack
  34:src/thread.cpp ****     };
  35:src/thread.cpp **** 
  36:src/thread.cpp ****     *handle = new TCB (routine, args, stack_space, context);
  37:src/thread.cpp ****     if (routine) Scheduler::put(*handle);
  38:src/thread.cpp ****     return 0;
  39:src/thread.cpp **** }
  40:src/thread.cpp **** 
GAS LISTING /tmp/ccTdCIur.s 			page 3


  41:src/thread.cpp **** void TCB::wrapper() {
  42:src/thread.cpp **** 
  43:src/thread.cpp ****     // spp  -> status previous privilege,
  44:src/thread.cpp ****     // spie -> status previous int enable
  45:src/thread.cpp **** 
  46:src/thread.cpp ****     // came from supervisor trap (s mode)
  47:src/thread.cpp **** 
  48:src/thread.cpp ****     // RISCV::popSppSpie();
  49:src/thread.cpp **** 
  50:src/thread.cpp ****     if (running->routine) running->routine(running->args); // in user mode
  51:src/thread.cpp **** 
  52:src/thread.cpp ****     running->finish();
  53:src/thread.cpp **** 
  54:src/thread.cpp ****     dispatch();
  55:src/thread.cpp **** 
  56:src/thread.cpp ****     // no return address from wrapper
  57:src/thread.cpp **** }
  58:src/thread.cpp **** 
  59:src/thread.cpp **** void TCB::yield(TCB* oldRunning, TCB* newRunning) {
  77              		.loc 1 59 51 is_stmt 1
  78              		.cfi_startproc
  79              	.LVL1:
  80 0060 130101FE 		addi	sp,sp,-32
  81              		.cfi_def_cfa_offset 32
  82 0064 233C1100 		sd	ra,24(sp)
  83 0068 23388100 		sd	s0,16(sp)
  84 006c 23349100 		sd	s1,8(sp)
  85 0070 23302101 		sd	s2,0(sp)
  86              		.cfi_offset 1, -8
  87              		.cfi_offset 8, -16
  88              		.cfi_offset 9, -24
  89              		.cfi_offset 18, -32
  90 0074 13040102 		addi	s0,sp,32
  91              		.cfi_def_cfa 8, 0
  92 0078 93040500 		mv	s1,a0
  93 007c 13890500 		mv	s2,a1
  60:src/thread.cpp **** 
  61:src/thread.cpp ****     // async interrupts =>
  62:src/thread.cpp ****     // (1) save old context, registers
  63:src/thread.cpp ****     // (2) handle cause ( RISCV::supervisor_trap )
  64:src/thread.cpp **** 
  65:src/thread.cpp ****     // (3) possible context switch -> pop regs >>> YIELD
  66:src/thread.cpp **** 
  67:src/thread.cpp ****     RISCV::push_regs();
  94              		.loc 1 67 5
  95              		.loc 1 67 21 is_stmt 0
  96 0080 97000000 		call	_ZN5RISCV9push_regsEv@plt
  96      E7800000 
  97              	.LVL2:
  68:src/thread.cpp ****     contextSwitch(&oldRunning->context, &newRunning->context);
  98              		.loc 1 68 5 is_stmt 1
  99              		.loc 1 68 18 is_stmt 0
 100 0088 93058904 		addi	a1,s2,72
 101 008c 13858404 		addi	a0,s1,72
 102 0090 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 102      E7800000 
 103              	.LVL3:
GAS LISTING /tmp/ccTdCIur.s 			page 4


  69:src/thread.cpp ****     RISCV::pop_regs();
 104              		.loc 1 69 5 is_stmt 1
 105              		.loc 1 69 20 is_stmt 0
 106 0098 97000000 		call	_ZN5RISCV8pop_regsEv@plt
 106      E7800000 
 107              	.LVL4:
  70:src/thread.cpp **** }
 108              		.loc 1 70 1
 109 00a0 83308101 		ld	ra,24(sp)
 110              		.cfi_restore 1
 111 00a4 03340101 		ld	s0,16(sp)
 112              		.cfi_restore 8
 113              		.cfi_def_cfa 2, 32
 114 00a8 83348100 		ld	s1,8(sp)
 115              		.cfi_restore 9
 116              	.LVL5:
 117 00ac 03390100 		ld	s2,0(sp)
 118              		.cfi_restore 18
 119              	.LVL6:
 120 00b0 13010102 		addi	sp,sp,32
 121              		.cfi_def_cfa_offset 0
 122 00b4 67800000 		jr	ra
 123              		.cfi_endproc
 124              	.LFE30:
 126              		.align	2
 127              		.globl	_ZN3TCBnwEm
 129              	_ZN3TCBnwEm:
 130              	.LFB32:
  71:src/thread.cpp **** 
  72:src/thread.cpp **** void TCB::dispatch() {
  73:src/thread.cpp **** 
  74:src/thread.cpp ****     TCB *oldRunning = TCB::running;
  75:src/thread.cpp ****     if ( isRunnable() ) Scheduler::put(oldRunning);
  76:src/thread.cpp ****     running = Scheduler::get();
  77:src/thread.cpp ****     if (running != oldRunning) yield(oldRunning, running);
  78:src/thread.cpp **** }
  79:src/thread.cpp **** 
  80:src/thread.cpp **** void *TCB::operator new(size_t size) {
 131              		.loc 1 80 38 is_stmt 1
 132              		.cfi_startproc
 133              	.LVL7:
 134 00b8 130101FF 		addi	sp,sp,-16
 135              		.cfi_def_cfa_offset 16
 136 00bc 23341100 		sd	ra,8(sp)
 137 00c0 23308100 		sd	s0,0(sp)
 138              		.cfi_offset 1, -8
 139              		.cfi_offset 8, -16
 140 00c4 13040101 		addi	s0,sp,16
 141              		.cfi_def_cfa 8, 0
  81:src/thread.cpp ****     // mem alloc (Memory Allocator klasa) prima broj blokova
  82:src/thread.cpp ****     size_t blocks = (size + sizeof(MemoryAllocator::MemoryBlock) + MEM_BLOCK_SIZE - 1) / MEM_BLOCK_
 142              		.loc 1 82 5
 143              		.loc 1 82 83 is_stmt 0
 144 00c8 13057505 		addi	a0,a0,87
 145              	.LVL8:
  83:src/thread.cpp ****     return MemoryAllocator::mem_alloc(blocks);
 146              		.loc 1 83 5 is_stmt 1
GAS LISTING /tmp/ccTdCIur.s 			page 5


 147              		.loc 1 83 38 is_stmt 0
 148 00cc 13556500 		srli	a0,a0,6
 149              	.LVL9:
 150 00d0 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 150      E7800000 
 151              	.LVL10:
  84:src/thread.cpp **** }
 152              		.loc 1 84 1
 153 00d8 83308100 		ld	ra,8(sp)
 154              		.cfi_restore 1
 155 00dc 03340100 		ld	s0,0(sp)
 156              		.cfi_restore 8
 157              		.cfi_def_cfa 2, 16
 158 00e0 13010101 		addi	sp,sp,16
 159              		.cfi_def_cfa_offset 0
 160 00e4 67800000 		jr	ra
 161              		.cfi_endproc
 162              	.LFE32:
 164              		.align	2
 165              		.globl	_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_
 167              	_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_:
 168              	.LFB28:
  24:src/thread.cpp ****     Context context = {
 169              		.loc 1 24 90 is_stmt 1
 170              		.cfi_startproc
 171              	.LVL11:
 172 00e8 130101FA 		addi	sp,sp,-96
 173              		.cfi_def_cfa_offset 96
 174 00ec 233C1104 		sd	ra,88(sp)
 175 00f0 23388104 		sd	s0,80(sp)
 176 00f4 23349104 		sd	s1,72(sp)
 177 00f8 23302105 		sd	s2,64(sp)
 178 00fc 233C3103 		sd	s3,56(sp)
 179 0100 23384103 		sd	s4,48(sp)
 180 0104 23345103 		sd	s5,40(sp)
 181              		.cfi_offset 1, -8
 182              		.cfi_offset 8, -16
 183              		.cfi_offset 9, -24
 184              		.cfi_offset 18, -32
 185              		.cfi_offset 19, -40
 186              		.cfi_offset 20, -48
 187              		.cfi_offset 21, -56
 188 0108 13040106 		addi	s0,sp,96
 189              		.cfi_def_cfa 8, 0
 190 010c 130A0500 		mv	s4,a0
 191 0110 93840500 		mv	s1,a1
 192 0114 930A0600 		mv	s5,a2
 193 0118 13890600 		mv	s2,a3
  25:src/thread.cpp **** 
 194              		.loc 1 25 5
  25:src/thread.cpp **** 
 195              		.loc 1 25 13 is_stmt 0
 196 011c 97070000 		lla	a5,_ZN3TCB7wrapperEv
 196      93870700 
 197 0124 2330F4FA 		sd	a5,-96(s0)
  31:src/thread.cpp **** 
 198              		.loc 1 31 32
GAS LISTING /tmp/ccTdCIur.s 			page 6


 199 0128 63820508 		beqz	a1,.L10
  31:src/thread.cpp **** 
 200              		.loc 1 31 88 discriminator 1
 201 012c B7170000 		li	a5,4096
 202 0130 9387F7FF 		addi	a5,a5,-1
 203 0134 B387F600 		add	a5,a3,a5
 204              	.L8:
  36:src/thread.cpp ****     if (routine) Scheduler::put(*handle);
 205              		.loc 1 36 5 is_stmt 1
  36:src/thread.cpp ****     if (routine) Scheduler::put(*handle);
 206              		.loc 1 36 13 is_stmt 0
 207 0138 033704FA 		ld	a4,-96(s0)
 208 013c 2338E4FA 		sd	a4,-80(s0)
 209 0140 233CF4FA 		sd	a5,-72(s0)
  36:src/thread.cpp ****     if (routine) Scheduler::put(*handle);
 210              		.loc 1 36 59
 211 0144 13050006 		li	a0,96
 212              	.LVL12:
 213 0148 97000000 		call	_ZN3TCBnwEm
 213      E7800000 
 214              	.LVL13:
 215 0150 93090500 		mv	s3,a0
 216 0154 033704FB 		ld	a4,-80(s0)
 217 0158 833784FB 		ld	a5,-72(s0)
 218 015c 93060900 		mv	a3,s2
 219 0160 13860A00 		mv	a2,s5
 220 0164 93850400 		mv	a1,s1
 221 0168 97000000 		call	_ZN3TCBC1EPFvPvES0_S0_NS_7ContextE
 221      E7800000 
 222              	.LVL14:
  36:src/thread.cpp ****     if (routine) Scheduler::put(*handle);
 223              		.loc 1 36 13
 224 0170 23303A01 		sd	s3,0(s4)
  37:src/thread.cpp ****     return 0;
 225              		.loc 1 37 5 is_stmt 1
 226 0174 63880400 		beqz	s1,.L9
  37:src/thread.cpp ****     return 0;
 227              		.loc 1 37 18 discriminator 1
  37:src/thread.cpp ****     return 0;
 228              		.loc 1 37 32 is_stmt 0 discriminator 1
 229 0178 13850900 		mv	a0,s3
 230 017c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 230      E7800000 
 231              	.LVL15:
 232              	.L9:
  38:src/thread.cpp **** }
 233              		.loc 1 38 5 is_stmt 1
  39:src/thread.cpp **** 
 234              		.loc 1 39 1 is_stmt 0
 235 0184 13050000 		li	a0,0
 236 0188 83308105 		ld	ra,88(sp)
 237              		.cfi_remember_state
 238              		.cfi_restore 1
 239 018c 03340105 		ld	s0,80(sp)
 240              		.cfi_restore 8
 241              		.cfi_def_cfa 2, 96
 242 0190 83348104 		ld	s1,72(sp)
GAS LISTING /tmp/ccTdCIur.s 			page 7


 243              		.cfi_restore 9
 244              	.LVL16:
 245 0194 03390104 		ld	s2,64(sp)
 246              		.cfi_restore 18
 247              	.LVL17:
 248 0198 83398103 		ld	s3,56(sp)
 249              		.cfi_restore 19
 250 019c 033A0103 		ld	s4,48(sp)
 251              		.cfi_restore 20
 252              	.LVL18:
 253 01a0 833A8102 		ld	s5,40(sp)
 254              		.cfi_restore 21
 255              	.LVL19:
 256 01a4 13010106 		addi	sp,sp,96
 257              		.cfi_def_cfa_offset 0
 258 01a8 67800000 		jr	ra
 259              	.LVL20:
 260              	.L10:
 261              		.cfi_restore_state
  31:src/thread.cpp **** 
 262              		.loc 1 31 32
 263 01ac 93070000 		li	a5,0
 264 01b0 6FF09FF8 		j	.L8
 265              		.cfi_endproc
 266              	.LFE28:
 268              		.align	2
 269              		.globl	_ZN3TCBdlEPv
 271              	_ZN3TCBdlEPv:
 272              	.LFB33:
  85:src/thread.cpp **** 
  86:src/thread.cpp **** void TCB::operator delete(void *ptr) {
 273              		.loc 1 86 38 is_stmt 1
 274              		.cfi_startproc
 275              	.LVL21:
 276 01b4 130101FF 		addi	sp,sp,-16
 277              		.cfi_def_cfa_offset 16
 278 01b8 23341100 		sd	ra,8(sp)
 279 01bc 23308100 		sd	s0,0(sp)
 280              		.cfi_offset 1, -8
 281              		.cfi_offset 8, -16
 282 01c0 13040101 		addi	s0,sp,16
 283              		.cfi_def_cfa 8, 0
  87:src/thread.cpp ****     MemoryAllocator::mem_free(ptr);
 284              		.loc 1 87 5
 285              		.loc 1 87 30 is_stmt 0
 286 01c4 97000000 		call	_ZN15MemoryAllocator8mem_freeEPKv@plt
 286      E7800000 
 287              	.LVL22:
  88:src/thread.cpp **** }
 288              		.loc 1 88 1
 289 01cc 83308100 		ld	ra,8(sp)
 290              		.cfi_restore 1
 291 01d0 03340100 		ld	s0,0(sp)
 292              		.cfi_restore 8
 293              		.cfi_def_cfa 2, 16
 294 01d4 13010101 		addi	sp,sp,16
 295              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccTdCIur.s 			page 8


 296 01d8 67800000 		jr	ra
 297              		.cfi_endproc
 298              	.LFE33:
 300              		.align	2
 301              		.globl	_ZN3TCB5startEv
 303              	_ZN3TCB5startEv:
 304              	.LFB34:
  89:src/thread.cpp **** 
  90:src/thread.cpp **** void TCB::start() {
 305              		.loc 1 90 19 is_stmt 1
 306              		.cfi_startproc
 307              	.LVL23:
 308 01dc 130101FF 		addi	sp,sp,-16
 309              		.cfi_def_cfa_offset 16
 310 01e0 23341100 		sd	ra,8(sp)
 311 01e4 23308100 		sd	s0,0(sp)
 312              		.cfi_offset 1, -8
 313              		.cfi_offset 8, -16
 314 01e8 13040101 		addi	s0,sp,16
 315              		.cfi_def_cfa 8, 0
  91:src/thread.cpp ****     /// remove from thread create !
  92:src/thread.cpp ****     Scheduler::put(this);
 316              		.loc 1 92 5
 317              		.loc 1 92 19 is_stmt 0
 318 01ec 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 318      E7800000 
 319              	.LVL24:
  93:src/thread.cpp **** 
  94:src/thread.cpp **** }
 320              		.loc 1 94 1
 321 01f4 83308100 		ld	ra,8(sp)
 322              		.cfi_restore 1
 323 01f8 03340100 		ld	s0,0(sp)
 324              		.cfi_restore 8
 325              		.cfi_def_cfa 2, 16
 326 01fc 13010101 		addi	sp,sp,16
 327              		.cfi_def_cfa_offset 0
 328 0200 67800000 		jr	ra
 329              		.cfi_endproc
 330              	.LFE34:
 332              		.align	2
 333              		.globl	_ZN3TCB10isRunnableEv
 335              	_ZN3TCB10isRunnableEv:
 336              	.LFB35:
  95:src/thread.cpp **** 
  96:src/thread.cpp **** bool TCB::isRunnable() {
 337              		.loc 1 96 24 is_stmt 1
 338              		.cfi_startproc
 339 0204 130101FF 		addi	sp,sp,-16
 340              		.cfi_def_cfa_offset 16
 341 0208 23348100 		sd	s0,8(sp)
 342              		.cfi_offset 8, -8
 343 020c 13040101 		addi	s0,sp,16
 344              		.cfi_def_cfa 8, 0
  97:src/thread.cpp ****     return running->current_state == RUNNABLE; }
 345              		.loc 1 97 5
 346              		.loc 1 97 21 is_stmt 0
GAS LISTING /tmp/ccTdCIur.s 			page 9


 347 0210 97070000 		ld	a5,.LANCHOR0+8
 347      83B70700 
 348 0218 03A58705 		lw	a0,88(a5)
 349              		.loc 1 97 48
 350 021c 13351500 		seqz	a0,a0
 351 0220 03348100 		ld	s0,8(sp)
 352              		.cfi_restore 8
 353              		.cfi_def_cfa 2, 16
 354 0224 13010101 		addi	sp,sp,16
 355              		.cfi_def_cfa_offset 0
 356 0228 67800000 		jr	ra
 357              		.cfi_endproc
 358              	.LFE35:
 360              		.align	2
 361              		.globl	_ZN3TCB8dispatchEv
 363              	_ZN3TCB8dispatchEv:
 364              	.LFB31:
  72:src/thread.cpp **** 
 365              		.loc 1 72 22 is_stmt 1
 366              		.cfi_startproc
 367 022c 130101FE 		addi	sp,sp,-32
 368              		.cfi_def_cfa_offset 32
 369 0230 233C1100 		sd	ra,24(sp)
 370 0234 23388100 		sd	s0,16(sp)
 371 0238 23349100 		sd	s1,8(sp)
 372              		.cfi_offset 1, -8
 373              		.cfi_offset 8, -16
 374              		.cfi_offset 9, -24
 375 023c 13040102 		addi	s0,sp,32
 376              		.cfi_def_cfa 8, 0
  74:src/thread.cpp ****     if ( isRunnable() ) Scheduler::put(oldRunning);
 377              		.loc 1 74 5
  74:src/thread.cpp ****     if ( isRunnable() ) Scheduler::put(oldRunning);
 378              		.loc 1 74 10 is_stmt 0
 379 0240 97040000 		ld	s1,.LANCHOR0+8
 379      83B40400 
 380              	.LVL25:
  75:src/thread.cpp ****     running = Scheduler::get();
 381              		.loc 1 75 5 is_stmt 1
  75:src/thread.cpp ****     running = Scheduler::get();
 382              		.loc 1 75 20 is_stmt 0
 383 0248 97000000 		call	_ZN3TCB10isRunnableEv
 383      E7800000 
 384              	.LVL26:
  75:src/thread.cpp ****     running = Scheduler::get();
 385              		.loc 1 75 5
 386 0250 631E0502 		bnez	a0,.L22
 387              	.L19:
  76:src/thread.cpp ****     if (running != oldRunning) yield(oldRunning, running);
 388              		.loc 1 76 5 is_stmt 1
  76:src/thread.cpp ****     if (running != oldRunning) yield(oldRunning, running);
 389              		.loc 1 76 29 is_stmt 0
 390 0254 97000000 		call	_ZN9Scheduler3getEv@plt
 390      E7800000 
 391              	.LVL27:
 392 025c 93050500 		mv	a1,a0
  76:src/thread.cpp ****     if (running != oldRunning) yield(oldRunning, running);
GAS LISTING /tmp/ccTdCIur.s 			page 10


 393              		.loc 1 76 13
 394 0260 97070000 		sd	a0,.LANCHOR0+8,a5
 394      23B0A700 
  77:src/thread.cpp **** }
 395              		.loc 1 77 5 is_stmt 1
 396 0268 6388A400 		beq	s1,a0,.L18
  77:src/thread.cpp **** }
 397              		.loc 1 77 32 discriminator 1
  77:src/thread.cpp **** }
 398              		.loc 1 77 37 is_stmt 0 discriminator 1
 399 026c 13850400 		mv	a0,s1
 400 0270 97000000 		call	_ZN3TCB5yieldEPS_S0_
 400      E7800000 
 401              	.LVL28:
 402              	.L18:
  78:src/thread.cpp **** 
 403              		.loc 1 78 1
 404 0278 83308101 		ld	ra,24(sp)
 405              		.cfi_remember_state
 406              		.cfi_restore 1
 407 027c 03340101 		ld	s0,16(sp)
 408              		.cfi_restore 8
 409              		.cfi_def_cfa 2, 32
 410 0280 83348100 		ld	s1,8(sp)
 411              		.cfi_restore 9
 412              	.LVL29:
 413 0284 13010102 		addi	sp,sp,32
 414              		.cfi_def_cfa_offset 0
 415 0288 67800000 		jr	ra
 416              	.LVL30:
 417              	.L22:
 418              		.cfi_restore_state
  75:src/thread.cpp ****     running = Scheduler::get();
 419              		.loc 1 75 25 is_stmt 1 discriminator 1
  75:src/thread.cpp ****     running = Scheduler::get();
 420              		.loc 1 75 39 is_stmt 0 discriminator 1
 421 028c 13850400 		mv	a0,s1
 422 0290 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 422      E7800000 
 423              	.LVL31:
 424 0298 6FF0DFFB 		j	.L19
 425              		.cfi_endproc
 426              	.LFE31:
 428              		.align	2
 429              		.globl	_ZN3TCB7wrapperEv
 431              	_ZN3TCB7wrapperEv:
 432              	.LFB29:
  41:src/thread.cpp **** 
 433              		.loc 1 41 21 is_stmt 1
 434              		.cfi_startproc
 435 029c 130101FF 		addi	sp,sp,-16
 436              		.cfi_def_cfa_offset 16
 437 02a0 23341100 		sd	ra,8(sp)
 438 02a4 23308100 		sd	s0,0(sp)
 439              		.cfi_offset 1, -8
 440              		.cfi_offset 8, -16
 441 02a8 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccTdCIur.s 			page 11


 442              		.cfi_def_cfa 8, 0
  50:src/thread.cpp **** 
 443              		.loc 1 50 5
  50:src/thread.cpp **** 
 444              		.loc 1 50 18 is_stmt 0
 445 02ac 17070000 		ld	a4,.LANCHOR0+8
 445      03370700 
 446 02b4 83370703 		ld	a5,48(a4)
  50:src/thread.cpp **** 
 447              		.loc 1 50 5
 448 02b8 63860700 		beqz	a5,.L24
  50:src/thread.cpp **** 
 449              		.loc 1 50 27 is_stmt 1 discriminator 1
  50:src/thread.cpp **** 
 450              		.loc 1 50 43 is_stmt 0 discriminator 1
 451 02bc 03358703 		ld	a0,56(a4)
 452 02c0 E7800700 		jalr	a5
 453              	.LVL32:
 454              	.L24:
  52:src/thread.cpp **** 
 455              		.loc 1 52 5 is_stmt 1
 456              	.LBB7:
 457              	.LBB8:
 458              		.file 2 "src/../h/thread.hpp"
   1:src/../h/thread.hpp **** //
   2:src/../h/thread.hpp **** // Created by os on 4/9/24.
   3:src/../h/thread.hpp **** //
   4:src/../h/thread.hpp **** 
   5:src/../h/thread.hpp **** #ifndef PROJECT_BASE_THREAD_HPP
   6:src/../h/thread.hpp **** #define PROJECT_BASE_THREAD_HPP
   7:src/../h/thread.hpp **** 
   8:src/../h/thread.hpp **** #include "../lib/hw.h"
   9:src/../h/thread.hpp **** #include "../h/Memoryallocator.hpp"
  10:src/../h/thread.hpp **** #include "../h/riscv.hpp"
  11:src/../h/thread.hpp **** 
  12:src/../h/thread.hpp **** using routine_ptr = void(*)(void *);
  13:src/../h/thread.hpp **** 
  14:src/../h/thread.hpp **** // _thread je wrapper ove klase
  15:src/../h/thread.hpp **** class TCB final {
  16:src/../h/thread.hpp **** 
  17:src/../h/thread.hpp ****     friend class RISCV;
  18:src/../h/thread.hpp ****     friend class Sem;
  19:src/../h/thread.hpp **** 
  20:src/../h/thread.hpp **** public:
  21:src/../h/thread.hpp **** 
  22:src/../h/thread.hpp ****     static TCB* running; // current thread
  23:src/../h/thread.hpp **** 
  24:src/../h/thread.hpp ****     enum state {
  25:src/../h/thread.hpp ****         RUNNABLE,
  26:src/../h/thread.hpp ****         SLEEPING,
  27:src/../h/thread.hpp ****         JOINED,
  28:src/../h/thread.hpp ****         FINISHED,
  29:src/../h/thread.hpp ****         BLOCKED
  30:src/../h/thread.hpp ****     };
  31:src/../h/thread.hpp ****     struct Context {
  32:src/../h/thread.hpp ****         // nadogradi kasnije
  33:src/../h/thread.hpp ****         uint64 pc;
GAS LISTING /tmp/ccTdCIur.s 			page 12


  34:src/../h/thread.hpp ****         uint64 sp;
  35:src/../h/thread.hpp ****     };
  36:src/../h/thread.hpp **** 
  37:src/../h/thread.hpp ****     void start();
  38:src/../h/thread.hpp **** 
  39:src/../h/thread.hpp ****     static int _threadCreate(TCB** handle, routine_ptr routine, void* args, void* stack_space); // 
  40:src/../h/thread.hpp **** 
  41:src/../h/thread.hpp ****     static void yield(TCB*, TCB*);
  42:src/../h/thread.hpp **** 
  43:src/../h/thread.hpp ****     static void dispatch();
  44:src/../h/thread.hpp **** 
  45:src/../h/thread.hpp ****     state getState() const {return current_state;}
  46:src/../h/thread.hpp ****     time_t getTimeSlice() const {return time_slice;}
  47:src/../h/thread.hpp **** 
  48:src/../h/thread.hpp ****     static bool isRunnable();
  49:src/../h/thread.hpp **** 
  50:src/../h/thread.hpp ****     bool isFinished() {return current_state == state::FINISHED;}
  51:src/../h/thread.hpp ****     void finish() { current_state = state::FINISHED; }
 459              		.loc 2 51 21
 460              		.loc 2 51 35 is_stmt 0
 461 02c4 97070000 		ld	a5,.LANCHOR0+8
 461      83B70700 
 462 02cc 13073000 		li	a4,3
 463 02d0 23ACE704 		sw	a4,88(a5)
 464              	.LVL33:
 465              	.LBE8:
 466              	.LBE7:
  54:src/thread.cpp **** 
 467              		.loc 1 54 5 is_stmt 1
  54:src/thread.cpp **** 
 468              		.loc 1 54 13 is_stmt 0
 469 02d4 97000000 		call	_ZN3TCB8dispatchEv
 469      E7800000 
 470              	.LVL34:
  57:src/thread.cpp **** 
 471              		.loc 1 57 1
 472 02dc 83308100 		ld	ra,8(sp)
 473              		.cfi_restore 1
 474 02e0 03340100 		ld	s0,0(sp)
 475              		.cfi_restore 8
 476              		.cfi_def_cfa 2, 16
 477 02e4 13010101 		addi	sp,sp,16
 478              		.cfi_def_cfa_offset 0
 479 02e8 67800000 		jr	ra
 480              		.cfi_endproc
 481              	.LFE29:
 483              		.align	2
 484              		.globl	_ZN3TCB11_threadExitEv
 486              	_ZN3TCB11_threadExitEv:
 487              	.LFB36:
  98:src/thread.cpp **** 
  99:src/thread.cpp **** int TCB::_threadExit() {
 488              		.loc 1 99 24 is_stmt 1
 489              		.cfi_startproc
 490 02ec 130101FE 		addi	sp,sp,-32
 491              		.cfi_def_cfa_offset 32
 492 02f0 233C1100 		sd	ra,24(sp)
GAS LISTING /tmp/ccTdCIur.s 			page 13


 493 02f4 23388100 		sd	s0,16(sp)
 494 02f8 23349100 		sd	s1,8(sp)
 495 02fc 23302101 		sd	s2,0(sp)
 496              		.cfi_offset 1, -8
 497              		.cfi_offset 8, -16
 498              		.cfi_offset 9, -24
 499              		.cfi_offset 18, -32
 500 0300 13040102 		addi	s0,sp,32
 501              		.cfi_def_cfa 8, 0
 100:src/thread.cpp ****     TCB::running -> finish();
 502              		.loc 1 100 5
 503              		.loc 1 100 27 is_stmt 0
 504 0304 17090000 		lla	s2,.LANCHOR0
 504      13090900 
 505 030c 83348900 		ld	s1,8(s2)
 506              	.LVL35:
 507              	.LBB9:
 508              	.LBB10:
 509              		.loc 2 51 21 is_stmt 1
 510              		.loc 2 51 35 is_stmt 0
 511 0310 93073000 		li	a5,3
 512 0314 23ACF404 		sw	a5,88(s1)
 513              	.LVL36:
 514              	.LBE10:
 515              	.LBE9:
 101:src/thread.cpp **** 
 102:src/thread.cpp ****     // check if semaphore signal needed ?
 103:src/thread.cpp ****     // don't put in Scheduler -> call yield only
 104:src/thread.cpp **** 
 105:src/thread.cpp ****     TCB* toExit = TCB::running;
 516              		.loc 1 105 5 is_stmt 1
 106:src/thread.cpp ****     TCB::running = Scheduler::get();
 517              		.loc 1 106 5
 518              		.loc 1 106 34 is_stmt 0
 519 0318 97000000 		call	_ZN9Scheduler3getEv@plt
 519      E7800000 
 520              	.LVL37:
 521 0320 93050500 		mv	a1,a0
 522              		.loc 1 106 18
 523 0324 2334A900 		sd	a0,8(s2)
 107:src/thread.cpp ****     yield(toExit, running);
 524              		.loc 1 107 5 is_stmt 1
 525              		.loc 1 107 10 is_stmt 0
 526 0328 13850400 		mv	a0,s1
 527 032c 97000000 		call	_ZN3TCB5yieldEPS_S0_
 527      E7800000 
 528              	.LVL38:
 108:src/thread.cpp **** 
 109:src/thread.cpp ****     return 0;
 529              		.loc 1 109 5 is_stmt 1
 110:src/thread.cpp **** }
 530              		.loc 1 110 1 is_stmt 0
 531 0334 13050000 		li	a0,0
 532 0338 83308101 		ld	ra,24(sp)
 533              		.cfi_restore 1
 534 033c 03340101 		ld	s0,16(sp)
 535              		.cfi_restore 8
GAS LISTING /tmp/ccTdCIur.s 			page 14


 536              		.cfi_def_cfa 2, 32
 537 0340 83348100 		ld	s1,8(sp)
 538              		.cfi_restore 9
 539              	.LVL39:
 540 0344 03390100 		ld	s2,0(sp)
 541              		.cfi_restore 18
 542 0348 13010102 		addi	sp,sp,32
 543              		.cfi_def_cfa_offset 0
 544 034c 67800000 		jr	ra
 545              		.cfi_endproc
 546              	.LFE36:
 548              		.globl	_ZN3TCB16time_slice_countE
 549              		.globl	_ZN3TCB7runningE
 550              		.globl	_ZN3TCB8id_countE
 551              		.bss
 552              		.align	3
 553              		.set	.LANCHOR0,. + 0
 556              	_ZN3TCB8id_countE:
 557 0000 00000000 		.zero	4
 558 0004 00000000 		.zero	4
 561              	_ZN3TCB7runningE:
 562 0008 00000000 		.zero	8
 562      00000000 
 565              	_ZN3TCB16time_slice_countE:
 566 0010 00000000 		.zero	8
 566      00000000 
 567              		.text
 568              	.Letext0:
 569              		.file 3 "src/../h/../lib/hw.h"
 570              		.file 4 "src/../h/../h/Memoryallocator.hpp"
 571              		.file 5 "src/../h/../h/riscv.hpp"
 572              		.file 6 "src/../h/Scheduler.hpp"
GAS LISTING /tmp/ccTdCIur.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 thread.cpp
     /tmp/ccTdCIur.s:9      .text:0000000000000000 _ZN3TCBC2EPFvPvES0_S0_NS_7ContextE
     /tmp/ccTdCIur.s:13     .text:0000000000000000 .L0 
     /tmp/ccTdCIur.s:15     .text:0000000000000000 .L0 
     /tmp/ccTdCIur.s:16     .text:0000000000000004 .L0 
     /tmp/ccTdCIur.s:18     .text:0000000000000008 .L0 
     /tmp/ccTdCIur.s:20     .text:000000000000000c .L0 
     /tmp/ccTdCIur.s:23     .text:000000000000000c .L0 
     /tmp/ccTdCIur.s:27     .text:0000000000000018 .L0 
     /tmp/ccTdCIur.s:28     .text:0000000000000018 .L0 
     /tmp/ccTdCIur.s:33     .text:000000000000002c .L0 
     /tmp/ccTdCIur.s:35     .text:0000000000000030 .L0 
     /tmp/ccTdCIur.s:36     .text:0000000000000030 .L0 
     /tmp/ccTdCIur.s:38     .text:0000000000000034 .L0 
     /tmp/ccTdCIur.s:39     .text:0000000000000034 .L0 
     /tmp/ccTdCIur.s:41     .text:0000000000000038 .L0 
     /tmp/ccTdCIur.s:42     .text:0000000000000038 .L0 
     /tmp/ccTdCIur.s:44     .text:000000000000003c .L0 
     /tmp/ccTdCIur.s:45     .text:000000000000003c .L0 
     /tmp/ccTdCIur.s:47     .text:0000000000000040 .L0 
     /tmp/ccTdCIur.s:48     .text:0000000000000040 .L0 
     /tmp/ccTdCIur.s:50     .text:0000000000000044 .L0 
     /tmp/ccTdCIur.s:51     .text:0000000000000044 .L0 
     /tmp/ccTdCIur.s:53     .text:0000000000000048 .L0 
     /tmp/ccTdCIur.s:54     .text:0000000000000048 .L0 
     /tmp/ccTdCIur.s:56     .text:000000000000004c .L0 
     /tmp/ccTdCIur.s:57     .text:000000000000004c .L0 
     /tmp/ccTdCIur.s:61     .text:0000000000000054 .L0 
     /tmp/ccTdCIur.s:62     .text:0000000000000058 .L0 
     /tmp/ccTdCIur.s:63     .text:0000000000000058 .L0 
     /tmp/ccTdCIur.s:65     .text:000000000000005c .L0 
     /tmp/ccTdCIur.s:67     .text:0000000000000060 .L0 
     /tmp/ccTdCIur.s:9      .text:0000000000000000 _ZN3TCBC1EPFvPvES0_S0_NS_7ContextE
     /tmp/ccTdCIur.s:75     .text:0000000000000060 _ZN3TCB5yieldEPS_S0_
     /tmp/ccTdCIur.s:78     .text:0000000000000060 .L0 
     /tmp/ccTdCIur.s:80     .text:0000000000000060 .L0 
     /tmp/ccTdCIur.s:81     .text:0000000000000064 .L0 
     /tmp/ccTdCIur.s:86     .text:0000000000000074 .L0 
     /tmp/ccTdCIur.s:87     .text:0000000000000074 .L0 
     /tmp/ccTdCIur.s:88     .text:0000000000000074 .L0 
     /tmp/ccTdCIur.s:89     .text:0000000000000074 .L0 
     /tmp/ccTdCIur.s:91     .text:0000000000000078 .L0 
     /tmp/ccTdCIur.s:95     .text:0000000000000080 .L0 
     /tmp/ccTdCIur.s:96     .text:0000000000000080 .L0 
     /tmp/ccTdCIur.s:99     .text:0000000000000088 .L0 
     /tmp/ccTdCIur.s:100    .text:0000000000000088 .L0 
     /tmp/ccTdCIur.s:105    .text:0000000000000098 .L0 
     /tmp/ccTdCIur.s:106    .text:0000000000000098 .L0 
     /tmp/ccTdCIur.s:109    .text:00000000000000a0 .L0 
     /tmp/ccTdCIur.s:110    .text:00000000000000a4 .L0 
     /tmp/ccTdCIur.s:112    .text:00000000000000a8 .L0 
     /tmp/ccTdCIur.s:113    .text:00000000000000a8 .L0 
     /tmp/ccTdCIur.s:115    .text:00000000000000ac .L0 
     /tmp/ccTdCIur.s:118    .text:00000000000000b0 .L0 
     /tmp/ccTdCIur.s:121    .text:00000000000000b4 .L0 
     /tmp/ccTdCIur.s:123    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccTdCIur.s 			page 16


     /tmp/ccTdCIur.s:129    .text:00000000000000b8 _ZN3TCBnwEm
     /tmp/ccTdCIur.s:132    .text:00000000000000b8 .L0 
     /tmp/ccTdCIur.s:134    .text:00000000000000b8 .L0 
     /tmp/ccTdCIur.s:135    .text:00000000000000bc .L0 
     /tmp/ccTdCIur.s:138    .text:00000000000000c4 .L0 
     /tmp/ccTdCIur.s:139    .text:00000000000000c4 .L0 
     /tmp/ccTdCIur.s:141    .text:00000000000000c8 .L0 
     /tmp/ccTdCIur.s:143    .text:00000000000000c8 .L0 
     /tmp/ccTdCIur.s:144    .text:00000000000000c8 .L0 
     /tmp/ccTdCIur.s:147    .text:00000000000000cc .L0 
     /tmp/ccTdCIur.s:148    .text:00000000000000cc .L0 
     /tmp/ccTdCIur.s:153    .text:00000000000000d8 .L0 
     /tmp/ccTdCIur.s:154    .text:00000000000000dc .L0 
     /tmp/ccTdCIur.s:156    .text:00000000000000e0 .L0 
     /tmp/ccTdCIur.s:157    .text:00000000000000e0 .L0 
     /tmp/ccTdCIur.s:159    .text:00000000000000e4 .L0 
     /tmp/ccTdCIur.s:161    .text:00000000000000e8 .L0 
     /tmp/ccTdCIur.s:167    .text:00000000000000e8 _ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_
     /tmp/ccTdCIur.s:170    .text:00000000000000e8 .L0 
     /tmp/ccTdCIur.s:172    .text:00000000000000e8 .L0 
     /tmp/ccTdCIur.s:173    .text:00000000000000ec .L0 
     /tmp/ccTdCIur.s:181    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:182    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:183    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:184    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:185    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:186    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:187    .text:0000000000000108 .L0 
     /tmp/ccTdCIur.s:189    .text:000000000000010c .L0 
     /tmp/ccTdCIur.s:195    .text:000000000000011c .L0 
     /tmp/ccTdCIur.s:431    .text:000000000000029c _ZN3TCB7wrapperEv
     /tmp/ccTdCIur.s:196    .text:000000000000011c .L0 
     /tmp/ccTdCIur.s:199    .text:0000000000000128 .L0 
     /tmp/ccTdCIur.s:201    .text:000000000000012c .L0 
     /tmp/ccTdCIur.s:206    .text:0000000000000138 .L0 
     /tmp/ccTdCIur.s:207    .text:0000000000000138 .L0 
     /tmp/ccTdCIur.s:211    .text:0000000000000144 .L0 
     /tmp/ccTdCIur.s:224    .text:0000000000000170 .L0 
     /tmp/ccTdCIur.s:226    .text:0000000000000174 .L0 
     /tmp/ccTdCIur.s:228    .text:0000000000000178 .L0 
     /tmp/ccTdCIur.s:229    .text:0000000000000178 .L0 
     /tmp/ccTdCIur.s:234    .text:0000000000000184 .L0 
     /tmp/ccTdCIur.s:235    .text:0000000000000184 .L0 
     /tmp/ccTdCIur.s:237    .text:000000000000018c .L0 
     /tmp/ccTdCIur.s:238    .text:000000000000018c .L0 
     /tmp/ccTdCIur.s:240    .text:0000000000000190 .L0 
     /tmp/ccTdCIur.s:241    .text:0000000000000190 .L0 
     /tmp/ccTdCIur.s:243    .text:0000000000000194 .L0 
     /tmp/ccTdCIur.s:246    .text:0000000000000198 .L0 
     /tmp/ccTdCIur.s:249    .text:000000000000019c .L0 
     /tmp/ccTdCIur.s:251    .text:00000000000001a0 .L0 
     /tmp/ccTdCIur.s:254    .text:00000000000001a4 .L0 
     /tmp/ccTdCIur.s:257    .text:00000000000001a8 .L0 
     /tmp/ccTdCIur.s:261    .text:00000000000001ac .L0 
     /tmp/ccTdCIur.s:263    .text:00000000000001ac .L0 
     /tmp/ccTdCIur.s:265    .text:00000000000001b4 .L0 
     /tmp/ccTdCIur.s:271    .text:00000000000001b4 _ZN3TCBdlEPv
GAS LISTING /tmp/ccTdCIur.s 			page 17


     /tmp/ccTdCIur.s:274    .text:00000000000001b4 .L0 
     /tmp/ccTdCIur.s:276    .text:00000000000001b4 .L0 
     /tmp/ccTdCIur.s:277    .text:00000000000001b8 .L0 
     /tmp/ccTdCIur.s:280    .text:00000000000001c0 .L0 
     /tmp/ccTdCIur.s:281    .text:00000000000001c0 .L0 
     /tmp/ccTdCIur.s:283    .text:00000000000001c4 .L0 
     /tmp/ccTdCIur.s:285    .text:00000000000001c4 .L0 
     /tmp/ccTdCIur.s:286    .text:00000000000001c4 .L0 
     /tmp/ccTdCIur.s:289    .text:00000000000001cc .L0 
     /tmp/ccTdCIur.s:290    .text:00000000000001d0 .L0 
     /tmp/ccTdCIur.s:292    .text:00000000000001d4 .L0 
     /tmp/ccTdCIur.s:293    .text:00000000000001d4 .L0 
     /tmp/ccTdCIur.s:295    .text:00000000000001d8 .L0 
     /tmp/ccTdCIur.s:297    .text:00000000000001dc .L0 
     /tmp/ccTdCIur.s:303    .text:00000000000001dc _ZN3TCB5startEv
     /tmp/ccTdCIur.s:306    .text:00000000000001dc .L0 
     /tmp/ccTdCIur.s:308    .text:00000000000001dc .L0 
     /tmp/ccTdCIur.s:309    .text:00000000000001e0 .L0 
     /tmp/ccTdCIur.s:312    .text:00000000000001e8 .L0 
     /tmp/ccTdCIur.s:313    .text:00000000000001e8 .L0 
     /tmp/ccTdCIur.s:315    .text:00000000000001ec .L0 
     /tmp/ccTdCIur.s:317    .text:00000000000001ec .L0 
     /tmp/ccTdCIur.s:318    .text:00000000000001ec .L0 
     /tmp/ccTdCIur.s:321    .text:00000000000001f4 .L0 
     /tmp/ccTdCIur.s:322    .text:00000000000001f8 .L0 
     /tmp/ccTdCIur.s:324    .text:00000000000001fc .L0 
     /tmp/ccTdCIur.s:325    .text:00000000000001fc .L0 
     /tmp/ccTdCIur.s:327    .text:0000000000000200 .L0 
     /tmp/ccTdCIur.s:329    .text:0000000000000204 .L0 
     /tmp/ccTdCIur.s:335    .text:0000000000000204 _ZN3TCB10isRunnableEv
     /tmp/ccTdCIur.s:338    .text:0000000000000204 .L0 
     /tmp/ccTdCIur.s:339    .text:0000000000000204 .L0 
     /tmp/ccTdCIur.s:340    .text:0000000000000208 .L0 
     /tmp/ccTdCIur.s:342    .text:000000000000020c .L0 
     /tmp/ccTdCIur.s:344    .text:0000000000000210 .L0 
     /tmp/ccTdCIur.s:346    .text:0000000000000210 .L0 
     /tmp/ccTdCIur.s:347    .text:0000000000000210 .L0 
     /tmp/ccTdCIur.s:350    .text:000000000000021c .L0 
     /tmp/ccTdCIur.s:352    .text:0000000000000224 .L0 
     /tmp/ccTdCIur.s:353    .text:0000000000000224 .L0 
     /tmp/ccTdCIur.s:355    .text:0000000000000228 .L0 
     /tmp/ccTdCIur.s:357    .text:000000000000022c .L0 
     /tmp/ccTdCIur.s:363    .text:000000000000022c _ZN3TCB8dispatchEv
     /tmp/ccTdCIur.s:366    .text:000000000000022c .L0 
     /tmp/ccTdCIur.s:367    .text:000000000000022c .L0 
     /tmp/ccTdCIur.s:368    .text:0000000000000230 .L0 
     /tmp/ccTdCIur.s:372    .text:000000000000023c .L0 
     /tmp/ccTdCIur.s:373    .text:000000000000023c .L0 
     /tmp/ccTdCIur.s:374    .text:000000000000023c .L0 
     /tmp/ccTdCIur.s:376    .text:0000000000000240 .L0 
     /tmp/ccTdCIur.s:378    .text:0000000000000240 .L0 
     /tmp/ccTdCIur.s:379    .text:0000000000000240 .L0 
     /tmp/ccTdCIur.s:382    .text:0000000000000248 .L0 
     /tmp/ccTdCIur.s:383    .text:0000000000000248 .L0 
     /tmp/ccTdCIur.s:386    .text:0000000000000250 .L0 
     /tmp/ccTdCIur.s:389    .text:0000000000000254 .L0 
     /tmp/ccTdCIur.s:390    .text:0000000000000254 .L0 
GAS LISTING /tmp/ccTdCIur.s 			page 18


     /tmp/ccTdCIur.s:394    .text:0000000000000260 .L0 
     /tmp/ccTdCIur.s:396    .text:0000000000000268 .L0 
     /tmp/ccTdCIur.s:398    .text:000000000000026c .L0 
     /tmp/ccTdCIur.s:399    .text:000000000000026c .L0 
     /tmp/ccTdCIur.s:404    .text:0000000000000278 .L0 
     /tmp/ccTdCIur.s:405    .text:000000000000027c .L0 
     /tmp/ccTdCIur.s:406    .text:000000000000027c .L0 
     /tmp/ccTdCIur.s:408    .text:0000000000000280 .L0 
     /tmp/ccTdCIur.s:409    .text:0000000000000280 .L0 
     /tmp/ccTdCIur.s:411    .text:0000000000000284 .L0 
     /tmp/ccTdCIur.s:414    .text:0000000000000288 .L0 
     /tmp/ccTdCIur.s:418    .text:000000000000028c .L0 
     /tmp/ccTdCIur.s:420    .text:000000000000028c .L0 
     /tmp/ccTdCIur.s:421    .text:000000000000028c .L0 
     /tmp/ccTdCIur.s:425    .text:000000000000029c .L0 
     /tmp/ccTdCIur.s:434    .text:000000000000029c .L0 
     /tmp/ccTdCIur.s:435    .text:000000000000029c .L0 
     /tmp/ccTdCIur.s:436    .text:00000000000002a0 .L0 
     /tmp/ccTdCIur.s:439    .text:00000000000002a8 .L0 
     /tmp/ccTdCIur.s:440    .text:00000000000002a8 .L0 
     /tmp/ccTdCIur.s:442    .text:00000000000002ac .L0 
     /tmp/ccTdCIur.s:444    .text:00000000000002ac .L0 
     /tmp/ccTdCIur.s:445    .text:00000000000002ac .L0 
     /tmp/ccTdCIur.s:448    .text:00000000000002b8 .L0 
     /tmp/ccTdCIur.s:450    .text:00000000000002bc .L0 
     /tmp/ccTdCIur.s:451    .text:00000000000002bc .L0 
     /tmp/ccTdCIur.s:459    .text:00000000000002c4 .L0 
     /tmp/ccTdCIur.s:460    .text:00000000000002c4 .L0 
     /tmp/ccTdCIur.s:461    .text:00000000000002c4 .L0 
     /tmp/ccTdCIur.s:468    .text:00000000000002d4 .L0 
     /tmp/ccTdCIur.s:469    .text:00000000000002d4 .L0 
     /tmp/ccTdCIur.s:472    .text:00000000000002dc .L0 
     /tmp/ccTdCIur.s:473    .text:00000000000002e0 .L0 
     /tmp/ccTdCIur.s:475    .text:00000000000002e4 .L0 
     /tmp/ccTdCIur.s:476    .text:00000000000002e4 .L0 
     /tmp/ccTdCIur.s:478    .text:00000000000002e8 .L0 
     /tmp/ccTdCIur.s:480    .text:00000000000002ec .L0 
     /tmp/ccTdCIur.s:486    .text:00000000000002ec _ZN3TCB11_threadExitEv
     /tmp/ccTdCIur.s:489    .text:00000000000002ec .L0 
     /tmp/ccTdCIur.s:490    .text:00000000000002ec .L0 
     /tmp/ccTdCIur.s:491    .text:00000000000002f0 .L0 
     /tmp/ccTdCIur.s:496    .text:0000000000000300 .L0 
     /tmp/ccTdCIur.s:497    .text:0000000000000300 .L0 
     /tmp/ccTdCIur.s:498    .text:0000000000000300 .L0 
     /tmp/ccTdCIur.s:499    .text:0000000000000300 .L0 
     /tmp/ccTdCIur.s:501    .text:0000000000000304 .L0 
     /tmp/ccTdCIur.s:503    .text:0000000000000304 .L0 
     /tmp/ccTdCIur.s:504    .text:0000000000000304 .L0 
     /tmp/ccTdCIur.s:510    .text:0000000000000310 .L0 
     /tmp/ccTdCIur.s:511    .text:0000000000000310 .L0 
     /tmp/ccTdCIur.s:517    .text:0000000000000318 .L0 
     /tmp/ccTdCIur.s:518    .text:0000000000000318 .L0 
     /tmp/ccTdCIur.s:519    .text:0000000000000318 .L0 
     /tmp/ccTdCIur.s:523    .text:0000000000000324 .L0 
     /tmp/ccTdCIur.s:525    .text:0000000000000328 .L0 
     /tmp/ccTdCIur.s:526    .text:0000000000000328 .L0 
     /tmp/ccTdCIur.s:530    .text:0000000000000334 .L0 
GAS LISTING /tmp/ccTdCIur.s 			page 19


     /tmp/ccTdCIur.s:531    .text:0000000000000334 .L0 
     /tmp/ccTdCIur.s:533    .text:000000000000033c .L0 
     /tmp/ccTdCIur.s:535    .text:0000000000000340 .L0 
     /tmp/ccTdCIur.s:536    .text:0000000000000340 .L0 
     /tmp/ccTdCIur.s:538    .text:0000000000000344 .L0 
     /tmp/ccTdCIur.s:541    .text:0000000000000348 .L0 
     /tmp/ccTdCIur.s:543    .text:000000000000034c .L0 
     /tmp/ccTdCIur.s:545    .text:0000000000000350 .L0 
     /tmp/ccTdCIur.s:565    .bss:0000000000000010 _ZN3TCB16time_slice_countE
     /tmp/ccTdCIur.s:561    .bss:0000000000000008 _ZN3TCB7runningE
     /tmp/ccTdCIur.s:556    .bss:0000000000000000 _ZN3TCB8id_countE
     /tmp/ccTdCIur.s:553    .bss:0000000000000000 .LANCHOR0
     /tmp/ccTdCIur.s:573    .text:0000000000000350 .L0 
     /tmp/ccTdCIur.s:28     .text:0000000000000018 .L0 
     /tmp/ccTdCIur.s:196    .text:000000000000011c .L0 
     /tmp/ccTdCIur.s:347    .text:0000000000000210 .L0 
     /tmp/ccTdCIur.s:379    .text:0000000000000240 .L0 
     /tmp/ccTdCIur.s:394    .text:0000000000000260 .L0 
     /tmp/ccTdCIur.s:445    .text:00000000000002ac .L0 
     /tmp/ccTdCIur.s:461    .text:00000000000002c4 .L0 
     /tmp/ccTdCIur.s:504    .text:0000000000000304 .L0 
     /tmp/ccTdCIur.s:260    .text:00000000000001ac .L10
     /tmp/ccTdCIur.s:232    .text:0000000000000184 .L9
     /tmp/ccTdCIur.s:204    .text:0000000000000138 .L8
     /tmp/ccTdCIur.s:417    .text:000000000000028c .L22
     /tmp/ccTdCIur.s:402    .text:0000000000000278 .L18
     /tmp/ccTdCIur.s:387    .text:0000000000000254 .L19
     /tmp/ccTdCIur.s:454    .text:00000000000002c4 .L24
     /tmp/ccTdCIur.s:2075   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccTdCIur.s:3747   .debug_str:00000000000007b8 .LASF160
     /tmp/ccTdCIur.s:3763   .debug_str:00000000000008e0 .LASF161
     /tmp/ccTdCIur.s:3579   .debug_str:00000000000002b2 .LASF162
     /tmp/ccTdCIur.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccTdCIur.s:568    .text:0000000000000350 .Letext0
     /tmp/ccTdCIur.s:3481   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccTdCIur.s:3597   .debug_str:0000000000000353 .LASF0
     /tmp/ccTdCIur.s:3619   .debug_str:00000000000003d2 .LASF1
     /tmp/ccTdCIur.s:3703   .debug_str:000000000000066a .LASF2
     /tmp/ccTdCIur.s:3711   .debug_str:00000000000006d4 .LASF4
     /tmp/ccTdCIur.s:3603   .debug_str:000000000000037a .LASF3
     /tmp/ccTdCIur.s:3489   .debug_str:000000000000003a .LASF5
     /tmp/ccTdCIur.s:3681   .debug_str:00000000000005ba .LASF6
     /tmp/ccTdCIur.s:3675   .debug_str:000000000000057c .LASF7
     /tmp/ccTdCIur.s:3607   .debug_str:0000000000000398 .LASF8
     /tmp/ccTdCIur.s:3575   .debug_str:000000000000029d .LASF9
     /tmp/ccTdCIur.s:3589   .debug_str:0000000000000308 .LASF10
     /tmp/ccTdCIur.s:3521   .debug_str:0000000000000134 .LASF11
     /tmp/ccTdCIur.s:3569   .debug_str:000000000000027f .LASF12
     /tmp/ccTdCIur.s:3533   .debug_str:0000000000000184 .LASF13
     /tmp/ccTdCIur.s:3519   .debug_str:0000000000000124 .LASF14
     /tmp/ccTdCIur.s:3729   .debug_str:0000000000000744 .LASF15
     /tmp/ccTdCIur.s:3561   .debug_str:0000000000000235 .LASF16
     /tmp/ccTdCIur.s:3725   .debug_str:000000000000071b .LASF17
     /tmp/ccTdCIur.s:3669   .debug_str:000000000000052c .LASF21
     /tmp/ccTdCIur.s:3513   .debug_str:00000000000000fa .LASF82
     /tmp/ccTdCIur.s:3523   .debug_str:0000000000000143 .LASF18
     /tmp/ccTdCIur.s:3499   .debug_str:000000000000009b .LASF19
GAS LISTING /tmp/ccTdCIur.s 			page 20


     /tmp/ccTdCIur.s:3617   .debug_str:00000000000003cd .LASF20
     /tmp/ccTdCIur.s:3497   .debug_str:0000000000000082 .LASF22
     /tmp/ccTdCIur.s:3723   .debug_str:0000000000000700 .LASF23
     /tmp/ccTdCIur.s:3783   .debug_str:0000000000000985 .LASF94
     /tmp/ccTdCIur.s:3797   .debug_str:00000000000009dc .LASF96
     /tmp/ccTdCIur.s:3743   .debug_str:00000000000007a2 .LASF24
     /tmp/ccTdCIur.s:3495   .debug_str:0000000000000074 .LASF25
     /tmp/ccTdCIur.s:3601   .debug_str:0000000000000370 .LASF46
     /tmp/ccTdCIur.s:3709   .debug_str:00000000000006a2 .LASF48
     /tmp/ccTdCIur.s:3767   .debug_str:0000000000000907 .LASF84
     /tmp/ccTdCIur.s:3647   .debug_str:00000000000004a6 .LASF42
     /tmp/ccTdCIur.s:3673   .debug_str:0000000000000557 .LASF44
     /tmp/ccTdCIur.s:3649   .debug_str:00000000000004b3 .LASF26
     /tmp/ccTdCIur.s:3491   .debug_str:0000000000000041 .LASF27
     /tmp/ccTdCIur.s:3737   .debug_str:0000000000000779 .LASF28
     /tmp/ccTdCIur.s:3683   .debug_str:00000000000005c1 .LASF29
     /tmp/ccTdCIur.s:3483   .debug_str:0000000000000000 .LASF32
     /tmp/ccTdCIur.s:3505   .debug_str:00000000000000bc .LASF34
     /tmp/ccTdCIur.s:3687   .debug_str:00000000000005f8 .LASF30
     /tmp/ccTdCIur.s:3789   .debug_str:00000000000009a4 .LASF31
     /tmp/ccTdCIur.s:3545   .debug_str:00000000000001d1 .LASF33
     /tmp/ccTdCIur.s:3697   .debug_str:0000000000000635 .LASF35
     /tmp/ccTdCIur.s:3553   .debug_str:00000000000001f8 .LASF36
     /tmp/ccTdCIur.s:3705   .debug_str:0000000000000678 .LASF37
     /tmp/ccTdCIur.s:3509   .debug_str:00000000000000e2 .LASF38
     /tmp/ccTdCIur.s:3761   .debug_str:00000000000008ca .LASF39
     /tmp/ccTdCIur.s:3587   .debug_str:00000000000002ff .LASF40
     /tmp/ccTdCIur.s:3793   .debug_str:00000000000009c0 .LASF41
     /tmp/ccTdCIur.s:3695   .debug_str:000000000000062b .LASF43
     /tmp/ccTdCIur.s:3817   .debug_str:0000000000000ab5 .LASF45
     /tmp/ccTdCIur.s:3733   .debug_str:0000000000000766 .LASF47
     /tmp/ccTdCIur.s:3679   .debug_str:00000000000005a4 .LASF49
     /tmp/ccTdCIur.s:3779   .debug_str:0000000000000969 .LASF50
     /tmp/ccTdCIur.s:3781   .debug_str:0000000000000971 .LASF51
     /tmp/ccTdCIur.s:3717   .debug_str:00000000000006e9 .LASF52
     /tmp/ccTdCIur.s:3815   .debug_str:0000000000000aa1 .LASF53
     /tmp/ccTdCIur.s:3515   .debug_str:0000000000000106 .LASF54
     /tmp/ccTdCIur.s:3809   .debug_str:0000000000000a5c .LASF55
     /tmp/ccTdCIur.s:3627   .debug_str:000000000000040d .LASF56
     /tmp/ccTdCIur.s:3741   .debug_str:000000000000078d .LASF57
     /tmp/ccTdCIur.s:3689   .debug_str:0000000000000603 .LASF58
     /tmp/ccTdCIur.s:3635   .debug_str:0000000000000440 .LASF59
     /tmp/ccTdCIur.s:3785   .debug_str:0000000000000990 .LASF60
     /tmp/ccTdCIur.s:3677   .debug_str:000000000000058f .LASF61
     /tmp/ccTdCIur.s:3661   .debug_str:0000000000000507 .LASF62
     /tmp/ccTdCIur.s:3643   .debug_str:0000000000000487 .LASF63
     /tmp/ccTdCIur.s:3565   .debug_str:0000000000000250 .LASF64
     /tmp/ccTdCIur.s:3727   .debug_str:0000000000000731 .LASF65
     /tmp/ccTdCIur.s:3753   .debug_str:000000000000089a .LASF66
     /tmp/ccTdCIur.s:3531   .debug_str:000000000000016c .LASF67
     /tmp/ccTdCIur.s:3787   .debug_str:0000000000000999 .LASF68
     /tmp/ccTdCIur.s:3765   .debug_str:00000000000008ef .LASF69
     /tmp/ccTdCIur.s:3721   .debug_str:00000000000006f7 .LASF70
     /tmp/ccTdCIur.s:3775   .debug_str:0000000000000944 .LASF71
     /tmp/ccTdCIur.s:3543   .debug_str:00000000000001c5 .LASF72
     /tmp/ccTdCIur.s:3807   .debug_str:0000000000000a43 .LASF73
     /tmp/ccTdCIur.s:3591   .debug_str:0000000000000316 .LASF74
GAS LISTING /tmp/ccTdCIur.s 			page 21


     /tmp/ccTdCIur.s:3559   .debug_str:000000000000021d .LASF75
     /tmp/ccTdCIur.s:3605   .debug_str:000000000000038c .LASF76
     /tmp/ccTdCIur.s:3557   .debug_str:0000000000000217 .LASF163
     /tmp/ccTdCIur.s:3609   .debug_str:00000000000003ab .LASF77
     /tmp/ccTdCIur.s:3525   .debug_str:0000000000000148 .LASF78
     /tmp/ccTdCIur.s:3749   .debug_str:000000000000087c .LASF79
     /tmp/ccTdCIur.s:3507   .debug_str:00000000000000d9 .LASF80
     /tmp/ccTdCIur.s:3639   .debug_str:0000000000000478 .LASF81
     /tmp/ccTdCIur.s:3527   .debug_str:0000000000000151 .LASF83
     /tmp/ccTdCIur.s:3745   .debug_str:00000000000007b0 .LASF85
     /tmp/ccTdCIur.s:3803   .debug_str:0000000000000a29 .LASF86
     /tmp/ccTdCIur.s:3777   .debug_str:0000000000000959 .LASF87
     /tmp/ccTdCIur.s:3511   .debug_str:00000000000000ec .LASF88
     /tmp/ccTdCIur.s:3567   .debug_str:0000000000000257 .LASF89
     /tmp/ccTdCIur.s:3621   .debug_str:00000000000003e5 .LASF90
     /tmp/ccTdCIur.s:3625   .debug_str:00000000000003f8 .LASF91
     /tmp/ccTdCIur.s:3549   .debug_str:00000000000001e9 .LASF92
     /tmp/ccTdCIur.s:3529   .debug_str:0000000000000159 .LASF93
     /tmp/ccTdCIur.s:3715   .debug_str:00000000000006e0 .LASF95
     /tmp/ccTdCIur.s:3691   .debug_str:000000000000060c .LASF97
     /tmp/ccTdCIur.s:3623   .debug_str:00000000000003eb .LASF98
     /tmp/ccTdCIur.s:3769   .debug_str:0000000000000911 .LASF99
     /tmp/ccTdCIur.s:3755   .debug_str:00000000000008a5 .LASF100
     /tmp/ccTdCIur.s:3629   .debug_str:0000000000000416 .LASF101
     /tmp/ccTdCIur.s:3739   .debug_str:0000000000000782 .LASF102
     /tmp/ccTdCIur.s:3731   .debug_str:0000000000000750 .LASF103
     /tmp/ccTdCIur.s:3641   .debug_str:0000000000000480 .LASF104
     /tmp/ccTdCIur.s:3535   .debug_str:0000000000000194 .LASF105
     /tmp/ccTdCIur.s:3713   .debug_str:00000000000006db .LASF106
     /tmp/ccTdCIur.s:3487   .debug_str:000000000000002e .LASF107
     /tmp/ccTdCIur.s:3811   .debug_str:0000000000000a71 .LASF108
     /tmp/ccTdCIur.s:3583   .debug_str:00000000000002e8 .LASF109
     /tmp/ccTdCIur.s:3599   .debug_str:0000000000000360 .LASF110
     /tmp/ccTdCIur.s:3663   .debug_str:000000000000050e .LASF111
     /tmp/ccTdCIur.s:3631   .debug_str:000000000000042c .LASF112
     /tmp/ccTdCIur.s:3699   .debug_str:0000000000000652 .LASF113
     /tmp/ccTdCIur.s:3501   .debug_str:00000000000000a0 .LASF114
     /tmp/ccTdCIur.s:3707   .debug_str:0000000000000696 .LASF115
     /tmp/ccTdCIur.s:3537   .debug_str:00000000000001a5 .LASF116
     /tmp/ccTdCIur.s:3555   .debug_str:0000000000000209 .LASF117
     /tmp/ccTdCIur.s:3693   .debug_str:0000000000000620 .LASF118
     /tmp/ccTdCIur.s:3547   .debug_str:00000000000001e1 .LASF119
     /tmp/ccTdCIur.s:3665   .debug_str:000000000000051b .LASF120
     /tmp/ccTdCIur.s:3719   .debug_str:00000000000006f1 .LASF121
     /tmp/ccTdCIur.s:3757   .debug_str:00000000000008b0 .LASF122
     /tmp/ccTdCIur.s:3653   .debug_str:00000000000004e0 .LASF123
     /tmp/ccTdCIur.s:3735   .debug_str:0000000000000770 .LASF124
     /tmp/ccTdCIur.s:3813   .debug_str:0000000000000a7e .LASF136
     /tmp/ccTdCIur.s:3541   .debug_str:00000000000001b7 .LASF130
     /tmp/ccTdCIur.s:3485   .debug_str:0000000000000006 .LASF132
     /tmp/ccTdCIur.s:3773   .debug_str:000000000000093c .LASF164
     /tmp/ccTdCIur.s:3493   .debug_str:0000000000000062 .LASF165
     /tmp/ccTdCIur.s:3667   .debug_str:0000000000000520 .LASF125
     /tmp/ccTdCIur.s:3751   .debug_str:0000000000000883 .LASF126
     /tmp/ccTdCIur.s:3563   .debug_str:000000000000024b .LASF127
     /tmp/ccTdCIur.s:3573   .debug_str:0000000000000293 .LASF128
     /tmp/ccTdCIur.s:3539   .debug_str:00000000000001b2 .LASF131
GAS LISTING /tmp/ccTdCIur.s 			page 22


     /tmp/ccTdCIur.s:3613   .debug_str:00000000000003c3 .LASF129
     /tmp/ccTdCIur.s:3595   .debug_str:0000000000000334 .LASF133
     /tmp/ccTdCIur.s:3611   .debug_str:00000000000003b4 .LASF134
     /tmp/ccTdCIur.s:3799   .debug_str:00000000000009f7 .LASF135
     /tmp/ccTdCIur.s:3805   .debug_str:0000000000000a2f .LASF166
     /tmp/ccTdCIur.s:3581   .debug_str:00000000000002d0 .LASF137
     /tmp/ccTdCIur.s:3615   .debug_str:00000000000003c8 .LASF138
     /tmp/ccTdCIur.s:3685   .debug_str:00000000000005e3 .LASF139
     /tmp/ccTdCIur.s:3551   .debug_str:00000000000001f2 .LASF140
     /tmp/ccTdCIur.s:3791   .debug_str:00000000000009aa .LASF141
     /tmp/ccTdCIur.s:3659   .debug_str:00000000000004fa .LASF142
     /tmp/ccTdCIur.s:3651   .debug_str:00000000000004bd .LASF143
     /tmp/ccTdCIur.s:3759   .debug_str:00000000000008b8 .LASF144
     /tmp/ccTdCIur.s:3593   .debug_str:0000000000000321 .LASF145
     /tmp/ccTdCIur.s:3517   .debug_str:000000000000010f .LASF146
     /tmp/ccTdCIur.s:3801   .debug_str:0000000000000a17 .LASF147
     /tmp/ccTdCIur.s:3657   .debug_str:00000000000004f5 .LASF148
     /tmp/ccTdCIur.s:3577   .debug_str:00000000000002ad .LASF149
     /tmp/ccTdCIur.s:3771   .debug_str:000000000000092a .LASF150
     /tmp/ccTdCIur.s:3503   .debug_str:00000000000000ab .LASF151
     /tmp/ccTdCIur.s:3671   .debug_str:000000000000053c .LASF152
     /tmp/ccTdCIur.s:487    .text:00000000000002ec .LFB36
     /tmp/ccTdCIur.s:546    .text:0000000000000350 .LFE36
     /tmp/ccTdCIur.s:3701   .debug_str:0000000000000663 .LASF153
     /tmp/ccTdCIur.s:3237   .debug_loc:0000000000000000 .LLST12
     /tmp/ccTdCIur.s:507    .text:0000000000000310 .LBB9
     /tmp/ccTdCIur.s:515    .text:0000000000000318 .LBE9
     /tmp/ccTdCIur.s:3244   .debug_loc:0000000000000023 .LLST13
     /tmp/ccTdCIur.s:520    .text:0000000000000320 .LVL37
     /tmp/ccTdCIur.s:528    .text:0000000000000334 .LVL38
     /tmp/ccTdCIur.s:336    .text:0000000000000204 .LFB35
     /tmp/ccTdCIur.s:358    .text:000000000000022c .LFE35
     /tmp/ccTdCIur.s:304    .text:00000000000001dc .LFB34
     /tmp/ccTdCIur.s:330    .text:0000000000000204 .LFE34
     /tmp/ccTdCIur.s:3571   .debug_str:000000000000028e .LASF159
     /tmp/ccTdCIur.s:3251   .debug_loc:0000000000000046 .LLST9
     /tmp/ccTdCIur.s:319    .text:00000000000001f4 .LVL24
     /tmp/ccTdCIur.s:272    .text:00000000000001b4 .LFB33
     /tmp/ccTdCIur.s:298    .text:00000000000001dc .LFE33
     /tmp/ccTdCIur.s:3265   .debug_loc:000000000000007f .LLST8
     /tmp/ccTdCIur.s:287    .text:00000000000001cc .LVL22
     /tmp/ccTdCIur.s:130    .text:00000000000000b8 .LFB32
     /tmp/ccTdCIur.s:162    .text:00000000000000e8 .LFE32
     /tmp/ccTdCIur.s:3279   .debug_loc:00000000000000b8 .LLST2
     /tmp/ccTdCIur.s:3655   .debug_str:00000000000004ee .LASF154
     /tmp/ccTdCIur.s:3299   .debug_loc:0000000000000107 .LLST3
     /tmp/ccTdCIur.s:151    .text:00000000000000d8 .LVL10
     /tmp/ccTdCIur.s:364    .text:000000000000022c .LFB31
     /tmp/ccTdCIur.s:426    .text:000000000000029c .LFE31
     /tmp/ccTdCIur.s:3585   .debug_str:00000000000002f4 .LASF155
     /tmp/ccTdCIur.s:3325   .debug_loc:000000000000015b .LLST10
     /tmp/ccTdCIur.s:384    .text:0000000000000250 .LVL26
     /tmp/ccTdCIur.s:391    .text:000000000000025c .LVL27
     /tmp/ccTdCIur.s:401    .text:0000000000000278 .LVL28
     /tmp/ccTdCIur.s:423    .text:0000000000000298 .LVL31
     /tmp/ccTdCIur.s:76     .text:0000000000000060 .LFB30
     /tmp/ccTdCIur.s:124    .text:00000000000000b8 .LFE30
GAS LISTING /tmp/ccTdCIur.s 			page 23


     /tmp/ccTdCIur.s:3336   .debug_loc:0000000000000191 .LLST0
     /tmp/ccTdCIur.s:3633   .debug_str:0000000000000435 .LASF156
     /tmp/ccTdCIur.s:3354   .debug_loc:00000000000001dd .LLST1
     /tmp/ccTdCIur.s:97     .text:0000000000000088 .LVL2
     /tmp/ccTdCIur.s:103    .text:0000000000000098 .LVL3
     /tmp/ccTdCIur.s:107    .text:00000000000000a0 .LVL4
     /tmp/ccTdCIur.s:432    .text:000000000000029c .LFB29
     /tmp/ccTdCIur.s:481    .text:00000000000002ec .LFE29
     /tmp/ccTdCIur.s:456    .text:00000000000002c4 .LBB7
     /tmp/ccTdCIur.s:466    .text:00000000000002d4 .LBE7
     /tmp/ccTdCIur.s:3372   .debug_loc:0000000000000229 .LLST11
     /tmp/ccTdCIur.s:470    .text:00000000000002dc .LVL34
     /tmp/ccTdCIur.s:168    .text:00000000000000e8 .LFB28
     /tmp/ccTdCIur.s:266    .text:00000000000001b4 .LFE28
     /tmp/ccTdCIur.s:3795   .debug_str:00000000000009d5 .LASF157
     /tmp/ccTdCIur.s:3380   .debug_loc:0000000000000254 .LLST4
     /tmp/ccTdCIur.s:3402   .debug_loc:00000000000002b3 .LLST5
     /tmp/ccTdCIur.s:3424   .debug_loc:0000000000000312 .LLST6
     /tmp/ccTdCIur.s:3645   .debug_str:000000000000049a .LASF158
     /tmp/ccTdCIur.s:3446   .debug_loc:0000000000000371 .LLST7
     /tmp/ccTdCIur.s:214    .text:0000000000000150 .LVL13
     /tmp/ccTdCIur.s:222    .text:0000000000000170 .LVL14
     /tmp/ccTdCIur.s:231    .text:0000000000000184 .LVL15
     /tmp/ccTdCIur.s:3637   .debug_str:0000000000000455 .LASF167
     /tmp/ccTdCIur.s:10     .text:0000000000000000 .LFB26
     /tmp/ccTdCIur.s:68     .text:0000000000000060 .LFE26
     /tmp/ccTdCIur.s:513    .text:0000000000000318 .LVL36
     /tmp/ccTdCIur.s:539    .text:0000000000000344 .LVL39
     /tmp/ccTdCIur.s:506    .text:0000000000000310 .LVL35
     /tmp/ccTdCIur.s:307    .text:00000000000001dc .LVL23
     /tmp/ccTdCIur.s:275    .text:00000000000001b4 .LVL21
     /tmp/ccTdCIur.s:133    .text:00000000000000b8 .LVL7
     /tmp/ccTdCIur.s:145    .text:00000000000000cc .LVL8
     /tmp/ccTdCIur.s:149    .text:00000000000000d0 .LVL9
     /tmp/ccTdCIur.s:380    .text:0000000000000248 .LVL25
     /tmp/ccTdCIur.s:412    .text:0000000000000284 .LVL29
     /tmp/ccTdCIur.s:416    .text:000000000000028c .LVL30
     /tmp/ccTdCIur.s:79     .text:0000000000000060 .LVL1
     /tmp/ccTdCIur.s:116    .text:00000000000000ac .LVL5
     /tmp/ccTdCIur.s:119    .text:00000000000000b0 .LVL6
     /tmp/ccTdCIur.s:453    .text:00000000000002c4 .LVL32
     /tmp/ccTdCIur.s:464    .text:00000000000002d4 .LVL33
     /tmp/ccTdCIur.s:171    .text:00000000000000e8 .LVL11
     /tmp/ccTdCIur.s:212    .text:0000000000000148 .LVL12
     /tmp/ccTdCIur.s:252    .text:00000000000001a0 .LVL18
     /tmp/ccTdCIur.s:259    .text:00000000000001ac .LVL20
     /tmp/ccTdCIur.s:244    .text:0000000000000194 .LVL16
     /tmp/ccTdCIur.s:255    .text:00000000000001a4 .LVL19
     /tmp/ccTdCIur.s:247    .text:0000000000000198 .LVL17
     /tmp/ccTdCIur.s:574    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5RISCV9push_regsEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN5RISCV8pop_regsEv
_ZN15MemoryAllocator9mem_allocEm
_ZN9Scheduler3putEP3TCB
GAS LISTING /tmp/ccTdCIur.s 			page 24


_ZN15MemoryAllocator8mem_freeEPKv
_ZN9Scheduler3getEv
