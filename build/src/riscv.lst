GAS LISTING /tmp/ccBtDXrK.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5RISCV10popSppSpieEv
   9              	_ZN5RISCV10popSppSpieEv:
  10              	.LFB33:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../h/riscv.hpp"
   3:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   4:src/riscv.cpp **** #include "../h/Memoryallocator.hpp"
   5:src/riscv.cpp **** #include "../h/thread.hpp"
   6:src/riscv.cpp **** #include "../h/Console.hpp"
   7:src/riscv.cpp **** 
   8:src/riscv.cpp **** extern void printInteger(uint64);
   9:src/riscv.cpp **** extern void printString(char*);
  10:src/riscv.cpp **** extern void handleNewChars(void*);
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** // first time running a thread, sepc inside of wrapper
  13:src/riscv.cpp **** 
  14:src/riscv.cpp **** void RISCV::popSppSpie() {
  12              		.loc 1 14 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  15:src/riscv.cpp **** 
  16:src/riscv.cpp ****     // not inline ( ra reg )
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     if (TCB::running->routine != handleNewChars) RISCV::mask_status(SPP);
  20              		.loc 1 18 5
  21              		.loc 1 18 23 is_stmt 0
  22 000c 97070000 		la	a5,_ZN3TCB7runningE
  22      83B70700 
  23 0014 83B70700 		ld	a5,0(a5)
  24 0018 03B70703 		ld	a4,48(a5)
  25              		.loc 1 18 5
  26 001c 97070000 		la	a5,_Z14handleNewCharsPv
  26      83B70700 
  27 0024 6306F700 		beq	a4,a5,.L2
  28              		.loc 1 18 50 is_stmt 1
  29              	.LVL0:
  30              	.LBB56:
  31              	.LBB57:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 4/7/24.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
GAS LISTING /tmp/ccBtDXrK.s 			page 2


   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class RISCV {
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     enum causes {
  14:src/../h/riscv.hpp ****         SOFTWARE = 0x8000000000000001UL,
  15:src/../h/riscv.hpp ****         EXTERNAL = 0x8000000000000009UL,
  16:src/../h/riscv.hpp ****         U_ECALL  = 0x0000000000000008UL,
  17:src/../h/riscv.hpp ****         S_ECALL  = 0x0000000000000009UL
  18:src/../h/riscv.hpp ****     };
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static void supervisor_trap();
  21:src/../h/riscv.hpp ****     static void handle_interrupt();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void push_regs();
  24:src/../h/riscv.hpp ****     static void pop_regs();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static uint64 return_value(uint64 value);
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     static uint64 rd_scause();
  29:src/../h/riscv.hpp ****     static void wr_scause(uint64 value);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     static uint64 rd_sepc();
  32:src/../h/riscv.hpp ****     static void wr_sepc(uint64 value);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     static uint64 rd_stvec();
  35:src/../h/riscv.hpp ****     static void wr_stvec(uint64 value);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     static uint64 rd_stval();
  38:src/../h/riscv.hpp ****     static void wr_stval(uint64 value);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     static uint64 rd_sip();
  41:src/../h/riscv.hpp ****     static void wr_sip(uint64 value);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     static uint64 rd_sstatus();
  44:src/../h/riscv.hpp ****     static void wr_sstatus(uint64 value);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static void clear_sip(uint64 mask);
  47:src/../h/riscv.hpp ****     static void set_sip(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     static void mask_status(uint64 mask);
  50:src/../h/riscv.hpp ****     static void set_status(uint64 mask);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     static void popSppSpie();
  53:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits
  54:src/../h/riscv.hpp ****     // must be in cpp, not inline
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     enum mask_sstatus {
  57:src/../h/riscv.hpp ****         SIE = (1 << 1),
  58:src/../h/riscv.hpp ****         SPIE =(1 << 5),
  59:src/../h/riscv.hpp ****         SPP = (1 << 8)
  60:src/../h/riscv.hpp ****     };
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     enum mask_sip_sie {
  63:src/../h/riscv.hpp ****         SS = (1 << 1),
GAS LISTING /tmp/ccBtDXrK.s 			page 3


  64:src/../h/riscv.hpp ****         SE = (1 << 9)
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp **** };
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp **** inline uint64 RISCV::rd_scause() {
  70:src/../h/riscv.hpp ****     uint64 volatile value;
  71:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
  72:src/../h/riscv.hpp ****     return value;
  73:src/../h/riscv.hpp **** }
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp **** inline void RISCV::wr_scause(uint64 value) {
  76:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  77:src/../h/riscv.hpp **** }
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sepc() {
  80:src/../h/riscv.hpp ****     uint64 volatile value;
  81:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
  82:src/../h/riscv.hpp ****     return value;
  83:src/../h/riscv.hpp **** }
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp **** inline void RISCV::wr_sepc(uint64 value) {
  86:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  87:src/../h/riscv.hpp **** }
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stvec() {
  90:src/../h/riscv.hpp ****     uint64 volatile value;
  91:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
  92:src/../h/riscv.hpp ****     return value;
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline void RISCV::wr_stvec(uint64 value) {
  96:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stval() {
 100:src/../h/riscv.hpp ****     uint64 volatile value;
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stval" : "=r"(value));
 102:src/../h/riscv.hpp ****     return value;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void RISCV::wr_stval(uint64 value) {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %0" : : "r"(value));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sip() {
 110:src/../h/riscv.hpp ****     uint64 volatile value;
 111:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
 112:src/../h/riscv.hpp ****     return value;
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline void RISCV::wr_sip(uint64 value) {
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sstatus() {
 120:src/../h/riscv.hpp ****     uint64 volatile value;
GAS LISTING /tmp/ccBtDXrK.s 			page 4


 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 122:src/../h/riscv.hpp ****     return value;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void RISCV::wr_sstatus(uint64 value) {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void RISCV::clear_sip(uint64 mask) {
 130:src/../h/riscv.hpp ****     __asm__ volatile("csrc sip, %0" : : "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void RISCV::set_sip(uint64 mask) {
 134:src/../h/riscv.hpp ****     __asm__ volatile("csrs sip, %0" : : "r"(mask));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void RISCV::mask_status(uint64 mask) {
 138:src/../h/riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
  33              		.loc 2 138 5
  34              		.loc 2 138 55 is_stmt 0
  35 0028 93070010 		li	a5,256
  36              	#APP
  37              	# 138 "src/../h/riscv.hpp" 1
 139              	};
  38              		csrc sstatus, a5
  39              	# 0 "" 2
  40              	.LVL1:
  41              	#NO_APP
  42              	.L2:
  43              	.LBE57:
  44              	.LBE56:
  19:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  45              		.loc 1 19 5 is_stmt 1
  46              		.loc 1 19 39 is_stmt 0
  47              	#APP
  48              	# 19 "src/riscv.cpp" 1
  20              	    __asm__ volatile ("sret");
  49              		csrw sepc, ra
  50              	# 0 "" 2
  51              		.loc 1 20 5 is_stmt 1
  52              		.loc 1 20 30 is_stmt 0
  53              	# 20 "src/riscv.cpp" 1
  21              	
  22:src/riscv.cpp ****     // => pop spp and spie !
  23:src/riscv.cpp ****     // exit from supervisor mode
  24:src/riscv.cpp **** }
  54              		sret
  55              	# 0 "" 2
  56              		.loc 1 24 1
  57              	#NO_APP
  58 0038 03348100 		ld	s0,8(sp)
  59              		.cfi_restore 8
  60              		.cfi_def_cfa 2, 16
  61 003c 13010101 		addi	sp,sp,16
  62              		.cfi_def_cfa_offset 0
  63 0040 67800000 		jr	ra
  64              		.cfi_endproc
GAS LISTING /tmp/ccBtDXrK.s 			page 5


  65              	.LFE33:
  67              		.align	2
  68              		.globl	_ZN5RISCV12return_valueEm
  70              	_ZN5RISCV12return_valueEm:
  71              	.LFB34:
  25:src/riscv.cpp **** 
  26:src/riscv.cpp **** uint64 RISCV::return_value(uint64 value) {
  72              		.loc 1 26 42 is_stmt 1
  73              		.cfi_startproc
  74              	.LVL2:
  75 0044 130101FF 		addi	sp,sp,-16
  76              		.cfi_def_cfa_offset 16
  77 0048 23348100 		sd	s0,8(sp)
  78              		.cfi_offset 8, -8
  79 004c 13040101 		addi	s0,sp,16
  80              		.cfi_def_cfa 8, 0
  27:src/riscv.cpp ****     return value; // move to a0 reg
  81              		.loc 1 27 5
  28:src/riscv.cpp **** }
  82              		.loc 1 28 1 is_stmt 0
  83 0050 03348100 		ld	s0,8(sp)
  84              		.cfi_restore 8
  85              		.cfi_def_cfa 2, 16
  86 0054 13010101 		addi	sp,sp,16
  87              		.cfi_def_cfa_offset 0
  88 0058 67800000 		jr	ra
  89              		.cfi_endproc
  90              	.LFE34:
  92              		.section	.text._ZN4ListI3TCBE6removeEPS0_,"axG",@progbits,_ZN4ListI3TCBE6removeEPS0_,comdat
  93              		.align	2
  94              		.weak	_ZN4ListI3TCBE6removeEPS0_
  96              	_ZN4ListI3TCBE6removeEPS0_:
  97              	.LFB39:
  98              		.file 3 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 5/13/24.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_LIST_HPP
   7:src/../h/List.hpp **** #include "thread.hpp"
   8:src/../h/List.hpp **** 
   9:src/../h/List.hpp **** extern void printInteger(uint64);
  10:src/../h/List.hpp **** 
  11:src/../h/List.hpp **** template <typename T>
  12:src/../h/List.hpp **** class List {
  13:src/../h/List.hpp **** 
  14:src/../h/List.hpp **** public:
  15:src/../h/List.hpp **** 
  16:src/../h/List.hpp ****     friend class RISCV;
  17:src/../h/List.hpp **** 
  18:src/../h/List.hpp ****     List() : head(nullptr), tail(nullptr) {};
  19:src/../h/List.hpp **** 
  20:src/../h/List.hpp ****     void add(T*);
  21:src/../h/List.hpp ****     T* get();
  22:src/../h/List.hpp ****     T* peek();
  23:src/../h/List.hpp **** 
GAS LISTING /tmp/ccBtDXrK.s 			page 6


  24:src/../h/List.hpp ****     inline int size() {return count;}
  25:src/../h/List.hpp **** 
  26:src/../h/List.hpp **** private:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     struct Elem {
  29:src/../h/List.hpp ****         T* data;
  30:src/../h/List.hpp ****         Elem* next;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****         explicit Elem(T* data) : data(data), next(nullptr) {}
  33:src/../h/List.hpp ****     };
  34:src/../h/List.hpp **** 
  35:src/../h/List.hpp ****     Elem *head, *tail;
  36:src/../h/List.hpp ****     int count = 0;
  37:src/../h/List.hpp **** 
  38:src/../h/List.hpp ****     void remove(T *t);
  39:src/../h/List.hpp **** };
  40:src/../h/List.hpp **** 
  41:src/../h/List.hpp **** typedef List<TCB> ListTCB;
  42:src/../h/List.hpp **** using ListSEM = List<Sem>;
  43:src/../h/List.hpp **** 
  44:src/../h/List.hpp **** template <typename T>
  45:src/../h/List.hpp **** void List<T>::add(T *t) {
  46:src/../h/List.hpp **** 
  47:src/../h/List.hpp ****     Elem* toAdd = new Elem(t);
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     if (!head) head = tail = toAdd;
  50:src/../h/List.hpp ****     else tail = tail -> next = toAdd;
  51:src/../h/List.hpp **** 
  52:src/../h/List.hpp ****     count++;
  53:src/../h/List.hpp **** }
  54:src/../h/List.hpp **** 
  55:src/../h/List.hpp **** template <typename T>
  56:src/../h/List.hpp **** T* List<T>::get() {
  57:src/../h/List.hpp **** 
  58:src/../h/List.hpp ****     if (!head) return nullptr;
  59:src/../h/List.hpp **** 
  60:src/../h/List.hpp ****     T* t = head -> data;
  61:src/../h/List.hpp ****     Elem* oldHead = head;
  62:src/../h/List.hpp ****     head = head -> next;
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     if (!head) tail = nullptr;
  65:src/../h/List.hpp **** 
  66:src/../h/List.hpp ****     delete oldHead;
  67:src/../h/List.hpp ****     count--;
  68:src/../h/List.hpp ****     return t;
  69:src/../h/List.hpp **** }
  70:src/../h/List.hpp **** 
  71:src/../h/List.hpp **** template <typename T>
  72:src/../h/List.hpp **** T* List<T>::peek() {
  73:src/../h/List.hpp ****     if (head) return head->data;
  74:src/../h/List.hpp ****     else return nullptr;
  75:src/../h/List.hpp **** }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp **** template <typename T>
  78:src/../h/List.hpp **** void List<T>::remove(T* t) {
  99              		.loc 3 78 6 is_stmt 1
 100              		.cfi_startproc
GAS LISTING /tmp/ccBtDXrK.s 			page 7


 101              	.LVL3:
 102 0000 93060500 		mv	a3,a0
 103              	.LVL4:
  79:src/../h/List.hpp ****     Elem* prev = nullptr, *elem = head;
 104              		.loc 3 79 28 is_stmt 0
 105 0004 03350500 		ld	a0,0(a0)
 106              	.LVL5:
 107              		.loc 3 79 11
 108 0008 13070000 		li	a4,0
 109              	.LVL6:
 110              	.L12:
  80:src/../h/List.hpp ****     while (elem) {
 111              		.loc 3 80 5 is_stmt 1
 112 000c 630C0506 		beqz	a0,.L14
  81:src/../h/List.hpp ****         if (elem->data == t) {
 113              		.loc 3 81 19 is_stmt 0
 114 0010 83370500 		ld	a5,0(a0)
 115              		.loc 3 81 9
 116 0014 6388B700 		beq	a5,a1,.L17
 117              	.LVL7:
  82:src/../h/List.hpp **** 
  83:src/../h/List.hpp ****             // found
  84:src/../h/List.hpp ****             if (prev) {
  85:src/../h/List.hpp ****                 prev->next = elem->next;
  86:src/../h/List.hpp ****                 if (tail == elem) tail = prev;
  87:src/../h/List.hpp ****             }
  88:src/../h/List.hpp ****             else head = elem -> next;
  89:src/../h/List.hpp ****             if (!head) tail = nullptr;
  90:src/../h/List.hpp **** 
  91:src/../h/List.hpp ****             delete elem;
  92:src/../h/List.hpp ****             return;
  93:src/../h/List.hpp **** 
  94:src/../h/List.hpp ****         }
  95:src/../h/List.hpp ****         prev = elem;
 118              		.loc 3 95 9
 119 0018 13070500 		mv	a4,a0
  96:src/../h/List.hpp ****         elem = elem -> next;
 120              		.loc 3 96 9
 121 001c 03358500 		ld	a0,8(a0)
 122              	.LVL8:
  80:src/../h/List.hpp ****         if (elem->data == t) {
 123              		.loc 3 80 5
 124 0020 6FF0DFFE 		j	.L12
 125              	.L17:
  78:src/../h/List.hpp ****     Elem* prev = nullptr, *elem = head;
 126              		.loc 3 78 6
 127 0024 130101FF 		addi	sp,sp,-16
 128              		.cfi_def_cfa_offset 16
 129 0028 23341100 		sd	ra,8(sp)
 130 002c 23308100 		sd	s0,0(sp)
 131              		.cfi_offset 1, -8
 132              		.cfi_offset 8, -16
 133 0030 13040101 		addi	s0,sp,16
 134              		.cfi_def_cfa 8, 0
  84:src/../h/List.hpp ****                 prev->next = elem->next;
 135              		.loc 3 84 13
 136 0034 630E0702 		beqz	a4,.L9
GAS LISTING /tmp/ccBtDXrK.s 			page 8


  85:src/../h/List.hpp ****                 if (tail == elem) tail = prev;
 137              		.loc 3 85 36
 138 0038 83378500 		ld	a5,8(a0)
  85:src/../h/List.hpp ****                 if (tail == elem) tail = prev;
 139              		.loc 3 85 17
 140 003c 2334F700 		sd	a5,8(a4)
  86:src/../h/List.hpp ****             }
 141              		.loc 3 86 21
 142 0040 83B78600 		ld	a5,8(a3)
  86:src/../h/List.hpp ****             }
 143              		.loc 3 86 17
 144 0044 6382A702 		beq	a5,a0,.L18
 145              	.L10:
  89:src/../h/List.hpp **** 
 146              		.loc 3 89 18
 147 0048 83B70600 		ld	a5,0(a3)
  89:src/../h/List.hpp **** 
 148              		.loc 3 89 13
 149 004c 63880702 		beqz	a5,.L19
 150              	.L11:
  91:src/../h/List.hpp ****             return;
 151              		.loc 3 91 13
 152 0050 97000000 		call	_ZdlPv@plt
 152      E7800000 
 153              	.LVL9:
  97:src/../h/List.hpp ****     }
  98:src/../h/List.hpp **** }
 154              		.loc 3 98 1
 155 0058 83308100 		ld	ra,8(sp)
 156              		.cfi_remember_state
 157              		.cfi_restore 1
 158 005c 03340100 		ld	s0,0(sp)
 159              		.cfi_restore 8
 160              		.cfi_def_cfa 2, 16
 161 0060 13010101 		addi	sp,sp,16
 162              		.cfi_def_cfa_offset 0
 163 0064 67800000 		jr	ra
 164              	.LVL10:
 165              	.L18:
 166              		.cfi_restore_state
  86:src/../h/List.hpp ****             }
 167              		.loc 3 86 35 discriminator 1
 168 0068 23B4E600 		sd	a4,8(a3)
 169 006c 6FF0DFFD 		j	.L10
 170              	.L9:
  88:src/../h/List.hpp ****             if (!head) tail = nullptr;
 171              		.loc 3 88 33
 172 0070 83378500 		ld	a5,8(a0)
  88:src/../h/List.hpp ****             if (!head) tail = nullptr;
 173              		.loc 3 88 18
 174 0074 23B0F600 		sd	a5,0(a3)
 175 0078 6FF01FFD 		j	.L10
 176              	.L19:
  89:src/../h/List.hpp **** 
 177              		.loc 3 89 24 discriminator 1
 178 007c 23B40600 		sd	zero,8(a3)
 179 0080 6FF01FFD 		j	.L11
GAS LISTING /tmp/ccBtDXrK.s 			page 9


 180              	.L14:
 181              		.cfi_def_cfa_register 2
 182              		.cfi_restore 1
 183              		.cfi_restore 8
 184 0084 67800000 		ret
 185              		.cfi_endproc
 186              	.LFE39:
 188              		.text
 189              		.align	2
 190              		.globl	_ZN5RISCV16handle_interruptEv
 192              	_ZN5RISCV16handle_interruptEv:
 193              	.LFB35:
  29:src/riscv.cpp **** 
  30:src/riscv.cpp **** void RISCV::handle_interrupt() {
 194              		.loc 1 30 32 is_stmt 1
 195              		.cfi_startproc
 196 005c 130101F9 		addi	sp,sp,-112
 197              		.cfi_def_cfa_offset 112
 198 0060 23341106 		sd	ra,104(sp)
 199 0064 23308106 		sd	s0,96(sp)
 200 0068 233C9104 		sd	s1,88(sp)
 201 006c 23382105 		sd	s2,80(sp)
 202 0070 23343105 		sd	s3,72(sp)
 203 0074 23304105 		sd	s4,64(sp)
 204              		.cfi_offset 1, -8
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -24
 207              		.cfi_offset 18, -32
 208              		.cfi_offset 19, -40
 209              		.cfi_offset 20, -48
 210 0078 13040107 		addi	s0,sp,112
 211              		.cfi_def_cfa 8, 0
  31:src/riscv.cpp **** 
  32:src/riscv.cpp ****     uint64 op, a1, a2, a3, a4;
 212              		.loc 1 32 5
  33:src/riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(op)); // operation code
 213              		.loc 1 33 5
 214              		.loc 1 33 45 is_stmt 0
 215              	#APP
 216              	# 33 "src/riscv.cpp" 1
  34              	    __asm__ volatile("mv %0, a1" : "=r"(a1));
 217              		mv a6, a0
 218              	# 0 "" 2
 219              	.LVL11:
 220              		.loc 1 34 5 is_stmt 1
 221              		.loc 1 34 45 is_stmt 0
 222              	# 34 "src/riscv.cpp" 1
  35              	    __asm__ volatile("mv %0, a2" : "=r"(a2));
 223              		mv a0, a1
 224              	# 0 "" 2
 225              	.LVL12:
 226              		.loc 1 35 5 is_stmt 1
 227              		.loc 1 35 45 is_stmt 0
 228              	# 35 "src/riscv.cpp" 1
  36              	    __asm__ volatile("mv %0, a3" : "=r"(a3));
 229              		mv a1, a2
 230              	# 0 "" 2
GAS LISTING /tmp/ccBtDXrK.s 			page 10


 231              	.LVL13:
 232              		.loc 1 36 5 is_stmt 1
 233              		.loc 1 36 45 is_stmt 0
 234              	# 36 "src/riscv.cpp" 1
  37              	    __asm__ volatile("mv %0, a4" : "=r"(a4));
 235              		mv a2, a3
 236              	# 0 "" 2
 237              	.LVL14:
 238              		.loc 1 37 5 is_stmt 1
 239              		.loc 1 37 45 is_stmt 0
 240              	# 37 "src/riscv.cpp" 1
  38              	
 241              		mv a3, a4
 242              	# 0 "" 2
 243              	.LVL15:
  39:src/riscv.cpp ****     uint64 scause = rd_scause();
 244              		.loc 1 39 5 is_stmt 1
 245              	#NO_APP
 246              	.LBB58:
 247              	.LBB59:
  70:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
 248              		.loc 2 70 5
  71:src/../h/riscv.hpp ****     return value;
 249              		.loc 2 71 5
  71:src/../h/riscv.hpp ****     return value;
 250              		.loc 2 71 55 is_stmt 0
 251              	#APP
 252              	# 71 "src/../h/riscv.hpp" 1
 253              		csrr a5, scause
 254              	# 0 "" 2
 255              	#NO_APP
 256 0094 233CF4F8 		sd	a5,-104(s0)
  72:src/../h/riscv.hpp **** }
 257              		.loc 2 72 5 is_stmt 1
  72:src/../h/riscv.hpp **** }
 258              		.loc 2 72 12 is_stmt 0
 259 0098 033784F9 		ld	a4,-104(s0)
 260              	.LVL16:
 261              	.LBE59:
 262              	.LBE58:
  40:src/riscv.cpp **** 
  41:src/riscv.cpp ****     if (scause == SOFTWARE) {
 263              		.loc 1 41 5 is_stmt 1
 264              	.LBB60:
 265 009c 9307F0FF 		li	a5,-1
 266 00a0 9397F703 		slli	a5,a5,63
 267 00a4 93871700 		addi	a5,a5,1
 268 00a8 6300F706 		beq	a4,a5,.L54
 269              	.LBE60:
  42:src/riscv.cpp ****         // software interrupt - timer
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****         // update running time passed for running
  45:src/riscv.cpp ****         // if time >= running time slice, dispatch()
  46:src/riscv.cpp ****         // reset static time passed
  47:src/riscv.cpp ****         // update sleeping threads or timed wait
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****         clear_sip(mask_sip_sie::SS);
GAS LISTING /tmp/ccBtDXrK.s 			page 11


  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****         // UPDATE SLEEPING THREADS IF SLEEPING_TIME > 0
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****         if (Scheduler::hasSleeping()) {
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****             Scheduler::first_sleepy -> sleeping_time --;
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****             TCB* tcb = Scheduler::first_sleepy;
  58:src/riscv.cpp ****             while (tcb) {
  59:src/riscv.cpp ****                 // remember first sleepy
  60:src/riscv.cpp ****                 if (tcb -> sleeping_time > 0) break;
  61:src/riscv.cpp **** 
  62:src/riscv.cpp ****                 tcb->current_state = TCB::RUNNABLE;
  63:src/riscv.cpp ****                 Scheduler::put(tcb);
  64:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
  65:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
  66:src/riscv.cpp ****                 tcb = next;
  67:src/riscv.cpp ****             }
  68:src/riscv.cpp **** 
  69:src/riscv.cpp ****             Scheduler::first_sleepy = tcb;
  70:src/riscv.cpp ****         }
  71:src/riscv.cpp **** 
  72:src/riscv.cpp ****         // UPDATE TIMED WAITING ON SEMAPHORES
  73:src/riscv.cpp **** 
  74:src/riscv.cpp ****         for (Sem* s = Sem::first; s; s = s->next) {
  75:src/riscv.cpp ****             int count = s->timedBlock;
  76:src/riscv.cpp ****             for (List<TCB>::Elem* e = s->blocked.head ; e && count > 0; ) {
  77:src/riscv.cpp **** 
  78:src/riscv.cpp ****                 TCB* t = e->data;
  79:src/riscv.cpp **** 
  80:src/riscv.cpp ****                 if (t->time_on_sem > 0) { // if timed waiting
  81:src/riscv.cpp ****                     count--;
  82:src/riscv.cpp ****                     // time on sem == 0 will return TIMEOUT
  83:src/riscv.cpp ****                     if ( --t->time_on_sem <= 0) {
  84:src/riscv.cpp ****                         // time expired
  85:src/riscv.cpp **** 
  86:src/riscv.cpp ****                         e = e -> next;
  87:src/riscv.cpp ****                         s->blocked.remove(t);
  88:src/riscv.cpp ****                         s->value++;
  89:src/riscv.cpp ****                         s->timedBlock--;
  90:src/riscv.cpp **** 
  91:src/riscv.cpp ****                         t->current_state = TCB::RUNNABLE;
  92:src/riscv.cpp ****                         Scheduler::put(t);
  93:src/riscv.cpp ****                         continue;
  94:src/riscv.cpp ****                     }
  95:src/riscv.cpp ****                 }
  96:src/riscv.cpp ****                 e = e->next;
  97:src/riscv.cpp ****             }
  98:src/riscv.cpp ****         }
  99:src/riscv.cpp **** 
 100:src/riscv.cpp ****         // CHECK IF RUNNING THREAD TIME SLICE EXPIRED
 101:src/riscv.cpp **** 
 102:src/riscv.cpp ****         TCB::time_slice_count ++;
 103:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 104:src/riscv.cpp ****         {
 105:src/riscv.cpp ****             uint64 sepc = rd_sepc();
 106:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
GAS LISTING /tmp/ccBtDXrK.s 			page 12


 107:src/riscv.cpp **** 
 108:src/riscv.cpp ****             TCB::time_slice_count = 0; // new running thread
 109:src/riscv.cpp ****             TCB::dispatch();
 110:src/riscv.cpp **** 
 111:src/riscv.cpp ****             wr_sepc(sepc);
 112:src/riscv.cpp ****             wr_sstatus(sstatus);
 113:src/riscv.cpp **** 
 114:src/riscv.cpp ****             // first time running thread -> context not saved
 115:src/riscv.cpp ****             // next instruction: inside of wrapper function
 116:src/riscv.cpp ****         }
 117:src/riscv.cpp **** 
 118:src/riscv.cpp ****     } else if (scause == EXTERNAL) {
 270              		.loc 1 118 12
 271              	.LBB121:
 272              	.LBB61:
 273 00ac 9307F0FF 		li	a5,-1
 274 00b0 9397F703 		slli	a5,a5,63
 275 00b4 93879700 		addi	a5,a5,9
 276 00b8 630CF718 		beq	a4,a5,.L55
 277              	.LBE61:
 278              	.LBE121:
 119:src/riscv.cpp ****         // external interrupt - console
 120:src/riscv.cpp ****         //console_handler();
 121:src/riscv.cpp **** 
 122:src/riscv.cpp ****         uint64 sepc = rd_sepc();
 123:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
 124:src/riscv.cpp **** 
 125:src/riscv.cpp ****         int irq = plic_claim();
 126:src/riscv.cpp ****         if (irq == CONSOLE_IRQ) {
 127:src/riscv.cpp **** 
 128:src/riscv.cpp ****             while (*(char *) CONSOLE_STATUS & CONSOLE_RX_STATUS_BIT && !myConsole::inputBuffer->ful
 129:src/riscv.cpp **** 
 130:src/riscv.cpp ****                 char c = *(char *) CONSOLE_RX_DATA;
 131:src/riscv.cpp ****                 myConsole::input_putc(c);
 132:src/riscv.cpp ****                 // put new char to input buffer.
 133:src/riscv.cpp ****             }
 134:src/riscv.cpp **** 
 135:src/riscv.cpp ****             plic_complete(irq);
 136:src/riscv.cpp ****         }
 137:src/riscv.cpp **** 
 138:src/riscv.cpp ****         wr_sepc(sepc);
 139:src/riscv.cpp ****         wr_sstatus(sstatus);
 140:src/riscv.cpp ****         clear_sip(SE);
 141:src/riscv.cpp **** 
 142:src/riscv.cpp ****     }
 143:src/riscv.cpp **** 
 144:src/riscv.cpp ****      else if (scause == U_ECALL || scause == S_ECALL){
 279              		.loc 1 144 11
 280              	.LBB122:
 281              	.LBB91:
 282              	.LBB62:
 283              		.loc 1 144 33 is_stmt 0
 284 00bc 130787FF 		addi	a4,a4,-8
 285              	.LVL17:
 286              		.loc 1 144 11
 287 00c0 93071000 		li	a5,1
 288 00c4 63ECE730 		bgtu	a4,a5,.L36
GAS LISTING /tmp/ccBtDXrK.s 			page 13


 289              	.LBB63:
 145:src/riscv.cpp ****         // environment call from user / supervisor mode
 146:src/riscv.cpp **** 
 147:src/riscv.cpp ****         uint64 sepc = rd_sepc() + 4;
 290              		.loc 1 147 9 is_stmt 1
 291              	.LBB64:
 292              	.LBB65:
  80:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 293              		.loc 2 80 5
  81:src/../h/riscv.hpp ****     return value;
 294              		.loc 2 81 5
  81:src/../h/riscv.hpp ****     return value;
 295              		.loc 2 81 53 is_stmt 0
 296              	#APP
 297              	# 81 "src/../h/riscv.hpp" 1
 298              		csrr a5, sepc
 299              	# 0 "" 2
 300              	#NO_APP
 301 00cc 2334F4FC 		sd	a5,-56(s0)
  82:src/../h/riscv.hpp **** }
 302              		.loc 2 82 5 is_stmt 1
  82:src/../h/riscv.hpp **** }
 303              		.loc 2 82 12 is_stmt 0
 304 00d0 833484FC 		ld	s1,-56(s0)
 305              	.LBE65:
 306              	.LBE64:
 307              		.loc 1 147 35
 308 00d4 93844400 		addi	s1,s1,4
 309              	.LVL18:
 148:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
 310              		.loc 1 148 9 is_stmt 1
 311              	.LBB66:
 312              	.LBB67:
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 313              		.loc 2 120 5
 121:src/../h/riscv.hpp ****     return value;
 314              		.loc 2 121 5
 121:src/../h/riscv.hpp ****     return value;
 315              		.loc 2 121 56 is_stmt 0
 316              	#APP
 317              	# 121 "src/../h/riscv.hpp" 1
 318              		csrr a5, sstatus
 319              	# 0 "" 2
 320              	#NO_APP
 321 00dc 2330F4FC 		sd	a5,-64(s0)
 122:src/../h/riscv.hpp **** }
 322              		.loc 2 122 5 is_stmt 1
 122:src/../h/riscv.hpp **** }
 323              		.loc 2 122 12 is_stmt 0
 324 00e0 033904FC 		ld	s2,-64(s0)
 325              	.LVL19:
 326              	.LBE67:
 327              	.LBE66:
 149:src/riscv.cpp **** 
 150:src/riscv.cpp ****         switch (op) {
 328              		.loc 1 150 9 is_stmt 1
 329 00e4 93072004 		li	a5,66
GAS LISTING /tmp/ccBtDXrK.s 			page 14


 330 00e8 63E60721 		bgtu	a6,a5,.L37
 331 00ec 93172800 		slli	a5,a6,2
 332 00f0 17070000 		lla	a4,.L39
 332      13070700 
 333              	.LVL20:
 334 00f8 B387E700 		add	a5,a5,a4
 335 00fc 83A70700 		lw	a5,0(a5)
 336 0100 B387E700 		add	a5,a5,a4
 337 0104 67800700 		jr	a5
 338              		.section	.rodata
 339              		.align	2
 340              		.align	2
 341              	.L39:
 342 0000 00000000 		.word	.L37-.L39
 343 0004 00000000 		.word	.L52-.L39
 344 0008 00000000 		.word	.L51-.L39
 345 000c 00000000 		.word	.L37-.L39
 346 0010 00000000 		.word	.L37-.L39
 347 0014 00000000 		.word	.L37-.L39
 348 0018 00000000 		.word	.L37-.L39
 349 001c 00000000 		.word	.L37-.L39
 350 0020 00000000 		.word	.L37-.L39
 351 0024 00000000 		.word	.L37-.L39
 352 0028 00000000 		.word	.L37-.L39
 353 002c 00000000 		.word	.L37-.L39
 354 0030 00000000 		.word	.L37-.L39
 355 0034 00000000 		.word	.L37-.L39
 356 0038 00000000 		.word	.L37-.L39
 357 003c 00000000 		.word	.L37-.L39
 358 0040 00000000 		.word	.L37-.L39
 359 0044 00000000 		.word	.L50-.L39
 360 0048 00000000 		.word	.L49-.L39
 361 004c 00000000 		.word	.L48-.L39
 362 0050 00000000 		.word	.L37-.L39
 363 0054 00000000 		.word	.L37-.L39
 364 0058 00000000 		.word	.L37-.L39
 365 005c 00000000 		.word	.L37-.L39
 366 0060 00000000 		.word	.L37-.L39
 367 0064 00000000 		.word	.L37-.L39
 368 0068 00000000 		.word	.L37-.L39
 369 006c 00000000 		.word	.L37-.L39
 370 0070 00000000 		.word	.L37-.L39
 371 0074 00000000 		.word	.L37-.L39
 372 0078 00000000 		.word	.L37-.L39
 373 007c 00000000 		.word	.L37-.L39
 374 0080 00000000 		.word	.L37-.L39
 375 0084 00000000 		.word	.L47-.L39
 376 0088 00000000 		.word	.L46-.L39
 377 008c 00000000 		.word	.L45-.L39
 378 0090 00000000 		.word	.L44-.L39
 379 0094 00000000 		.word	.L43-.L39
 380 0098 00000000 		.word	.L42-.L39
 381 009c 00000000 		.word	.L37-.L39
 382 00a0 00000000 		.word	.L37-.L39
 383 00a4 00000000 		.word	.L37-.L39
 384 00a8 00000000 		.word	.L37-.L39
 385 00ac 00000000 		.word	.L37-.L39
GAS LISTING /tmp/ccBtDXrK.s 			page 15


 386 00b0 00000000 		.word	.L37-.L39
 387 00b4 00000000 		.word	.L37-.L39
 388 00b8 00000000 		.word	.L37-.L39
 389 00bc 00000000 		.word	.L37-.L39
 390 00c0 00000000 		.word	.L37-.L39
 391 00c4 00000000 		.word	.L41-.L39
 392 00c8 00000000 		.word	.L37-.L39
 393 00cc 00000000 		.word	.L37-.L39
 394 00d0 00000000 		.word	.L37-.L39
 395 00d4 00000000 		.word	.L37-.L39
 396 00d8 00000000 		.word	.L37-.L39
 397 00dc 00000000 		.word	.L37-.L39
 398 00e0 00000000 		.word	.L37-.L39
 399 00e4 00000000 		.word	.L37-.L39
 400 00e8 00000000 		.word	.L37-.L39
 401 00ec 00000000 		.word	.L37-.L39
 402 00f0 00000000 		.word	.L37-.L39
 403 00f4 00000000 		.word	.L37-.L39
 404 00f8 00000000 		.word	.L37-.L39
 405 00fc 00000000 		.word	.L37-.L39
 406 0100 00000000 		.word	.L37-.L39
 407 0104 00000000 		.word	.L40-.L39
 408 0108 00000000 		.word	.L38-.L39
 409              		.text
 410              	.LVL21:
 411              	.L54:
 412              	.LBE63:
 413              	.LBE62:
 414              	.LBE91:
 415              	.LBB92:
  49:src/riscv.cpp **** 
 416              		.loc 1 49 9
 417              	.LBB93:
 418              	.LBB94:
 130:src/../h/riscv.hpp **** }
 419              		.loc 2 130 5
 130:src/../h/riscv.hpp **** }
 420              		.loc 2 130 51 is_stmt 0
 421 0108 93072000 		li	a5,2
 422              	#APP
 423              	# 130 "src/../h/riscv.hpp" 1
 424              		csrc sip, a5
 425              	# 0 "" 2
 426              	.LVL22:
 427              	#NO_APP
 428              	.LBE94:
 429              	.LBE93:
  53:src/riscv.cpp **** 
 430              		.loc 1 53 9 is_stmt 1
 431              	.LBB95:
 432              	.LBB96:
 433              	.LBB97:
 434              		.file 4 "src/../h/Scheduler.hpp"
   1:src/../h/Scheduler.hpp **** 
   2:src/../h/Scheduler.hpp **** #ifndef PROJECT_BASE_SCHEDULER_HPP
   3:src/../h/Scheduler.hpp **** #define PROJECT_BASE_SCHEDULER_HPP
   4:src/../h/Scheduler.hpp **** 
GAS LISTING /tmp/ccBtDXrK.s 			page 16


   5:src/../h/Scheduler.hpp **** #include "thread.hpp"
   6:src/../h/Scheduler.hpp **** 
   7:src/../h/Scheduler.hpp **** class Scheduler {
   8:src/../h/Scheduler.hpp **** 
   9:src/../h/Scheduler.hpp ****     friend class RISCV;
  10:src/../h/Scheduler.hpp **** 
  11:src/../h/Scheduler.hpp **** public:
  12:src/../h/Scheduler.hpp ****     static void init_scheduler();
  13:src/../h/Scheduler.hpp **** 
  14:src/../h/Scheduler.hpp ****     static TCB* get();
  15:src/../h/Scheduler.hpp ****     static void put(TCB*);
  16:src/../h/Scheduler.hpp ****     static TCB* peek();
  17:src/../h/Scheduler.hpp ****     static bool empty();
  18:src/../h/Scheduler.hpp **** 
  19:src/../h/Scheduler.hpp ****     static int time_sleep(TCB*, time_t );
  20:src/../h/Scheduler.hpp **** 
  21:src/../h/Scheduler.hpp ****     void* operator new(size_t);
  22:src/../h/Scheduler.hpp ****     void operator delete(void *);
  23:src/../h/Scheduler.hpp **** 
  24:src/../h/Scheduler.hpp ****     Scheduler(const Scheduler&) = delete;
  25:src/../h/Scheduler.hpp **** 
  26:src/../h/Scheduler.hpp **** private:
  27:src/../h/Scheduler.hpp **** 
  28:src/../h/Scheduler.hpp ****     static bool hasSleeping() {return  first_sleepy != nullptr;}
 435              		.loc 4 28 32
 436              		.loc 4 28 53 is_stmt 0
 437 0110 97070000 		la	a5,_ZN9Scheduler12first_sleepyE
 437      83B70700 
 438 0118 83B40700 		ld	s1,0(a5)
 439              	.LBE97:
 440              	.LBE96:
  53:src/riscv.cpp **** 
 441              		.loc 1 53 9
 442 011c 63840404 		beqz	s1,.L22
 443              	.LBB98:
  55:src/riscv.cpp **** 
 444              		.loc 1 55 13 is_stmt 1
  55:src/riscv.cpp **** 
 445              		.loc 1 55 40 is_stmt 0
 446 0120 83B70402 		ld	a5,32(s1)
  55:src/riscv.cpp **** 
 447              		.loc 1 55 54
 448 0124 9387F7FF 		addi	a5,a5,-1
 449 0128 23B0F402 		sd	a5,32(s1)
  57:src/riscv.cpp ****             while (tcb) {
 450              		.loc 1 57 13 is_stmt 1
 451              	.LVL23:
 452              	.L24:
  58:src/riscv.cpp ****                 // remember first sleepy
 453              		.loc 1 58 13
  58:src/riscv.cpp ****                 // remember first sleepy
 454              		.loc 1 58 20
 455 012c 63860402 		beqz	s1,.L23
 456              	.LBB99:
  60:src/riscv.cpp **** 
 457              		.loc 1 60 17
  60:src/riscv.cpp **** 
GAS LISTING /tmp/ccBtDXrK.s 			page 17


 458              		.loc 1 60 28 is_stmt 0
 459 0130 83B70402 		ld	a5,32(s1)
  60:src/riscv.cpp **** 
 460              		.loc 1 60 17
 461 0134 63920702 		bnez	a5,.L23
  62:src/riscv.cpp ****                 Scheduler::put(tcb);
 462              		.loc 1 62 17 is_stmt 1
  62:src/riscv.cpp ****                 Scheduler::put(tcb);
 463              		.loc 1 62 36 is_stmt 0
 464 0138 23A40406 		sw	zero,104(s1)
  63:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
 465              		.loc 1 63 17 is_stmt 1
  63:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
 466              		.loc 1 63 31 is_stmt 0
 467 013c 13850400 		mv	a0,s1
 468 0140 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 468      E7800000 
 469              	.LVL24:
  64:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
 470              		.loc 1 64 17 is_stmt 1
  64:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
 471              		.loc 1 64 22 is_stmt 0
 472 0148 83B70401 		ld	a5,16(s1)
 473              	.LVL25:
  65:src/riscv.cpp ****                 tcb = next;
 474              		.loc 1 65 17 is_stmt 1
  65:src/riscv.cpp ****                 tcb = next;
 475              		.loc 1 65 36 is_stmt 0
 476 014c 23B80400 		sd	zero,16(s1)
  66:src/riscv.cpp ****             }
 477              		.loc 1 66 17 is_stmt 1
 478              	.LVL26:
  66:src/riscv.cpp ****             }
 479              		.loc 1 66 21 is_stmt 0
 480 0150 93840700 		mv	s1,a5
 481              	.LBE99:
  58:src/riscv.cpp ****                 // remember first sleepy
 482              		.loc 1 58 13
 483 0154 6FF09FFD 		j	.L24
 484              	.LVL27:
 485              	.L23:
  69:src/riscv.cpp ****         }
 486              		.loc 1 69 13 is_stmt 1
  69:src/riscv.cpp ****         }
 487              		.loc 1 69 37 is_stmt 0
 488 0158 97070000 		la	a5,_ZN9Scheduler12first_sleepyE
 488      83B70700 
 489 0160 23B09700 		sd	s1,0(a5)
 490              	.LVL28:
 491              	.L22:
 492              	.LBE98:
 493              	.LBE95:
  74:src/riscv.cpp ****             int count = s->timedBlock;
 494              		.loc 1 74 9 is_stmt 1
 495              	.LBB100:
  74:src/riscv.cpp ****             int count = s->timedBlock;
 496              		.loc 1 74 19 is_stmt 0
GAS LISTING /tmp/ccBtDXrK.s 			page 18


 497 0164 97070000 		la	a5,_ZN3Sem5firstE
 497      83B70700 
 498 016c 03BA0700 		ld	s4,0(a5)
 499              	.LVL29:
 500 0170 6F000007 		j	.L30
 501              	.LVL30:
 502              	.L28:
 503              	.LBB101:
 504              	.LBB102:
 505              	.LBB103:
  96:src/riscv.cpp ****             }
 506              		.loc 1 96 17 is_stmt 1
  96:src/riscv.cpp ****             }
 507              		.loc 1 96 19 is_stmt 0
 508 0174 83B48400 		ld	s1,8(s1)
 509              	.LVL31:
 510              	.L26:
 511              	.LBE103:
  76:src/riscv.cpp **** 
 512              		.loc 1 76 59 is_stmt 1 discriminator 1
 513 0178 63820406 		beqz	s1,.L27
  76:src/riscv.cpp **** 
 514              		.loc 1 76 59 is_stmt 0 discriminator 2
 515 017c 63503007 		blez	s3,.L27
 516              	.LBB104:
  78:src/riscv.cpp **** 
 517              		.loc 1 78 17 is_stmt 1
  78:src/riscv.cpp **** 
 518              		.loc 1 78 22 is_stmt 0
 519 0180 03B90400 		ld	s2,0(s1)
 520              	.LVL32:
  80:src/riscv.cpp ****                     count--;
 521              		.loc 1 80 17 is_stmt 1
  80:src/riscv.cpp ****                     count--;
 522              		.loc 1 80 24 is_stmt 0
 523 0184 83378901 		ld	a5,24(s2)
  80:src/riscv.cpp ****                     count--;
 524              		.loc 1 80 17
 525 0188 E38607FE 		beqz	a5,.L28
  81:src/riscv.cpp ****                     // time on sem == 0 will return TIMEOUT
 526              		.loc 1 81 21 is_stmt 1
  81:src/riscv.cpp ****                     // time on sem == 0 will return TIMEOUT
 527              		.loc 1 81 26 is_stmt 0
 528 018c 9B89F9FF 		addiw	s3,s3,-1
 529              	.LVL33:
  83:src/riscv.cpp ****                         // time expired
 530              		.loc 1 83 21 is_stmt 1
  83:src/riscv.cpp ****                         // time expired
 531              		.loc 1 83 26 is_stmt 0
 532 0190 9387F7FF 		addi	a5,a5,-1
  83:src/riscv.cpp ****                         // time expired
 533              		.loc 1 83 43
 534 0194 233CF900 		sd	a5,24(s2)
  83:src/riscv.cpp ****                         // time expired
 535              		.loc 1 83 21
 536 0198 E39E07FC 		bnez	a5,.L28
  86:src/riscv.cpp ****                         s->blocked.remove(t);
GAS LISTING /tmp/ccBtDXrK.s 			page 19


 537              		.loc 1 86 25 is_stmt 1 discriminator 1
  86:src/riscv.cpp ****                         s->blocked.remove(t);
 538              		.loc 1 86 27 is_stmt 0 discriminator 1
 539 019c 83B48400 		ld	s1,8(s1)
 540              	.LVL34:
  87:src/riscv.cpp ****                         s->value++;
 541              		.loc 1 87 25 is_stmt 1 discriminator 1
  87:src/riscv.cpp ****                         s->value++;
 542              		.loc 1 87 42 is_stmt 0 discriminator 1
 543 01a0 93050900 		mv	a1,s2
 544 01a4 13050A01 		addi	a0,s4,16
 545 01a8 97000000 		call	_ZN4ListI3TCBE6removeEPS0_
 545      E7800000 
 546              	.LVL35:
  88:src/riscv.cpp ****                         s->timedBlock--;
 547              		.loc 1 88 25 is_stmt 1 discriminator 1
  88:src/riscv.cpp ****                         s->timedBlock--;
 548              		.loc 1 88 28 is_stmt 0 discriminator 1
 549 01b0 83270A00 		lw	a5,0(s4)
  88:src/riscv.cpp ****                         s->timedBlock--;
 550              		.loc 1 88 33 discriminator 1
 551 01b4 9B871700 		addiw	a5,a5,1
 552 01b8 2320FA00 		sw	a5,0(s4)
  89:src/riscv.cpp **** 
 553              		.loc 1 89 25 is_stmt 1 discriminator 1
  89:src/riscv.cpp **** 
 554              		.loc 1 89 28 is_stmt 0 discriminator 1
 555 01bc 83278A02 		lw	a5,40(s4)
  89:src/riscv.cpp **** 
 556              		.loc 1 89 38 discriminator 1
 557 01c0 9B87F7FF 		addiw	a5,a5,-1
 558 01c4 2324FA02 		sw	a5,40(s4)
  91:src/riscv.cpp ****                         Scheduler::put(t);
 559              		.loc 1 91 25 is_stmt 1 discriminator 1
  91:src/riscv.cpp ****                         Scheduler::put(t);
 560              		.loc 1 91 42 is_stmt 0 discriminator 1
 561 01c8 23240906 		sw	zero,104(s2)
  92:src/riscv.cpp ****                         continue;
 562              		.loc 1 92 25 is_stmt 1 discriminator 1
  92:src/riscv.cpp ****                         continue;
 563              		.loc 1 92 39 is_stmt 0 discriminator 1
 564 01cc 13050900 		mv	a0,s2
 565 01d0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 565      E7800000 
 566              	.LVL36:
  93:src/riscv.cpp ****                     }
 567              		.loc 1 93 25 is_stmt 1 discriminator 1
 568 01d8 6FF01FFA 		j	.L26
 569              	.LVL37:
 570              	.L27:
 571              	.LBE104:
 572              	.LBE102:
 573              	.LBE101:
  74:src/riscv.cpp ****             int count = s->timedBlock;
 574              		.loc 1 74 9 discriminator 2
  74:src/riscv.cpp ****             int count = s->timedBlock;
 575              		.loc 1 74 40 is_stmt 0 discriminator 2
GAS LISTING /tmp/ccBtDXrK.s 			page 20


 576 01dc 033A8A00 		ld	s4,8(s4)
 577              	.LVL38:
 578              	.L30:
  74:src/riscv.cpp ****             int count = s->timedBlock;
 579              		.loc 1 74 35 is_stmt 1 discriminator 1
 580 01e0 63080A00 		beqz	s4,.L25
 581              	.LBB106:
  75:src/riscv.cpp ****             for (List<TCB>::Elem* e = s->blocked.head ; e && count > 0; ) {
 582              		.loc 1 75 13
  75:src/riscv.cpp ****             for (List<TCB>::Elem* e = s->blocked.head ; e && count > 0; ) {
 583              		.loc 1 75 17 is_stmt 0
 584 01e4 83298A02 		lw	s3,40(s4)
 585              	.LVL39:
  76:src/riscv.cpp **** 
 586              		.loc 1 76 13 is_stmt 1
 587              	.LBB105:
  76:src/riscv.cpp **** 
 588              		.loc 1 76 35 is_stmt 0
 589 01e8 83340A01 		ld	s1,16(s4)
 590              	.LVL40:
 591 01ec 6FF0DFF8 		j	.L26
 592              	.LVL41:
 593              	.L25:
 594              	.LBE105:
 595              	.LBE106:
 596              	.LBE100:
 102:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 597              		.loc 1 102 9 is_stmt 1
 102:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 598              		.loc 1 102 31 is_stmt 0
 599 01f0 17070000 		la	a4,_ZN3TCB16time_slice_countE
 599      03370700 
 600 01f8 83370700 		ld	a5,0(a4)
 601 01fc 93871700 		addi	a5,a5,1
 602 0200 2330F700 		sd	a5,0(a4)
 103:src/riscv.cpp ****         {
 603              		.loc 1 103 9 is_stmt 1
 604              	.LBB107:
 103:src/riscv.cpp ****         {
 605              		.loc 1 103 64 is_stmt 0
 606 0204 17070000 		la	a4,_ZN3TCB7runningE
 606      03370700 
 607 020c 03370700 		ld	a4,0(a4)
 608              	.LVL42:
 609              	.LBB108:
 610              	.LBB109:
 611              		.file 5 "src/../h/thread.hpp"
   1:src/../h/thread.hpp **** //
   2:src/../h/thread.hpp **** // Created by os on 4/9/24.
   3:src/../h/thread.hpp **** //
   4:src/../h/thread.hpp **** 
   5:src/../h/thread.hpp **** #ifndef PROJECT_BASE_THREAD_HPP
   6:src/../h/thread.hpp **** #define PROJECT_BASE_THREAD_HPP
   7:src/../h/thread.hpp **** 
   8:src/../h/thread.hpp **** #include "../lib/hw.h"
   9:src/../h/thread.hpp **** #include "../h/Memoryallocator.hpp"
  10:src/../h/thread.hpp **** #include "../h/riscv.hpp"
GAS LISTING /tmp/ccBtDXrK.s 			page 21


  11:src/../h/thread.hpp **** #include "../h/syscall_c.hpp"
  12:src/../h/thread.hpp **** 
  13:src/../h/thread.hpp **** //extern void thread_dispatch();
  14:src/../h/thread.hpp **** 
  15:src/../h/thread.hpp **** using routine_ptr = void(*)(void *);
  16:src/../h/thread.hpp **** 
  17:src/../h/thread.hpp **** // _thread je wrapper ove klase
  18:src/../h/thread.hpp **** class TCB final {
  19:src/../h/thread.hpp **** 
  20:src/../h/thread.hpp ****     friend class RISCV;
  21:src/../h/thread.hpp ****     friend class Sem;
  22:src/../h/thread.hpp ****     friend class Scheduler;
  23:src/../h/thread.hpp **** 
  24:src/../h/thread.hpp **** public:
  25:src/../h/thread.hpp **** 
  26:src/../h/thread.hpp ****     static TCB* running; // current thread
  27:src/../h/thread.hpp **** 
  28:src/../h/thread.hpp ****     enum state {
  29:src/../h/thread.hpp ****         RUNNABLE,
  30:src/../h/thread.hpp ****         SLEEPING,
  31:src/../h/thread.hpp ****         CREATED,
  32:src/../h/thread.hpp ****         FINISHED,
  33:src/../h/thread.hpp ****         BLOCKED
  34:src/../h/thread.hpp ****     };
  35:src/../h/thread.hpp ****     struct Context {
  36:src/../h/thread.hpp ****         // nadogradi kasnije
  37:src/../h/thread.hpp ****         uint64 pc;
  38:src/../h/thread.hpp ****         uint64 sp;
  39:src/../h/thread.hpp ****         uint64 sstatus;
  40:src/../h/thread.hpp ****         uint64 sepc;
  41:src/../h/thread.hpp ****     };
  42:src/../h/thread.hpp **** 
  43:src/../h/thread.hpp ****     static int _threadCreate(TCB** handle, routine_ptr routine, void* args, void* stack_space); // 
  44:src/../h/thread.hpp **** 
  45:src/../h/thread.hpp ****     static void yield(TCB*, TCB*);
  46:src/../h/thread.hpp **** 
  47:src/../h/thread.hpp ****     static void dispatch();
  48:src/../h/thread.hpp **** 
  49:src/../h/thread.hpp ****     time_t getTimeSlice() const {return time_slice;}
 612              		.loc 5 49 34 is_stmt 1
 613              		.loc 5 49 41 is_stmt 0
 614 0210 03378702 		ld	a4,40(a4)
 615              	.LVL43:
 616              	.LBE109:
 617              	.LBE108:
 103:src/riscv.cpp ****         {
 618              		.loc 1 103 9
 619 0214 63E4E70E 		bltu	a5,a4,.L20
 620              	.LBB110:
 105:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
 621              		.loc 1 105 13 is_stmt 1
 622              	.LBB111:
 623              	.LBB112:
  80:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 624              		.loc 2 80 5
  81:src/../h/riscv.hpp ****     return value;
 625              		.loc 2 81 5
GAS LISTING /tmp/ccBtDXrK.s 			page 22


  81:src/../h/riscv.hpp ****     return value;
 626              		.loc 2 81 53 is_stmt 0
 627              	#APP
 628              	# 81 "src/../h/riscv.hpp" 1
 629              		csrr a5, sepc
 630              	# 0 "" 2
 631              	#NO_APP
 632 021c 2334F4FA 		sd	a5,-88(s0)
  82:src/../h/riscv.hpp **** }
 633              		.loc 2 82 5 is_stmt 1
  82:src/../h/riscv.hpp **** }
 634              		.loc 2 82 12 is_stmt 0
 635 0220 033984FA 		ld	s2,-88(s0)
 636              	.LVL44:
 637              	.LBE112:
 638              	.LBE111:
 106:src/riscv.cpp **** 
 639              		.loc 1 106 13 is_stmt 1
 640              	.LBB113:
 641              	.LBB114:
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 642              		.loc 2 120 5
 121:src/../h/riscv.hpp ****     return value;
 643              		.loc 2 121 5
 121:src/../h/riscv.hpp ****     return value;
 644              		.loc 2 121 56 is_stmt 0
 645              	#APP
 646              	# 121 "src/../h/riscv.hpp" 1
 647              		csrr a5, sstatus
 648              	# 0 "" 2
 649              	#NO_APP
 650 0228 2330F4FA 		sd	a5,-96(s0)
 122:src/../h/riscv.hpp **** }
 651              		.loc 2 122 5 is_stmt 1
 122:src/../h/riscv.hpp **** }
 652              		.loc 2 122 12 is_stmt 0
 653 022c 833404FA 		ld	s1,-96(s0)
 654              	.LVL45:
 655              	.LBE114:
 656              	.LBE113:
 108:src/riscv.cpp ****             TCB::dispatch();
 657              		.loc 1 108 13 is_stmt 1
 108:src/riscv.cpp ****             TCB::dispatch();
 658              		.loc 1 108 35 is_stmt 0
 659 0230 97070000 		la	a5,_ZN3TCB16time_slice_countE
 659      83B70700 
 660 0238 23B00700 		sd	zero,0(a5)
 109:src/riscv.cpp **** 
 661              		.loc 1 109 13 is_stmt 1
 109:src/riscv.cpp **** 
 662              		.loc 1 109 26 is_stmt 0
 663 023c 97000000 		call	_ZN3TCB8dispatchEv@plt
 663      E7800000 
 664              	.LVL46:
 111:src/riscv.cpp ****             wr_sstatus(sstatus);
 665              		.loc 1 111 13 is_stmt 1
 666              	.LBB115:
GAS LISTING /tmp/ccBtDXrK.s 			page 23


 667              	.LBB116:
  86:src/../h/riscv.hpp **** }
 668              		.loc 2 86 5
  86:src/../h/riscv.hpp **** }
 669              		.loc 2 86 54 is_stmt 0
 670              	#APP
 671              	# 86 "src/../h/riscv.hpp" 1
 672              		csrw sepc, s2
 673              	# 0 "" 2
 674              	.LVL47:
 675              	#NO_APP
 676              	.LBE116:
 677              	.LBE115:
 112:src/riscv.cpp **** 
 678              		.loc 1 112 13 is_stmt 1
 679              	.LBB117:
 680              	.LBB118:
 126:src/../h/riscv.hpp **** }
 681              		.loc 2 126 5
 126:src/../h/riscv.hpp **** }
 682              		.loc 2 126 57 is_stmt 0
 683              	#APP
 684              	# 126 "src/../h/riscv.hpp" 1
 127:src/../h/riscv.hpp **** 
 685              		csrw sstatus, s1
 686              	# 0 "" 2
 687              		.loc 2 127 1
 688              	#NO_APP
 689 024c 6F00000B 		j	.L20
 690              	.LVL48:
 691              	.L55:
 692              	.LBE118:
 693              	.LBE117:
 694              	.LBE110:
 695              	.LBE107:
 696              	.LBE92:
 697              	.LBB119:
 698              	.LBB74:
 122:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
 699              		.loc 1 122 9 is_stmt 1
 700              	.LBB75:
 701              	.LBB76:
  80:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 702              		.loc 2 80 5
  81:src/../h/riscv.hpp ****     return value;
 703              		.loc 2 81 5
  81:src/../h/riscv.hpp ****     return value;
 704              		.loc 2 81 53 is_stmt 0
 705              	#APP
 706              	# 81 "src/../h/riscv.hpp" 1
 707              		csrr a5, sepc
 708              	# 0 "" 2
 709              	#NO_APP
 710 0254 233CF4FA 		sd	a5,-72(s0)
  82:src/../h/riscv.hpp **** }
 711              		.loc 2 82 5 is_stmt 1
  82:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccBtDXrK.s 			page 24


 712              		.loc 2 82 12 is_stmt 0
 713 0258 833984FB 		ld	s3,-72(s0)
 714              	.LVL49:
 715              	.LBE76:
 716              	.LBE75:
 123:src/riscv.cpp **** 
 717              		.loc 1 123 9 is_stmt 1
 718              	.LBB77:
 719              	.LBB78:
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 720              		.loc 2 120 5
 121:src/../h/riscv.hpp ****     return value;
 721              		.loc 2 121 5
 121:src/../h/riscv.hpp ****     return value;
 722              		.loc 2 121 56 is_stmt 0
 723              	#APP
 724              	# 121 "src/../h/riscv.hpp" 1
 725              		csrr a5, sstatus
 726              	# 0 "" 2
 727              	#NO_APP
 728 0260 2338F4FA 		sd	a5,-80(s0)
 122:src/../h/riscv.hpp **** }
 729              		.loc 2 122 5 is_stmt 1
 122:src/../h/riscv.hpp **** }
 730              		.loc 2 122 12 is_stmt 0
 731 0264 033904FB 		ld	s2,-80(s0)
 732              	.LVL50:
 733              	.LBE78:
 734              	.LBE77:
 125:src/riscv.cpp ****         if (irq == CONSOLE_IRQ) {
 735              		.loc 1 125 9 is_stmt 1
 125:src/riscv.cpp ****         if (irq == CONSOLE_IRQ) {
 736              		.loc 1 125 29 is_stmt 0
 737 0268 97000000 		call	plic_claim@plt
 737      E7800000 
 738              	.LVL51:
 739 0270 93040500 		mv	s1,a0
 740              	.LVL52:
 126:src/riscv.cpp **** 
 741              		.loc 1 126 9 is_stmt 1
 742              	.LBB79:
 743 0274 9307A000 		li	a5,10
 744 0278 630CF500 		beq	a0,a5,.L35
 745              	.LVL53:
 746              	.L33:
 747              	.LBE79:
 138:src/riscv.cpp ****         wr_sstatus(sstatus);
 748              		.loc 1 138 9
 749              	.LBB82:
 750              	.LBB83:
  86:src/../h/riscv.hpp **** }
 751              		.loc 2 86 5
  86:src/../h/riscv.hpp **** }
 752              		.loc 2 86 54 is_stmt 0
 753              	#APP
 754              	# 86 "src/../h/riscv.hpp" 1
 755              		csrw sepc, s3
GAS LISTING /tmp/ccBtDXrK.s 			page 25


 756              	# 0 "" 2
 757              	.LVL54:
 758              	#NO_APP
 759              	.LBE83:
 760              	.LBE82:
 139:src/riscv.cpp ****         clear_sip(SE);
 761              		.loc 1 139 9 is_stmt 1
 762              	.LBB84:
 763              	.LBB85:
 126:src/../h/riscv.hpp **** }
 764              		.loc 2 126 5
 126:src/../h/riscv.hpp **** }
 765              		.loc 2 126 57 is_stmt 0
 766              	#APP
 767              	# 126 "src/../h/riscv.hpp" 1
 768              		csrw sstatus, s2
 769              	# 0 "" 2
 770              	.LVL55:
 771              	#NO_APP
 772              	.LBE85:
 773              	.LBE84:
 140:src/riscv.cpp **** 
 774              		.loc 1 140 9 is_stmt 1
 775              	.LBB86:
 776              	.LBB87:
 130:src/../h/riscv.hpp **** }
 777              		.loc 2 130 5
 130:src/../h/riscv.hpp **** }
 778              		.loc 2 130 51 is_stmt 0
 779 0284 93070020 		li	a5,512
 780              	#APP
 781              	# 130 "src/../h/riscv.hpp" 1
 131:src/../h/riscv.hpp **** 
 782              		csrc sip, a5
 783              	# 0 "" 2
 784              		.loc 2 131 1
 785              	#NO_APP
 786 028c 6F000007 		j	.L20
 787              	.LVL56:
 788              	.L35:
 789              	.LBE87:
 790              	.LBE86:
 791              	.LBB88:
 792              	.LBB80:
 128:src/riscv.cpp **** 
 793              		.loc 1 128 13 is_stmt 1
 128:src/riscv.cpp **** 
 794              		.loc 1 128 69
 128:src/riscv.cpp **** 
 795              		.loc 1 128 20 is_stmt 0
 796 0290 97070000 		la	a5,CONSOLE_STATUS
 796      83B70700 
 797 0298 83B70700 		ld	a5,0(a5)
 798 029c 83C70700 		lbu	a5,0(a5)
 128:src/riscv.cpp **** 
 799              		.loc 1 128 69
 800 02a0 93F71700 		andi	a5,a5,1
GAS LISTING /tmp/ccBtDXrK.s 			page 26


 801 02a4 638C0702 		beqz	a5,.L34
 128:src/riscv.cpp **** 
 802              		.loc 1 128 101 discriminator 1
 803 02a8 97070000 		la	a5,_ZN9myConsole11inputBufferE
 803      83B70700 
 804 02b0 03B50700 		ld	a0,0(a5)
 805 02b4 97000000 		call	_ZNK13BoundedBuffer4fullEv@plt
 805      E7800000 
 806              	.LVL57:
 128:src/riscv.cpp **** 
 807              		.loc 1 128 69 discriminator 1
 808 02bc 63100502 		bnez	a0,.L34
 809              	.LBB81:
 130:src/riscv.cpp ****                 myConsole::input_putc(c);
 810              		.loc 1 130 17 is_stmt 1
 130:src/riscv.cpp ****                 myConsole::input_putc(c);
 811              		.loc 1 130 26 is_stmt 0
 812 02c0 97070000 		la	a5,CONSOLE_RX_DATA
 812      83B70700 
 813 02c8 83B70700 		ld	a5,0(a5)
 814              	.LVL58:
 131:src/riscv.cpp ****                 // put new char to input buffer.
 815              		.loc 1 131 17 is_stmt 1
 131:src/riscv.cpp ****                 // put new char to input buffer.
 816              		.loc 1 131 38 is_stmt 0
 817 02cc 03C50700 		lbu	a0,0(a5)
 818 02d0 97000000 		call	_ZN9myConsole10input_putcEc@plt
 818      E7800000 
 819              	.LVL59:
 820              	.LBE81:
 128:src/riscv.cpp **** 
 821              		.loc 1 128 13
 822 02d8 6FF09FFB 		j	.L35
 823              	.L34:
 135:src/riscv.cpp ****         }
 824              		.loc 1 135 13 is_stmt 1 discriminator 4
 135:src/riscv.cpp ****         }
 825              		.loc 1 135 26 is_stmt 0 discriminator 4
 826 02dc 13850400 		mv	a0,s1
 827 02e0 97000000 		call	plic_complete@plt
 827      E7800000 
 828              	.LVL60:
 829              	.LBE80:
 830 02e8 6FF05FF9 		j	.L33
 831              	.LVL61:
 832              	.L52:
 833              	.LBE88:
 834              	.LBE74:
 835              	.LBB89:
 836              	.LBB72:
 151:src/riscv.cpp ****             case MEM_ALLOC:
 837              		.loc 1 151 13 is_stmt 1
 152:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
 838              		.loc 1 152 17
 839              		.loc 1 152 43 is_stmt 0
 840 02ec 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 840      E7800000 
GAS LISTING /tmp/ccBtDXrK.s 			page 27


 841              	.LVL62:
 153:src/riscv.cpp ****                 break;
 842              		.loc 1 153 17 is_stmt 1
 843              	.L37:
 154:src/riscv.cpp ****             case MEM_FREE:
 155:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 156:src/riscv.cpp ****                 break;
 157:src/riscv.cpp ****             case THREAD_CREATE:
 158:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 159:src/riscv.cpp ****                 break;
 160:src/riscv.cpp ****             case THREAD_EXIT:
 161:src/riscv.cpp ****                 TCB::_threadExit();
 162:src/riscv.cpp ****                 break;
 163:src/riscv.cpp ****             case THREAD_DISPATCH:
 164:src/riscv.cpp ****                 TCB::time_slice_count = 0;
 165:src/riscv.cpp ****                 TCB::dispatch();
 166:src/riscv.cpp ****                 break;
 167:src/riscv.cpp ****             case SEM_OPEN:
 168:src/riscv.cpp ****                 Sem::open((sem_t*)a1, (unsigned int)a2);
 169:src/riscv.cpp ****                 break;
 170:src/riscv.cpp ****             case SEM_CLOSE:
 171:src/riscv.cpp ****                 Sem::s_close((sem_t)a1); // a1 == handle
 172:src/riscv.cpp ****                 break;
 173:src/riscv.cpp ****             case SEM_WAIT:
 174:src/riscv.cpp ****                 Sem::wait(((sem_t)a1)); // a1 <=> handle
 175:src/riscv.cpp ****                 break;
 176:src/riscv.cpp ****             case SEM_SIGNAL:
 177:src/riscv.cpp ****                 Sem::signal((sem_t)a1); // a1 <=> handle
 178:src/riscv.cpp ****                 break;
 179:src/riscv.cpp ****             case SEM_TIMEDWAIT:
 180:src/riscv.cpp ****                 Sem::timedwait((sem_t)a1,(time_t)a2);
 181:src/riscv.cpp ****                 break;
 182:src/riscv.cpp ****             case SEM_TRYWAIT:
 183:src/riscv.cpp ****                 Sem::trywait((sem_t)a1);
 184:src/riscv.cpp ****                 break;
 185:src/riscv.cpp ****             case TIME_SLEEP:
 186:src/riscv.cpp ****                 Scheduler::time_sleep((thread_t)TCB::running, (time_t)a1);
 187:src/riscv.cpp ****                 break;
 188:src/riscv.cpp ****             case GETC:
 189:src/riscv.cpp ****                 myConsole::input_getc();
 190:src/riscv.cpp ****                 break;
 191:src/riscv.cpp ****             case PUTC:
 192:src/riscv.cpp ****                 myConsole::output_putc((char) a1);
 193:src/riscv.cpp ****                 break;
 194:src/riscv.cpp ****         }
 195:src/riscv.cpp **** 
 196:src/riscv.cpp ****         wr_sepc(sepc);
 844              		.loc 1 196 9
 845              	.LBB68:
 846              	.LBB69:
  86:src/../h/riscv.hpp **** }
 847              		.loc 2 86 5
  86:src/../h/riscv.hpp **** }
 848              		.loc 2 86 54 is_stmt 0
 849              	#APP
 850              	# 86 "src/../h/riscv.hpp" 1
 851              		csrw sepc, s1
GAS LISTING /tmp/ccBtDXrK.s 			page 28


 852              	# 0 "" 2
 853              	.LVL63:
 854              	#NO_APP
 855              	.LBE69:
 856              	.LBE68:
 197:src/riscv.cpp ****         wr_sstatus(sstatus);
 857              		.loc 1 197 9 is_stmt 1
 858              	.LBB70:
 859              	.LBB71:
 126:src/../h/riscv.hpp **** }
 860              		.loc 2 126 5
 126:src/../h/riscv.hpp **** }
 861              		.loc 2 126 57 is_stmt 0
 862              	#APP
 863              	# 126 "src/../h/riscv.hpp" 1
 864              		csrw sstatus, s2
 865              	# 0 "" 2
 866              	.LVL64:
 867              	#NO_APP
 868              	.L20:
 869              	.LBE71:
 870              	.LBE70:
 871              	.LBE72:
 872              	.LBE89:
 873              	.LBE119:
 874              	.LBE122:
 198:src/riscv.cpp **** 
 199:src/riscv.cpp ****     } else {
 200:src/riscv.cpp ****         // INVALID INTERRUPT CODE
 201:src/riscv.cpp ****         printInteger(123456789);
 202:src/riscv.cpp ****     }
 203:src/riscv.cpp **** }
 875              		.loc 1 203 1
 876 02fc 83308106 		ld	ra,104(sp)
 877              		.cfi_remember_state
 878              		.cfi_restore 1
 879 0300 03340106 		ld	s0,96(sp)
 880              		.cfi_restore 8
 881              		.cfi_def_cfa 2, 112
 882 0304 83348105 		ld	s1,88(sp)
 883              		.cfi_restore 9
 884 0308 03390105 		ld	s2,80(sp)
 885              		.cfi_restore 18
 886 030c 83398104 		ld	s3,72(sp)
 887              		.cfi_restore 19
 888 0310 033A0104 		ld	s4,64(sp)
 889              		.cfi_restore 20
 890 0314 13010107 		addi	sp,sp,112
 891              		.cfi_def_cfa_offset 0
 892 0318 67800000 		jr	ra
 893              	.LVL65:
 894              	.L51:
 895              		.cfi_restore_state
 896              	.LBB123:
 897              	.LBB120:
 898              	.LBB90:
 899              	.LBB73:
GAS LISTING /tmp/ccBtDXrK.s 			page 29


 154:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 900              		.loc 1 154 13 is_stmt 1
 155:src/riscv.cpp ****                 break;
 901              		.loc 1 155 17
 155:src/riscv.cpp ****                 break;
 902              		.loc 1 155 42 is_stmt 0
 903 031c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 903      E7800000 
 904              	.LVL66:
 156:src/riscv.cpp ****             case THREAD_CREATE:
 905              		.loc 1 156 17 is_stmt 1
 906 0324 6FF01FFD 		j	.L37
 907              	.LVL67:
 908              	.L50:
 157:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 909              		.loc 1 157 13
 158:src/riscv.cpp ****                 break;
 910              		.loc 1 158 17
 158:src/riscv.cpp ****                 break;
 911              		.loc 1 158 35 is_stmt 0
 912 0328 97000000 		call	_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_@plt
 912      E7800000 
 913              	.LVL68:
 159:src/riscv.cpp ****             case THREAD_EXIT:
 914              		.loc 1 159 17 is_stmt 1
 915 0330 6FF05FFC 		j	.L37
 916              	.LVL69:
 917              	.L49:
 160:src/riscv.cpp ****                 TCB::_threadExit();
 918              		.loc 1 160 13
 161:src/riscv.cpp ****                 break;
 919              		.loc 1 161 17
 161:src/riscv.cpp ****                 break;
 920              		.loc 1 161 33 is_stmt 0
 921 0334 97000000 		call	_ZN3TCB11_threadExitEv@plt
 921      E7800000 
 922              	.LVL70:
 162:src/riscv.cpp ****             case THREAD_DISPATCH:
 923              		.loc 1 162 17 is_stmt 1
 924 033c 6FF09FFB 		j	.L37
 925              	.LVL71:
 926              	.L48:
 163:src/riscv.cpp ****                 TCB::time_slice_count = 0;
 927              		.loc 1 163 13
 164:src/riscv.cpp ****                 TCB::dispatch();
 928              		.loc 1 164 17
 164:src/riscv.cpp ****                 TCB::dispatch();
 929              		.loc 1 164 39 is_stmt 0
 930 0340 97070000 		la	a5,_ZN3TCB16time_slice_countE
 930      83B70700 
 931 0348 23B00700 		sd	zero,0(a5)
 165:src/riscv.cpp ****                 break;
 932              		.loc 1 165 17 is_stmt 1
 165:src/riscv.cpp ****                 break;
 933              		.loc 1 165 30 is_stmt 0
 934 034c 97000000 		call	_ZN3TCB8dispatchEv@plt
 934      E7800000 
GAS LISTING /tmp/ccBtDXrK.s 			page 30


 935              	.LVL72:
 166:src/riscv.cpp ****             case SEM_OPEN:
 936              		.loc 1 166 17 is_stmt 1
 937 0354 6FF01FFA 		j	.L37
 938              	.LVL73:
 939              	.L47:
 167:src/riscv.cpp ****                 Sem::open((sem_t*)a1, (unsigned int)a2);
 940              		.loc 1 167 13
 168:src/riscv.cpp ****                 break;
 941              		.loc 1 168 17
 168:src/riscv.cpp ****                 break;
 942              		.loc 1 168 26 is_stmt 0
 943 0358 9B850500 		sext.w	a1,a1
 944              	.LVL74:
 945 035c 97000000 		call	_ZN3Sem4openEPPS_j@plt
 945      E7800000 
 946              	.LVL75:
 169:src/riscv.cpp ****             case SEM_CLOSE:
 947              		.loc 1 169 17 is_stmt 1
 948 0364 6FF01FF9 		j	.L37
 949              	.LVL76:
 950              	.L46:
 170:src/riscv.cpp ****                 Sem::s_close((sem_t)a1); // a1 == handle
 951              		.loc 1 170 13
 171:src/riscv.cpp ****                 break;
 952              		.loc 1 171 17
 171:src/riscv.cpp ****                 break;
 953              		.loc 1 171 29 is_stmt 0
 954 0368 97000000 		call	_ZN3Sem7s_closeEPS_@plt
 954      E7800000 
 955              	.LVL77:
 172:src/riscv.cpp ****             case SEM_WAIT:
 956              		.loc 1 172 17 is_stmt 1
 957 0370 6FF05FF8 		j	.L37
 958              	.LVL78:
 959              	.L45:
 173:src/riscv.cpp ****                 Sem::wait(((sem_t)a1)); // a1 <=> handle
 960              		.loc 1 173 13
 174:src/riscv.cpp ****                 break;
 961              		.loc 1 174 17
 174:src/riscv.cpp ****                 break;
 962              		.loc 1 174 26 is_stmt 0
 963 0374 97000000 		call	_ZN3Sem4waitEPS_@plt
 963      E7800000 
 964              	.LVL79:
 175:src/riscv.cpp ****             case SEM_SIGNAL:
 965              		.loc 1 175 17 is_stmt 1
 966 037c 6FF09FF7 		j	.L37
 967              	.LVL80:
 968              	.L44:
 176:src/riscv.cpp ****                 Sem::signal((sem_t)a1); // a1 <=> handle
 969              		.loc 1 176 13
 177:src/riscv.cpp ****                 break;
 970              		.loc 1 177 17
 177:src/riscv.cpp ****                 break;
 971              		.loc 1 177 28 is_stmt 0
 972 0380 97000000 		call	_ZN3Sem6signalEPS_@plt
GAS LISTING /tmp/ccBtDXrK.s 			page 31


 972      E7800000 
 973              	.LVL81:
 178:src/riscv.cpp ****             case SEM_TIMEDWAIT:
 974              		.loc 1 178 17 is_stmt 1
 975 0388 6FF0DFF6 		j	.L37
 976              	.LVL82:
 977              	.L43:
 179:src/riscv.cpp ****                 Sem::timedwait((sem_t)a1,(time_t)a2);
 978              		.loc 1 179 13
 180:src/riscv.cpp ****                 break;
 979              		.loc 1 180 17
 180:src/riscv.cpp ****                 break;
 980              		.loc 1 180 31 is_stmt 0
 981 038c 97000000 		call	_ZN3Sem9timedwaitEPS_m@plt
 981      E7800000 
 982              	.LVL83:
 181:src/riscv.cpp ****             case SEM_TRYWAIT:
 983              		.loc 1 181 17 is_stmt 1
 984 0394 6FF01FF6 		j	.L37
 985              	.LVL84:
 986              	.L42:
 182:src/riscv.cpp ****                 Sem::trywait((sem_t)a1);
 987              		.loc 1 182 13
 183:src/riscv.cpp ****                 break;
 988              		.loc 1 183 17
 183:src/riscv.cpp ****                 break;
 989              		.loc 1 183 29 is_stmt 0
 990 0398 97000000 		call	_ZN3Sem7trywaitEPS_@plt
 990      E7800000 
 991              	.LVL85:
 184:src/riscv.cpp ****             case TIME_SLEEP:
 992              		.loc 1 184 17 is_stmt 1
 993 03a0 6FF05FF5 		j	.L37
 994              	.LVL86:
 995              	.L41:
 185:src/riscv.cpp ****                 Scheduler::time_sleep((thread_t)TCB::running, (time_t)a1);
 996              		.loc 1 185 13
 186:src/riscv.cpp ****                 break;
 997              		.loc 1 186 17
 186:src/riscv.cpp ****                 break;
 998              		.loc 1 186 38 is_stmt 0
 999 03a4 93050500 		mv	a1,a0
 1000              	.LVL87:
 1001 03a8 97070000 		la	a5,_ZN3TCB7runningE
 1001      83B70700 
 1002 03b0 03B50700 		ld	a0,0(a5)
 1003              	.LVL88:
 1004 03b4 97000000 		call	_ZN9Scheduler10time_sleepEP3TCBm@plt
 1004      E7800000 
 1005              	.LVL89:
 187:src/riscv.cpp ****             case GETC:
 1006              		.loc 1 187 17 is_stmt 1
 1007 03bc 6FF09FF3 		j	.L37
 1008              	.LVL90:
 1009              	.L40:
 188:src/riscv.cpp ****                 myConsole::input_getc();
 1010              		.loc 1 188 13
GAS LISTING /tmp/ccBtDXrK.s 			page 32


 189:src/riscv.cpp ****                 break;
 1011              		.loc 1 189 17
 189:src/riscv.cpp ****                 break;
 1012              		.loc 1 189 38 is_stmt 0
 1013 03c0 97000000 		call	_ZN9myConsole10input_getcEv@plt
 1013      E7800000 
 1014              	.LVL91:
 190:src/riscv.cpp ****             case PUTC:
 1015              		.loc 1 190 17 is_stmt 1
 1016 03c8 6FF0DFF2 		j	.L37
 1017              	.LVL92:
 1018              	.L38:
 191:src/riscv.cpp ****                 myConsole::output_putc((char) a1);
 1019              		.loc 1 191 13
 192:src/riscv.cpp ****                 break;
 1020              		.loc 1 192 17
 192:src/riscv.cpp ****                 break;
 1021              		.loc 1 192 39 is_stmt 0
 1022 03cc 1375F50F 		andi	a0,a0,0xff
 1023              	.LVL93:
 1024 03d0 97000000 		call	_ZN9myConsole11output_putcEc@plt
 1024      E7800000 
 1025              	.LVL94:
 193:src/riscv.cpp ****         }
 1026              		.loc 1 193 17 is_stmt 1
 1027 03d8 6FF0DFF1 		j	.L37
 1028              	.LVL95:
 1029              	.L36:
 1030              	.LBE73:
 201:src/riscv.cpp ****     }
 1031              		.loc 1 201 9
 201:src/riscv.cpp ****     }
 1032              		.loc 1 201 21 is_stmt 0
 1033 03dc 37D55B07 		li	a0,123457536
 1034              	.LVL96:
 1035 03e0 130555D1 		addi	a0,a0,-747
 1036 03e4 97000000 		call	_Z12printIntegerm@plt
 1036      E7800000 
 1037              	.LVL97:
 1038              	.LBE90:
 1039              	.LBE120:
 1040              	.LBE123:
 1041              		.loc 1 203 1
 1042 03ec 6FF01FF1 		j	.L20
 1043              		.cfi_endproc
 1044              	.LFE35:
 1046              	.Letext0:
 1047              		.file 6 "src/../lib/hw.h"
 1048              		.file 7 "src/../h/syscall_c.hpp"
 1049              		.file 8 "src/../h/semaphore.hpp"
 1050              		.file 9 "src/../h/Memoryallocator.hpp"
 1051              		.file 10 "src/../h/BoundedBuffer.hpp"
 1052              		.file 11 "src/../h/Console.hpp"
GAS LISTING /tmp/ccBtDXrK.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccBtDXrK.s:9      .text:0000000000000000 _ZN5RISCV10popSppSpieEv
     /tmp/ccBtDXrK.s:13     .text:0000000000000000 .L0 
     /tmp/ccBtDXrK.s:14     .text:0000000000000000 .L0 
     /tmp/ccBtDXrK.s:15     .text:0000000000000004 .L0 
     /tmp/ccBtDXrK.s:17     .text:0000000000000008 .L0 
     /tmp/ccBtDXrK.s:19     .text:000000000000000c .L0 
     /tmp/ccBtDXrK.s:21     .text:000000000000000c .L0 
     /tmp/ccBtDXrK.s:22     .text:000000000000000c .L0 
     /tmp/ccBtDXrK.s:26     .text:000000000000001c .L0 
     /tmp/ccBtDXrK.s:33     .text:0000000000000028 .L0 
     /tmp/ccBtDXrK.s:34     .text:0000000000000028 .L0 
     /tmp/ccBtDXrK.s:35     .text:0000000000000028 .L0 
     /tmp/ccBtDXrK.s:46     .text:0000000000000030 .L0 
       src/riscv.cpp:19     .text:0000000000000030 .L0 
     /tmp/ccBtDXrK.s:52     .text:0000000000000034 .L0 
       src/riscv.cpp:20     .text:0000000000000034 .L0 
     /tmp/ccBtDXrK.s:58     .text:0000000000000038 .L0 
     /tmp/ccBtDXrK.s:59     .text:000000000000003c .L0 
     /tmp/ccBtDXrK.s:60     .text:000000000000003c .L0 
     /tmp/ccBtDXrK.s:62     .text:0000000000000040 .L0 
     /tmp/ccBtDXrK.s:64     .text:0000000000000044 .L0 
     /tmp/ccBtDXrK.s:70     .text:0000000000000044 _ZN5RISCV12return_valueEm
     /tmp/ccBtDXrK.s:73     .text:0000000000000044 .L0 
     /tmp/ccBtDXrK.s:75     .text:0000000000000044 .L0 
     /tmp/ccBtDXrK.s:76     .text:0000000000000048 .L0 
     /tmp/ccBtDXrK.s:78     .text:000000000000004c .L0 
     /tmp/ccBtDXrK.s:80     .text:0000000000000050 .L0 
     /tmp/ccBtDXrK.s:82     .text:0000000000000050 .L0 
     /tmp/ccBtDXrK.s:83     .text:0000000000000050 .L0 
     /tmp/ccBtDXrK.s:84     .text:0000000000000054 .L0 
     /tmp/ccBtDXrK.s:85     .text:0000000000000054 .L0 
     /tmp/ccBtDXrK.s:87     .text:0000000000000058 .L0 
     /tmp/ccBtDXrK.s:89     .text:000000000000005c .L0 
     /tmp/ccBtDXrK.s:96     .text._ZN4ListI3TCBE6removeEPS0_:0000000000000000 _ZN4ListI3TCBE6removeEPS0_
     /tmp/ccBtDXrK.s:100    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000000 .L0 
     /tmp/ccBtDXrK.s:102    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000000 .L0 
     /tmp/ccBtDXrK.s:105    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000004 .L0 
     /tmp/ccBtDXrK.s:108    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000008 .L0 
     /tmp/ccBtDXrK.s:112    .text._ZN4ListI3TCBE6removeEPS0_:000000000000000c .L0 
     /tmp/ccBtDXrK.s:114    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000010 .L0 
     /tmp/ccBtDXrK.s:116    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000014 .L0 
     /tmp/ccBtDXrK.s:119    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000018 .L0 
     /tmp/ccBtDXrK.s:121    .text._ZN4ListI3TCBE6removeEPS0_:000000000000001c .L0 
     /tmp/ccBtDXrK.s:124    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000020 .L0 
     /tmp/ccBtDXrK.s:127    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000024 .L0 
     /tmp/ccBtDXrK.s:128    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000028 .L0 
     /tmp/ccBtDXrK.s:131    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000030 .L0 
     /tmp/ccBtDXrK.s:132    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000030 .L0 
     /tmp/ccBtDXrK.s:134    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000034 .L0 
     /tmp/ccBtDXrK.s:136    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000034 .L0 
     /tmp/ccBtDXrK.s:138    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000038 .L0 
     /tmp/ccBtDXrK.s:140    .text._ZN4ListI3TCBE6removeEPS0_:000000000000003c .L0 
     /tmp/ccBtDXrK.s:142    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000040 .L0 
     /tmp/ccBtDXrK.s:144    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000044 .L0 
     /tmp/ccBtDXrK.s:147    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000048 .L0 
GAS LISTING /tmp/ccBtDXrK.s 			page 34


     /tmp/ccBtDXrK.s:149    .text._ZN4ListI3TCBE6removeEPS0_:000000000000004c .L0 
     /tmp/ccBtDXrK.s:152    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000050 .L0 
     /tmp/ccBtDXrK.s:155    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000058 .L0 
     /tmp/ccBtDXrK.s:156    .text._ZN4ListI3TCBE6removeEPS0_:000000000000005c .L0 
     /tmp/ccBtDXrK.s:157    .text._ZN4ListI3TCBE6removeEPS0_:000000000000005c .L0 
     /tmp/ccBtDXrK.s:159    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000060 .L0 
     /tmp/ccBtDXrK.s:160    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000060 .L0 
     /tmp/ccBtDXrK.s:162    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000064 .L0 
     /tmp/ccBtDXrK.s:166    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000068 .L0 
     /tmp/ccBtDXrK.s:168    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000068 .L0 
     /tmp/ccBtDXrK.s:172    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000070 .L0 
     /tmp/ccBtDXrK.s:174    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000074 .L0 
     /tmp/ccBtDXrK.s:178    .text._ZN4ListI3TCBE6removeEPS0_:000000000000007c .L0 
     /tmp/ccBtDXrK.s:181    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000084 .L0 
     /tmp/ccBtDXrK.s:182    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000084 .L0 
     /tmp/ccBtDXrK.s:183    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000084 .L0 
     /tmp/ccBtDXrK.s:185    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000088 .L0 
     /tmp/ccBtDXrK.s:192    .text:000000000000005c _ZN5RISCV16handle_interruptEv
     /tmp/ccBtDXrK.s:195    .text:000000000000005c .L0 
     /tmp/ccBtDXrK.s:196    .text:000000000000005c .L0 
     /tmp/ccBtDXrK.s:197    .text:0000000000000060 .L0 
     /tmp/ccBtDXrK.s:204    .text:0000000000000078 .L0 
     /tmp/ccBtDXrK.s:205    .text:0000000000000078 .L0 
     /tmp/ccBtDXrK.s:206    .text:0000000000000078 .L0 
     /tmp/ccBtDXrK.s:207    .text:0000000000000078 .L0 
     /tmp/ccBtDXrK.s:208    .text:0000000000000078 .L0 
     /tmp/ccBtDXrK.s:209    .text:0000000000000078 .L0 
     /tmp/ccBtDXrK.s:211    .text:000000000000007c .L0 
     /tmp/ccBtDXrK.s:213    .text:000000000000007c .L0 
     /tmp/ccBtDXrK.s:214    .text:000000000000007c .L0 
       src/riscv.cpp:33     .text:000000000000007c .L0 
     /tmp/ccBtDXrK.s:221    .text:0000000000000080 .L0 
       src/riscv.cpp:34     .text:0000000000000080 .L0 
     /tmp/ccBtDXrK.s:227    .text:0000000000000084 .L0 
       src/riscv.cpp:35     .text:0000000000000084 .L0 
     /tmp/ccBtDXrK.s:233    .text:0000000000000088 .L0 
       src/riscv.cpp:36     .text:0000000000000088 .L0 
     /tmp/ccBtDXrK.s:239    .text:000000000000008c .L0 
       src/riscv.cpp:37     .text:000000000000008c .L0 
     /tmp/ccBtDXrK.s:248    .text:0000000000000090 .L0 
     /tmp/ccBtDXrK.s:249    .text:0000000000000090 .L0 
     /tmp/ccBtDXrK.s:250    .text:0000000000000090 .L0 
  src/../h/riscv.hpp:71     .text:0000000000000090 .L0 
     /tmp/ccBtDXrK.s:258    .text:0000000000000098 .L0 
     /tmp/ccBtDXrK.s:259    .text:0000000000000098 .L0 
     /tmp/ccBtDXrK.s:265    .text:000000000000009c .L0 
     /tmp/ccBtDXrK.s:273    .text:00000000000000ac .L0 
     /tmp/ccBtDXrK.s:283    .text:00000000000000bc .L0 
     /tmp/ccBtDXrK.s:284    .text:00000000000000bc .L0 
     /tmp/ccBtDXrK.s:287    .text:00000000000000c0 .L0 
     /tmp/ccBtDXrK.s:293    .text:00000000000000c8 .L0 
     /tmp/ccBtDXrK.s:294    .text:00000000000000c8 .L0 
     /tmp/ccBtDXrK.s:295    .text:00000000000000c8 .L0 
  src/../h/riscv.hpp:81     .text:00000000000000c8 .L0 
     /tmp/ccBtDXrK.s:303    .text:00000000000000d0 .L0 
     /tmp/ccBtDXrK.s:304    .text:00000000000000d0 .L0 
     /tmp/ccBtDXrK.s:308    .text:00000000000000d4 .L0 
GAS LISTING /tmp/ccBtDXrK.s 			page 35


     /tmp/ccBtDXrK.s:313    .text:00000000000000d8 .L0 
     /tmp/ccBtDXrK.s:314    .text:00000000000000d8 .L0 
     /tmp/ccBtDXrK.s:315    .text:00000000000000d8 .L0 
  src/../h/riscv.hpp:121    .text:00000000000000d8 .L0 
     /tmp/ccBtDXrK.s:323    .text:00000000000000e0 .L0 
     /tmp/ccBtDXrK.s:324    .text:00000000000000e0 .L0 
     /tmp/ccBtDXrK.s:329    .text:00000000000000e4 .L0 
     /tmp/ccBtDXrK.s:419    .text:0000000000000108 .L0 
     /tmp/ccBtDXrK.s:420    .text:0000000000000108 .L0 
     /tmp/ccBtDXrK.s:421    .text:0000000000000108 .L0 
     /tmp/ccBtDXrK.s:435    .text:0000000000000110 .L0 
     /tmp/ccBtDXrK.s:436    .text:0000000000000110 .L0 
     /tmp/ccBtDXrK.s:437    .text:0000000000000110 .L0 
     /tmp/ccBtDXrK.s:442    .text:000000000000011c .L0 
     /tmp/ccBtDXrK.s:445    .text:0000000000000120 .L0 
     /tmp/ccBtDXrK.s:446    .text:0000000000000120 .L0 
     /tmp/ccBtDXrK.s:448    .text:0000000000000124 .L0 
     /tmp/ccBtDXrK.s:453    .text:000000000000012c .L0 
     /tmp/ccBtDXrK.s:454    .text:000000000000012c .L0 
     /tmp/ccBtDXrK.s:455    .text:000000000000012c .L0 
     /tmp/ccBtDXrK.s:458    .text:0000000000000130 .L0 
     /tmp/ccBtDXrK.s:459    .text:0000000000000130 .L0 
     /tmp/ccBtDXrK.s:461    .text:0000000000000134 .L0 
     /tmp/ccBtDXrK.s:463    .text:0000000000000138 .L0 
     /tmp/ccBtDXrK.s:464    .text:0000000000000138 .L0 
     /tmp/ccBtDXrK.s:466    .text:000000000000013c .L0 
     /tmp/ccBtDXrK.s:467    .text:000000000000013c .L0 
     /tmp/ccBtDXrK.s:471    .text:0000000000000148 .L0 
     /tmp/ccBtDXrK.s:472    .text:0000000000000148 .L0 
     /tmp/ccBtDXrK.s:475    .text:000000000000014c .L0 
     /tmp/ccBtDXrK.s:476    .text:000000000000014c .L0 
     /tmp/ccBtDXrK.s:479    .text:0000000000000150 .L0 
     /tmp/ccBtDXrK.s:480    .text:0000000000000150 .L0 
     /tmp/ccBtDXrK.s:483    .text:0000000000000154 .L0 
     /tmp/ccBtDXrK.s:487    .text:0000000000000158 .L0 
     /tmp/ccBtDXrK.s:488    .text:0000000000000158 .L0 
     /tmp/ccBtDXrK.s:496    .text:0000000000000164 .L0 
     /tmp/ccBtDXrK.s:497    .text:0000000000000164 .L0 
     /tmp/ccBtDXrK.s:507    .text:0000000000000174 .L0 
     /tmp/ccBtDXrK.s:508    .text:0000000000000174 .L0 
     /tmp/ccBtDXrK.s:513    .text:0000000000000178 .L0 
     /tmp/ccBtDXrK.s:515    .text:000000000000017c .L0 
     /tmp/ccBtDXrK.s:518    .text:0000000000000180 .L0 
     /tmp/ccBtDXrK.s:519    .text:0000000000000180 .L0 
     /tmp/ccBtDXrK.s:522    .text:0000000000000184 .L0 
     /tmp/ccBtDXrK.s:523    .text:0000000000000184 .L0 
     /tmp/ccBtDXrK.s:525    .text:0000000000000188 .L0 
     /tmp/ccBtDXrK.s:527    .text:000000000000018c .L0 
     /tmp/ccBtDXrK.s:528    .text:000000000000018c .L0 
     /tmp/ccBtDXrK.s:531    .text:0000000000000190 .L0 
     /tmp/ccBtDXrK.s:532    .text:0000000000000190 .L0 
     /tmp/ccBtDXrK.s:534    .text:0000000000000194 .L0 
     /tmp/ccBtDXrK.s:536    .text:0000000000000198 .L0 
     /tmp/ccBtDXrK.s:538    .text:000000000000019c .L0 
     /tmp/ccBtDXrK.s:539    .text:000000000000019c .L0 
     /tmp/ccBtDXrK.s:542    .text:00000000000001a0 .L0 
     /tmp/ccBtDXrK.s:543    .text:00000000000001a0 .L0 
GAS LISTING /tmp/ccBtDXrK.s 			page 36


     /tmp/ccBtDXrK.s:548    .text:00000000000001b0 .L0 
     /tmp/ccBtDXrK.s:549    .text:00000000000001b0 .L0 
     /tmp/ccBtDXrK.s:551    .text:00000000000001b4 .L0 
     /tmp/ccBtDXrK.s:554    .text:00000000000001bc .L0 
     /tmp/ccBtDXrK.s:555    .text:00000000000001bc .L0 
     /tmp/ccBtDXrK.s:557    .text:00000000000001c0 .L0 
     /tmp/ccBtDXrK.s:560    .text:00000000000001c8 .L0 
     /tmp/ccBtDXrK.s:561    .text:00000000000001c8 .L0 
     /tmp/ccBtDXrK.s:563    .text:00000000000001cc .L0 
     /tmp/ccBtDXrK.s:564    .text:00000000000001cc .L0 
     /tmp/ccBtDXrK.s:568    .text:00000000000001d8 .L0 
     /tmp/ccBtDXrK.s:575    .text:00000000000001dc .L0 
     /tmp/ccBtDXrK.s:576    .text:00000000000001dc .L0 
     /tmp/ccBtDXrK.s:580    .text:00000000000001e0 .L0 
     /tmp/ccBtDXrK.s:583    .text:00000000000001e4 .L0 
     /tmp/ccBtDXrK.s:584    .text:00000000000001e4 .L0 
     /tmp/ccBtDXrK.s:588    .text:00000000000001e8 .L0 
     /tmp/ccBtDXrK.s:589    .text:00000000000001e8 .L0 
     /tmp/ccBtDXrK.s:598    .text:00000000000001f0 .L0 
     /tmp/ccBtDXrK.s:599    .text:00000000000001f0 .L0 
     /tmp/ccBtDXrK.s:605    .text:0000000000000204 .L0 
     /tmp/ccBtDXrK.s:606    .text:0000000000000204 .L0 
     /tmp/ccBtDXrK.s:613    .text:0000000000000210 .L0 
     /tmp/ccBtDXrK.s:614    .text:0000000000000210 .L0 
     /tmp/ccBtDXrK.s:619    .text:0000000000000214 .L0 
     /tmp/ccBtDXrK.s:624    .text:0000000000000218 .L0 
     /tmp/ccBtDXrK.s:625    .text:0000000000000218 .L0 
     /tmp/ccBtDXrK.s:626    .text:0000000000000218 .L0 
  src/../h/riscv.hpp:81     .text:0000000000000218 .L0 
     /tmp/ccBtDXrK.s:634    .text:0000000000000220 .L0 
     /tmp/ccBtDXrK.s:635    .text:0000000000000220 .L0 
     /tmp/ccBtDXrK.s:642    .text:0000000000000224 .L0 
     /tmp/ccBtDXrK.s:643    .text:0000000000000224 .L0 
     /tmp/ccBtDXrK.s:644    .text:0000000000000224 .L0 
  src/../h/riscv.hpp:121    .text:0000000000000224 .L0 
     /tmp/ccBtDXrK.s:652    .text:000000000000022c .L0 
     /tmp/ccBtDXrK.s:653    .text:000000000000022c .L0 
     /tmp/ccBtDXrK.s:658    .text:0000000000000230 .L0 
     /tmp/ccBtDXrK.s:659    .text:0000000000000230 .L0 
     /tmp/ccBtDXrK.s:662    .text:000000000000023c .L0 
     /tmp/ccBtDXrK.s:663    .text:000000000000023c .L0 
     /tmp/ccBtDXrK.s:668    .text:0000000000000244 .L0 
     /tmp/ccBtDXrK.s:669    .text:0000000000000244 .L0 
  src/../h/riscv.hpp:86     .text:0000000000000244 .L0 
     /tmp/ccBtDXrK.s:681    .text:0000000000000248 .L0 
     /tmp/ccBtDXrK.s:682    .text:0000000000000248 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000248 .L0 
     /tmp/ccBtDXrK.s:689    .text:000000000000024c .L0 
     /tmp/ccBtDXrK.s:702    .text:0000000000000250 .L0 
     /tmp/ccBtDXrK.s:703    .text:0000000000000250 .L0 
     /tmp/ccBtDXrK.s:704    .text:0000000000000250 .L0 
  src/../h/riscv.hpp:81     .text:0000000000000250 .L0 
     /tmp/ccBtDXrK.s:712    .text:0000000000000258 .L0 
     /tmp/ccBtDXrK.s:713    .text:0000000000000258 .L0 
     /tmp/ccBtDXrK.s:720    .text:000000000000025c .L0 
     /tmp/ccBtDXrK.s:721    .text:000000000000025c .L0 
     /tmp/ccBtDXrK.s:722    .text:000000000000025c .L0 
GAS LISTING /tmp/ccBtDXrK.s 			page 37


  src/../h/riscv.hpp:121    .text:000000000000025c .L0 
     /tmp/ccBtDXrK.s:730    .text:0000000000000264 .L0 
     /tmp/ccBtDXrK.s:731    .text:0000000000000264 .L0 
     /tmp/ccBtDXrK.s:736    .text:0000000000000268 .L0 
     /tmp/ccBtDXrK.s:737    .text:0000000000000268 .L0 
     /tmp/ccBtDXrK.s:743    .text:0000000000000274 .L0 
     /tmp/ccBtDXrK.s:751    .text:000000000000027c .L0 
     /tmp/ccBtDXrK.s:752    .text:000000000000027c .L0 
  src/../h/riscv.hpp:86     .text:000000000000027c .L0 
     /tmp/ccBtDXrK.s:764    .text:0000000000000280 .L0 
     /tmp/ccBtDXrK.s:765    .text:0000000000000280 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000280 .L0 
     /tmp/ccBtDXrK.s:777    .text:0000000000000284 .L0 
     /tmp/ccBtDXrK.s:778    .text:0000000000000284 .L0 
     /tmp/ccBtDXrK.s:779    .text:0000000000000284 .L0 
     /tmp/ccBtDXrK.s:786    .text:000000000000028c .L0 
     /tmp/ccBtDXrK.s:794    .text:0000000000000290 .L0 
     /tmp/ccBtDXrK.s:795    .text:0000000000000290 .L0 
     /tmp/ccBtDXrK.s:796    .text:0000000000000290 .L0 
     /tmp/ccBtDXrK.s:800    .text:00000000000002a0 .L0 
     /tmp/ccBtDXrK.s:803    .text:00000000000002a8 .L0 
     /tmp/ccBtDXrK.s:808    .text:00000000000002bc .L0 
     /tmp/ccBtDXrK.s:811    .text:00000000000002c0 .L0 
     /tmp/ccBtDXrK.s:812    .text:00000000000002c0 .L0 
     /tmp/ccBtDXrK.s:816    .text:00000000000002cc .L0 
     /tmp/ccBtDXrK.s:817    .text:00000000000002cc .L0 
     /tmp/ccBtDXrK.s:822    .text:00000000000002d8 .L0 
     /tmp/ccBtDXrK.s:825    .text:00000000000002dc .L0 
     /tmp/ccBtDXrK.s:826    .text:00000000000002dc .L0 
     /tmp/ccBtDXrK.s:838    .text:00000000000002ec .L0 
     /tmp/ccBtDXrK.s:839    .text:00000000000002ec .L0 
     /tmp/ccBtDXrK.s:840    .text:00000000000002ec .L0 
     /tmp/ccBtDXrK.s:844    .text:00000000000002f4 .L0 
     /tmp/ccBtDXrK.s:847    .text:00000000000002f4 .L0 
     /tmp/ccBtDXrK.s:848    .text:00000000000002f4 .L0 
  src/../h/riscv.hpp:86     .text:00000000000002f4 .L0 
     /tmp/ccBtDXrK.s:860    .text:00000000000002f8 .L0 
     /tmp/ccBtDXrK.s:861    .text:00000000000002f8 .L0 
  src/../h/riscv.hpp:126    .text:00000000000002f8 .L0 
     /tmp/ccBtDXrK.s:876    .text:00000000000002fc .L0 
     /tmp/ccBtDXrK.s:877    .text:0000000000000300 .L0 
     /tmp/ccBtDXrK.s:878    .text:0000000000000300 .L0 
     /tmp/ccBtDXrK.s:880    .text:0000000000000304 .L0 
     /tmp/ccBtDXrK.s:881    .text:0000000000000304 .L0 
     /tmp/ccBtDXrK.s:883    .text:0000000000000308 .L0 
     /tmp/ccBtDXrK.s:885    .text:000000000000030c .L0 
     /tmp/ccBtDXrK.s:887    .text:0000000000000310 .L0 
     /tmp/ccBtDXrK.s:889    .text:0000000000000314 .L0 
     /tmp/ccBtDXrK.s:891    .text:0000000000000318 .L0 
     /tmp/ccBtDXrK.s:895    .text:000000000000031c .L0 
     /tmp/ccBtDXrK.s:901    .text:000000000000031c .L0 
     /tmp/ccBtDXrK.s:902    .text:000000000000031c .L0 
     /tmp/ccBtDXrK.s:903    .text:000000000000031c .L0 
     /tmp/ccBtDXrK.s:906    .text:0000000000000324 .L0 
     /tmp/ccBtDXrK.s:910    .text:0000000000000328 .L0 
     /tmp/ccBtDXrK.s:911    .text:0000000000000328 .L0 
     /tmp/ccBtDXrK.s:912    .text:0000000000000328 .L0 
GAS LISTING /tmp/ccBtDXrK.s 			page 38


     /tmp/ccBtDXrK.s:915    .text:0000000000000330 .L0 
     /tmp/ccBtDXrK.s:919    .text:0000000000000334 .L0 
     /tmp/ccBtDXrK.s:920    .text:0000000000000334 .L0 
     /tmp/ccBtDXrK.s:921    .text:0000000000000334 .L0 
     /tmp/ccBtDXrK.s:924    .text:000000000000033c .L0 
     /tmp/ccBtDXrK.s:928    .text:0000000000000340 .L0 
     /tmp/ccBtDXrK.s:929    .text:0000000000000340 .L0 
     /tmp/ccBtDXrK.s:930    .text:0000000000000340 .L0 
     /tmp/ccBtDXrK.s:933    .text:000000000000034c .L0 
     /tmp/ccBtDXrK.s:934    .text:000000000000034c .L0 
     /tmp/ccBtDXrK.s:937    .text:0000000000000354 .L0 
     /tmp/ccBtDXrK.s:941    .text:0000000000000358 .L0 
     /tmp/ccBtDXrK.s:942    .text:0000000000000358 .L0 
     /tmp/ccBtDXrK.s:943    .text:0000000000000358 .L0 
     /tmp/ccBtDXrK.s:948    .text:0000000000000364 .L0 
     /tmp/ccBtDXrK.s:952    .text:0000000000000368 .L0 
     /tmp/ccBtDXrK.s:953    .text:0000000000000368 .L0 
     /tmp/ccBtDXrK.s:954    .text:0000000000000368 .L0 
     /tmp/ccBtDXrK.s:957    .text:0000000000000370 .L0 
     /tmp/ccBtDXrK.s:961    .text:0000000000000374 .L0 
     /tmp/ccBtDXrK.s:962    .text:0000000000000374 .L0 
     /tmp/ccBtDXrK.s:963    .text:0000000000000374 .L0 
     /tmp/ccBtDXrK.s:966    .text:000000000000037c .L0 
     /tmp/ccBtDXrK.s:970    .text:0000000000000380 .L0 
     /tmp/ccBtDXrK.s:971    .text:0000000000000380 .L0 
     /tmp/ccBtDXrK.s:972    .text:0000000000000380 .L0 
     /tmp/ccBtDXrK.s:975    .text:0000000000000388 .L0 
     /tmp/ccBtDXrK.s:979    .text:000000000000038c .L0 
     /tmp/ccBtDXrK.s:980    .text:000000000000038c .L0 
     /tmp/ccBtDXrK.s:981    .text:000000000000038c .L0 
     /tmp/ccBtDXrK.s:984    .text:0000000000000394 .L0 
     /tmp/ccBtDXrK.s:988    .text:0000000000000398 .L0 
     /tmp/ccBtDXrK.s:989    .text:0000000000000398 .L0 
     /tmp/ccBtDXrK.s:990    .text:0000000000000398 .L0 
     /tmp/ccBtDXrK.s:993    .text:00000000000003a0 .L0 
     /tmp/ccBtDXrK.s:997    .text:00000000000003a4 .L0 
     /tmp/ccBtDXrK.s:998    .text:00000000000003a4 .L0 
     /tmp/ccBtDXrK.s:999    .text:00000000000003a4 .L0 
     /tmp/ccBtDXrK.s:1007   .text:00000000000003bc .L0 
     /tmp/ccBtDXrK.s:1011   .text:00000000000003c0 .L0 
     /tmp/ccBtDXrK.s:1012   .text:00000000000003c0 .L0 
     /tmp/ccBtDXrK.s:1013   .text:00000000000003c0 .L0 
     /tmp/ccBtDXrK.s:1016   .text:00000000000003c8 .L0 
     /tmp/ccBtDXrK.s:1020   .text:00000000000003cc .L0 
     /tmp/ccBtDXrK.s:1021   .text:00000000000003cc .L0 
     /tmp/ccBtDXrK.s:1022   .text:00000000000003cc .L0 
     /tmp/ccBtDXrK.s:1027   .text:00000000000003d8 .L0 
     /tmp/ccBtDXrK.s:1032   .text:00000000000003dc .L0 
     /tmp/ccBtDXrK.s:1033   .text:00000000000003dc .L0 
     /tmp/ccBtDXrK.s:1042   .text:00000000000003ec .L0 
     /tmp/ccBtDXrK.s:1043   .text:00000000000003f0 .L0 
     /tmp/ccBtDXrK.s:1053   .text:00000000000003f0 .L0 
     /tmp/ccBtDXrK.s:188    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000088 .L0 
     /tmp/ccBtDXrK.s:22     .text:000000000000000c .L0 
     /tmp/ccBtDXrK.s:26     .text:000000000000001c .L0 
     /tmp/ccBtDXrK.s:341    .rodata:0000000000000000 .L39
     /tmp/ccBtDXrK.s:332    .text:00000000000000f0 .L0 
GAS LISTING /tmp/ccBtDXrK.s 			page 39


     /tmp/ccBtDXrK.s:437    .text:0000000000000110 .L0 
     /tmp/ccBtDXrK.s:488    .text:0000000000000158 .L0 
     /tmp/ccBtDXrK.s:497    .text:0000000000000164 .L0 
     /tmp/ccBtDXrK.s:599    .text:00000000000001f0 .L0 
     /tmp/ccBtDXrK.s:606    .text:0000000000000204 .L0 
     /tmp/ccBtDXrK.s:659    .text:0000000000000230 .L0 
     /tmp/ccBtDXrK.s:796    .text:0000000000000290 .L0 
     /tmp/ccBtDXrK.s:803    .text:00000000000002a8 .L0 
     /tmp/ccBtDXrK.s:812    .text:00000000000002c0 .L0 
     /tmp/ccBtDXrK.s:930    .text:0000000000000340 .L0 
     /tmp/ccBtDXrK.s:1001   .text:00000000000003a8 .L0 
     /tmp/ccBtDXrK.s:42     .text:0000000000000030 .L2
     /tmp/ccBtDXrK.s:411    .text:0000000000000108 .L54
     /tmp/ccBtDXrK.s:691    .text:0000000000000250 .L55
     /tmp/ccBtDXrK.s:1029   .text:00000000000003dc .L36
     /tmp/ccBtDXrK.s:843    .text:00000000000002f4 .L37
     /tmp/ccBtDXrK.s:491    .text:0000000000000164 .L22
     /tmp/ccBtDXrK.s:485    .text:0000000000000158 .L23
     /tmp/ccBtDXrK.s:452    .text:000000000000012c .L24
     /tmp/ccBtDXrK.s:578    .text:00000000000001e0 .L30
     /tmp/ccBtDXrK.s:570    .text:00000000000001dc .L27
     /tmp/ccBtDXrK.s:502    .text:0000000000000174 .L28
     /tmp/ccBtDXrK.s:510    .text:0000000000000178 .L26
     /tmp/ccBtDXrK.s:593    .text:00000000000001f0 .L25
     /tmp/ccBtDXrK.s:868    .text:00000000000002fc .L20
     /tmp/ccBtDXrK.s:788    .text:0000000000000290 .L35
     /tmp/ccBtDXrK.s:823    .text:00000000000002dc .L34
     /tmp/ccBtDXrK.s:746    .text:000000000000027c .L33
     /tmp/ccBtDXrK.s:180    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000084 .L14
     /tmp/ccBtDXrK.s:125    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000024 .L17
     /tmp/ccBtDXrK.s:110    .text._ZN4ListI3TCBE6removeEPS0_:000000000000000c .L12
     /tmp/ccBtDXrK.s:170    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000070 .L9
     /tmp/ccBtDXrK.s:165    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000068 .L18
     /tmp/ccBtDXrK.s:176    .text._ZN4ListI3TCBE6removeEPS0_:000000000000007c .L19
     /tmp/ccBtDXrK.s:145    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000048 .L10
     /tmp/ccBtDXrK.s:150    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000050 .L11
     /tmp/ccBtDXrK.s:832    .text:00000000000002ec .L52
     /tmp/ccBtDXrK.s:894    .text:000000000000031c .L51
     /tmp/ccBtDXrK.s:908    .text:0000000000000328 .L50
     /tmp/ccBtDXrK.s:917    .text:0000000000000334 .L49
     /tmp/ccBtDXrK.s:926    .text:0000000000000340 .L48
     /tmp/ccBtDXrK.s:939    .text:0000000000000358 .L47
     /tmp/ccBtDXrK.s:950    .text:0000000000000368 .L46
     /tmp/ccBtDXrK.s:959    .text:0000000000000374 .L45
     /tmp/ccBtDXrK.s:968    .text:0000000000000380 .L44
     /tmp/ccBtDXrK.s:977    .text:000000000000038c .L43
     /tmp/ccBtDXrK.s:986    .text:0000000000000398 .L42
     /tmp/ccBtDXrK.s:995    .text:00000000000003a4 .L41
     /tmp/ccBtDXrK.s:1009   .text:00000000000003c0 .L40
     /tmp/ccBtDXrK.s:1018   .text:00000000000003cc .L38
     /tmp/ccBtDXrK.s:3598   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBtDXrK.s:6224   .debug_str:0000000000000c91 .LASF260
     /tmp/ccBtDXrK.s:6296   .debug_str:0000000000000f41 .LASF261
     /tmp/ccBtDXrK.s:5936   .debug_str:0000000000000458 .LASF262
     /tmp/ccBtDXrK.s:5752   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBtDXrK.s:5786   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBtDXrK.s:5972   .debug_str:0000000000000569 .LASF0
GAS LISTING /tmp/ccBtDXrK.s 			page 40


     /tmp/ccBtDXrK.s:6012   .debug_str:000000000000065e .LASF1
     /tmp/ccBtDXrK.s:6144   .debug_str:0000000000000a1a .LASF2
     /tmp/ccBtDXrK.s:6156   .debug_str:0000000000000aa4 .LASF4
     /tmp/ccBtDXrK.s:5988   .debug_str:00000000000005db .LASF3
     /tmp/ccBtDXrK.s:5804   .debug_str:0000000000000064 .LASF5
     /tmp/ccBtDXrK.s:6108   .debug_str:000000000000093f .LASF6
     /tmp/ccBtDXrK.s:6096   .debug_str:00000000000008d0 .LASF7
     /tmp/ccBtDXrK.s:5998   .debug_str:0000000000000618 .LASF8
     /tmp/ccBtDXrK.s:5932   .debug_str:000000000000043c .LASF9
     /tmp/ccBtDXrK.s:5944   .debug_str:00000000000004a8 .LASF10
     /tmp/ccBtDXrK.s:5852   .debug_str:00000000000001c8 .LASF11
     /tmp/ccBtDXrK.s:5918   .debug_str:00000000000003e8 .LASF12
     /tmp/ccBtDXrK.s:5872   .debug_str:000000000000026e .LASF13
     /tmp/ccBtDXrK.s:5850   .debug_str:00000000000001b8 .LASF14
     /tmp/ccBtDXrK.s:6198   .debug_str:0000000000000bdc .LASF15
     /tmp/ccBtDXrK.s:5910   .debug_str:0000000000000387 .LASF16
     /tmp/ccBtDXrK.s:6180   .debug_str:0000000000000b4b .LASF17
     /tmp/ccBtDXrK.s:6294   .debug_str:0000000000000f3b .LASF83
     /tmp/ccBtDXrK.s:5984   .debug_str:00000000000005bf .LASF22
     /tmp/ccBtDXrK.s:6032   .debug_str:0000000000000701 .LASF18
     /tmp/ccBtDXrK.s:6054   .debug_str:00000000000007a6 .LASF19
     /tmp/ccBtDXrK.s:5840   .debug_str:0000000000000178 .LASF20
     /tmp/ccBtDXrK.s:5828   .debug_str:000000000000011c .LASF21
     /tmp/ccBtDXrK.s:5798   .debug_str:0000000000000041 .LASF23
     /tmp/ccBtDXrK.s:6122   .debug_str:0000000000000999 .LASF24
     /tmp/ccBtDXrK.s:5886   .debug_str:00000000000002db .LASF25
     /tmp/ccBtDXrK.s:5888   .debug_str:00000000000002e8 .LASF26
     /tmp/ccBtDXrK.s:6136   .debug_str:00000000000009d5 .LASF28
     /tmp/ccBtDXrK.s:5896   .debug_str:000000000000030e .LASF27
     /tmp/ccBtDXrK.s:6146   .debug_str:0000000000000a28 .LASF29
     /tmp/ccBtDXrK.s:5836   .debug_str:0000000000000167 .LASF30
     /tmp/ccBtDXrK.s:6252   .debug_str:0000000000000e16 .LASF31
     /tmp/ccBtDXrK.s:5942   .debug_str:000000000000049f .LASF32
     /tmp/ccBtDXrK.s:5854   .debug_str:00000000000001d7 .LASF33
     /tmp/ccBtDXrK.s:6256   .debug_str:0000000000000e43 .LASF92
     /tmp/ccBtDXrK.s:6208   .debug_str:0000000000000c17 .LASF94
     /tmp/ccBtDXrK.s:6134   .debug_str:00000000000009cb .LASF34
     /tmp/ccBtDXrK.s:6328   .debug_str:000000000000104e .LASF36
     /tmp/ccBtDXrK.s:6204   .debug_str:0000000000000c05 .LASF38
     /tmp/ccBtDXrK.s:6106   .debug_str:0000000000000929 .LASF40
     /tmp/ccBtDXrK.s:6278   .debug_str:0000000000000ed4 .LASF35
     /tmp/ccBtDXrK.s:6280   .debug_str:0000000000000edc .LASF37
     /tmp/ccBtDXrK.s:6168   .debug_str:0000000000000afd .LASF39
     /tmp/ccBtDXrK.s:6326   .debug_str:000000000000103a .LASF41
     /tmp/ccBtDXrK.s:5846   .debug_str:000000000000019a .LASF42
     /tmp/ccBtDXrK.s:6314   .debug_str:0000000000000fd8 .LASF43
     /tmp/ccBtDXrK.s:6024   .debug_str:00000000000006bb .LASF44
     /tmp/ccBtDXrK.s:6214   .debug_str:0000000000000c56 .LASF45
     /tmp/ccBtDXrK.s:6120   .debug_str:0000000000000990 .LASF46
     /tmp/ccBtDXrK.s:6034   .debug_str:000000000000070a .LASF47
     /tmp/ccBtDXrK.s:6284   .debug_str:0000000000000efb .LASF48
     /tmp/ccBtDXrK.s:6102   .debug_str:00000000000008fb .LASF49
     /tmp/ccBtDXrK.s:6078   .debug_str:000000000000086d .LASF50
     /tmp/ccBtDXrK.s:6048   .debug_str:0000000000000774 .LASF51
     /tmp/ccBtDXrK.s:5914   .debug_str:00000000000003b9 .LASF52
     /tmp/ccBtDXrK.s:6192   .debug_str:0000000000000bb0 .LASF53
     /tmp/ccBtDXrK.s:6242   .debug_str:0000000000000dce .LASF54
GAS LISTING /tmp/ccBtDXrK.s 			page 41


     /tmp/ccBtDXrK.s:5864   .debug_str:000000000000022e .LASF55
     /tmp/ccBtDXrK.s:6292   .debug_str:0000000000000f30 .LASF56
     /tmp/ccBtDXrK.s:6260   .debug_str:0000000000000e66 .LASF57
     /tmp/ccBtDXrK.s:5996   .debug_str:000000000000060e .LASF58
     /tmp/ccBtDXrK.s:6258   .debug_str:0000000000000e50 .LASF59
     /tmp/ccBtDXrK.s:6238   .debug_str:0000000000000db2 .LASF60
     /tmp/ccBtDXrK.s:6240   .debug_str:0000000000000dba .LASF61
     /tmp/ccBtDXrK.s:5882   .debug_str:00000000000002bf .LASF62
     /tmp/ccBtDXrK.s:6312   .debug_str:0000000000000fbf .LASF63
     /tmp/ccBtDXrK.s:6126   .debug_str:00000000000009aa .LASF64
     /tmp/ccBtDXrK.s:6030   .debug_str:00000000000006e9 .LASF65
     /tmp/ccBtDXrK.s:5958   .debug_str:0000000000000513 .LASF66
     /tmp/ccBtDXrK.s:5902   .debug_str:0000000000000333 .LASF67
     /tmp/ccBtDXrK.s:6234   .debug_str:0000000000000da0 .LASF263
     /tmp/ccBtDXrK.s:6324   .debug_str:0000000000001030 .LASF68
     /tmp/ccBtDXrK.s:5926   .debug_str:0000000000000412 .LASF69
     /tmp/ccBtDXrK.s:6178   .debug_str:0000000000000b3d .LASF70
     /tmp/ccBtDXrK.s:6116   .debug_str:000000000000097c .LASF71
     /tmp/ccBtDXrK.s:5884   .debug_str:00000000000002cb .LASF72
     /tmp/ccBtDXrK.s:5856   .debug_str:00000000000001ec .LASF73
     /tmp/ccBtDXrK.s:5802   .debug_str:000000000000005a .LASF74
     /tmp/ccBtDXrK.s:6072   .debug_str:0000000000000838 .LASF75
     /tmp/ccBtDXrK.s:6154   .debug_str:0000000000000a99 .LASF76
     /tmp/ccBtDXrK.s:6230   .debug_str:0000000000000d7b .LASF77
     /tmp/ccBtDXrK.s:6142   .debug_str:0000000000000a0e .LASF78
     /tmp/ccBtDXrK.s:6302   .debug_str:0000000000000f70 .LASF79
     /tmp/ccBtDXrK.s:5992   .debug_str:00000000000005f9 .LASF80
     /tmp/ccBtDXrK.s:6064   .debug_str:000000000000080f .LASF81
     /tmp/ccBtDXrK.s:6274   .debug_str:0000000000000ec1 .LASF82
     /tmp/ccBtDXrK.s:5900   .debug_str:000000000000032d .LASF84
     /tmp/ccBtDXrK.s:6000   .debug_str:000000000000062b .LASF85
     /tmp/ccBtDXrK.s:5858   .debug_str:00000000000001f5 .LASF86
     /tmp/ccBtDXrK.s:6118   .debug_str:0000000000000988 .LASF87
     /tmp/ccBtDXrK.s:5834   .debug_str:000000000000015e .LASF88
     /tmp/ccBtDXrK.s:6042   .debug_str:0000000000000752 .LASF89
     /tmp/ccBtDXrK.s:6206   .debug_str:0000000000000c0f .LASF161
     /tmp/ccBtDXrK.s:6286   .debug_str:0000000000000f04 .LASF90
     /tmp/ccBtDXrK.s:6226   .debug_str:0000000000000d55 .LASF91
     /tmp/ccBtDXrK.s:6222   .debug_str:0000000000000c89 .LASF145
     /tmp/ccBtDXrK.s:5842   .debug_str:0000000000000180 .LASF93
     /tmp/ccBtDXrK.s:5916   .debug_str:00000000000003c0 .LASF95
     /tmp/ccBtDXrK.s:6016   .debug_str:0000000000000683 .LASF96
     /tmp/ccBtDXrK.s:5822   .debug_str:00000000000000db .LASF97
     /tmp/ccBtDXrK.s:5892   .debug_str:0000000000000300 .LASF98
     /tmp/ccBtDXrK.s:5862   .debug_str:000000000000021b .LASF99
     /tmp/ccBtDXrK.s:6020   .debug_str:00000000000006a9 .LASF102
     /tmp/ccBtDXrK.s:6264   .debug_str:0000000000000e88 .LASF104
     /tmp/ccBtDXrK.s:5808   .debug_str:0000000000000070 .LASF100
     /tmp/ccBtDXrK.s:6026   .debug_str:00000000000006c4 .LASF101
     /tmp/ccBtDXrK.s:5950   .debug_str:00000000000004d3 .LASF103
     /tmp/ccBtDXrK.s:6202   .debug_str:0000000000000bef .LASF105
     /tmp/ccBtDXrK.s:6046   .debug_str:000000000000076d .LASF106
     /tmp/ccBtDXrK.s:5874   .debug_str:000000000000027e .LASF107
     /tmp/ccBtDXrK.s:6158   .debug_str:0000000000000aab .LASF108
     /tmp/ccBtDXrK.s:5800   .debug_str:000000000000004e .LASF109
     /tmp/ccBtDXrK.s:6316   .debug_str:0000000000000fed .LASF110
     /tmp/ccBtDXrK.s:5938   .debug_str:0000000000000476 .LASF111
GAS LISTING /tmp/ccBtDXrK.s 			page 42


     /tmp/ccBtDXrK.s:5796   .debug_str:0000000000000031 .LASF112
     /tmp/ccBtDXrK.s:6084   .debug_str:0000000000000891 .LASF113
     /tmp/ccBtDXrK.s:6170   .debug_str:0000000000000b05 .LASF114
     /tmp/ccBtDXrK.s:6140   .debug_str:00000000000009fd .LASF115
     /tmp/ccBtDXrK.s:5826   .debug_str:0000000000000111 .LASF116
     /tmp/ccBtDXrK.s:6148   .debug_str:0000000000000a46 .LASF117
     /tmp/ccBtDXrK.s:6002   .debug_str:0000000000000634 .LASF118
     /tmp/ccBtDXrK.s:5898   .debug_str:000000000000031f .LASF119
     /tmp/ccBtDXrK.s:6130   .debug_str:00000000000009ba .LASF120
     /tmp/ccBtDXrK.s:5890   .debug_str:00000000000002f8 .LASF121
     /tmp/ccBtDXrK.s:6086   .debug_str:000000000000089e .LASF122
     /tmp/ccBtDXrK.s:6174   .debug_str:0000000000000b1b .LASF123
     /tmp/ccBtDXrK.s:6246   .debug_str:0000000000000de5 .LASF124
     /tmp/ccBtDXrK.s:6062   .debug_str:0000000000000801 .LASF125
     /tmp/ccBtDXrK.s:6320   .debug_str:0000000000001002 .LASF184
     /tmp/ccBtDXrK.s:5880   .debug_str:00000000000002b1 .LASF156
     /tmp/ccBtDXrK.s:5832   .debug_str:0000000000000136 .LASF158
     /tmp/ccBtDXrK.s:6266   .debug_str:0000000000000ea1 .LASF198
     /tmp/ccBtDXrK.s:5812   .debug_str:0000000000000088 .LASF200
     /tmp/ccBtDXrK.s:6088   .debug_str:00000000000008a3 .LASF126
     /tmp/ccBtDXrK.s:6232   .debug_str:0000000000000d89 .LASF127
     /tmp/ccBtDXrK.s:6298   .debug_str:0000000000000f4f .LASF128
     /tmp/ccBtDXrK.s:5894   .debug_str:0000000000000309 .LASF129
     /tmp/ccBtDXrK.s:5974   .debug_str:0000000000000576 .LASF130
     /tmp/ccBtDXrK.s:6200   .debug_str:0000000000000be8 .LASF131
     /tmp/ccBtDXrK.s:6112   .debug_str:000000000000094e .LASF132
     /tmp/ccBtDXrK.s:6166   .debug_str:0000000000000af3 .LASF133
     /tmp/ccBtDXrK.s:5986   .debug_str:00000000000005c6 .LASF134
     /tmp/ccBtDXrK.s:6090   .debug_str:00000000000008af .LASF135
     /tmp/ccBtDXrK.s:5928   .debug_str:000000000000041b .LASF136
     /tmp/ccBtDXrK.s:6272   .debug_str:0000000000000eb9 .LASF137
     /tmp/ccBtDXrK.s:5870   .debug_str:000000000000025a .LASF138
     /tmp/ccBtDXrK.s:6080   .debug_str:0000000000000874 .LASF139
     /tmp/ccBtDXrK.s:6044   .debug_str:000000000000075a .LASF140
     /tmp/ccBtDXrK.s:5954   .debug_str:00000000000004f0 .LASF141
     /tmp/ccBtDXrK.s:5982   .debug_str:00000000000005ab .LASF142
     /tmp/ccBtDXrK.s:5934   .debug_str:000000000000044c .LASF143
     /tmp/ccBtDXrK.s:6194   .debug_str:0000000000000bc3 .LASF144
     /tmp/ccBtDXrK.s:6132   .debug_str:00000000000009c5 .LASF146
     /tmp/ccBtDXrK.s:6022   .debug_str:00000000000006b6 .LASF147
     /tmp/ccBtDXrK.s:6036   .debug_str:000000000000071f .LASF207
     /tmp/ccBtDXrK.s:5970   .debug_str:0000000000000563 .LASF148
     /tmp/ccBtDXrK.s:5994   .debug_str:00000000000005fe .LASF149
     /tmp/ccBtDXrK.s:6310   .debug_str:0000000000000fb7 .LASF150
     /tmp/ccBtDXrK.s:6160   .debug_str:0000000000000ab0 .LASF151
     /tmp/ccBtDXrK.s:5962   .debug_str:0000000000000531 .LASF152
     /tmp/ccBtDXrK.s:5806   .debug_str:000000000000006b .LASF153
     /tmp/ccBtDXrK.s:6110   .debug_str:0000000000000946 .LASF154
     /tmp/ccBtDXrK.s:5788   .debug_str:0000000000000000 .LASF155
     /tmp/ccBtDXrK.s:6318   .debug_str:0000000000000ffa .LASF157
     /tmp/ccBtDXrK.s:6074   .debug_str:0000000000000841 .LASF159
     /tmp/ccBtDXrK.s:6098   .debug_str:00000000000008e3 .LASF264
     /tmp/ccBtDXrK.s:6076   .debug_str:0000000000000855 .LASF265
     /tmp/ccBtDXrK.s:6092   .debug_str:00000000000008b9 .LASF160
     /tmp/ccBtDXrK.s:5844   .debug_str:000000000000018e .LASF162
     /tmp/ccBtDXrK.s:5790   .debug_str:000000000000000b .LASF163
     /tmp/ccBtDXrK.s:6010   .debug_str:0000000000000659 .LASF164
GAS LISTING /tmp/ccBtDXrK.s 			page 43


     /tmp/ccBtDXrK.s:5820   .debug_str:00000000000000c2 .LASF165
     /tmp/ccBtDXrK.s:5956   .debug_str:00000000000004f8 .LASF166
     /tmp/ccBtDXrK.s:6282   .debug_str:0000000000000ef0 .LASF266
     /tmp/ccBtDXrK.s:6300   .debug_str:0000000000000f55 .LASF267
     /tmp/ccBtDXrK.s:6216   .debug_str:0000000000000c6b .LASF167
     /tmp/ccBtDXrK.s:5816   .debug_str:00000000000000aa .LASF168
     /tmp/ccBtDXrK.s:5978   .debug_str:000000000000058c .LASF169
     /tmp/ccBtDXrK.s:6150   .debug_str:0000000000000a52 .LASF170
     /tmp/ccBtDXrK.s:6262   .debug_str:0000000000000e7e .LASF171
     /tmp/ccBtDXrK.s:5908   .debug_str:0000000000000378 .LASF172
     /tmp/ccBtDXrK.s:6060   .debug_str:00000000000007da .LASF173
     /tmp/ccBtDXrK.s:6056   .debug_str:00000000000007af .LASF174
     /tmp/ccBtDXrK.s:6248   .debug_str:0000000000000ded .LASF175
     /tmp/ccBtDXrK.s:5966   .debug_str:000000000000054f .LASF176
     /tmp/ccBtDXrK.s:6058   .debug_str:00000000000007b9 .LASF177
     /tmp/ccBtDXrK.s:5968   .debug_str:0000000000000558 .LASF178
     /tmp/ccBtDXrK.s:5990   .debug_str:00000000000005ed .LASF179
     /tmp/ccBtDXrK.s:6128   .debug_str:00000000000009b5 .LASF180
     /tmp/ccBtDXrK.s:5930   .debug_str:0000000000000432 .LASF181
     /tmp/ccBtDXrK.s:6004   .debug_str:0000000000000640 .LASF182
     /tmp/ccBtDXrK.s:6018   .debug_str:0000000000000689 .LASF183
     /tmp/ccBtDXrK.s:6308   .debug_str:0000000000000fa3 .LASF268
     /tmp/ccBtDXrK.s:5964   .debug_str:0000000000000537 .LASF185
     /tmp/ccBtDXrK.s:6008   .debug_str:0000000000000654 .LASF186
     /tmp/ccBtDXrK.s:5904   .debug_str:000000000000034b .LASF187
     /tmp/ccBtDXrK.s:5866   .debug_str:0000000000000246 .LASF188
     /tmp/ccBtDXrK.s:6162   .debug_str:0000000000000ac2 .LASF189
     /tmp/ccBtDXrK.s:6138   .debug_str:00000000000009f2 .LASF190
     /tmp/ccBtDXrK.s:5824   .debug_str:00000000000000f0 .LASF191
     /tmp/ccBtDXrK.s:5830   .debug_str:0000000000000124 .LASF192
     /tmp/ccBtDXrK.s:5960   .debug_str:000000000000051e .LASF193
     /tmp/ccBtDXrK.s:5848   .debug_str:00000000000001a3 .LASF194
     /tmp/ccBtDXrK.s:6244   .debug_str:0000000000000dd9 .LASF195
     /tmp/ccBtDXrK.s:5940   .debug_str:0000000000000482 .LASF196
     /tmp/ccBtDXrK.s:6304   .debug_str:0000000000000f7b .LASF197
     /tmp/ccBtDXrK.s:6250   .debug_str:0000000000000e0e .LASF199
     /tmp/ccBtDXrK.s:6082   .debug_str:0000000000000879 .LASF201
     /tmp/ccBtDXrK.s:6172   .debug_str:0000000000000b0e .LASF202
     /tmp/ccBtDXrK.s:6068   .debug_str:0000000000000819 .LASF203
     /tmp/ccBtDXrK.s:6276   .debug_str:0000000000000eca .LASF204
     /tmp/ccBtDXrK.s:6066   .debug_str:0000000000000814 .LASF205
     /tmp/ccBtDXrK.s:6182   .debug_str:0000000000000b61 .LASF206
     /tmp/ccBtDXrK.s:5906   .debug_str:0000000000000360 .LASF208
     /tmp/ccBtDXrK.s:5980   .debug_str:0000000000000596 .LASF225
     /tmp/ccBtDXrK.s:6306   .debug_str:0000000000000f8d .LASF209
     /tmp/ccBtDXrK.s:6288   .debug_str:0000000000000f0c .LASF210
     /tmp/ccBtDXrK.s:5878   .debug_str:00000000000002ac .LASF212
     /tmp/ccBtDXrK.s:6006   .debug_str:000000000000064f .LASF211
     /tmp/ccBtDXrK.s:5794   .debug_str:0000000000000016 .LASF213
     /tmp/ccBtDXrK.s:6220   .debug_str:0000000000000c84 .LASF214
     /tmp/ccBtDXrK.s:5948   .debug_str:00000000000004ce .LASF215
     /tmp/ccBtDXrK.s:5792   .debug_str:0000000000000010 .LASF216
     /tmp/ccBtDXrK.s:5838   .debug_str:0000000000000171 .LASF217
     /tmp/ccBtDXrK.s:6114   .debug_str:0000000000000961 .LASF218
     /tmp/ccBtDXrK.s:6218   .debug_str:0000000000000c79 .LASF219
     /tmp/ccBtDXrK.s:5868   .debug_str:000000000000024c .LASF220
     /tmp/ccBtDXrK.s:6070   .debug_str:0000000000000821 .LASF221
GAS LISTING /tmp/ccBtDXrK.s 			page 44


     /tmp/ccBtDXrK.s:5920   .debug_str:00000000000003f7 .LASF222
     /tmp/ccBtDXrK.s:6188   .debug_str:0000000000000b94 .LASF223
     /tmp/ccBtDXrK.s:6104   .debug_str:0000000000000910 .LASF224
     /tmp/ccBtDXrK.s:6184   .debug_str:0000000000000b74 .LASF226
     /tmp/ccBtDXrK.s:6040   .debug_str:0000000000000736 .LASF227
     /tmp/ccBtDXrK.s:6190   .debug_str:0000000000000bab .LASF228
     /tmp/ccBtDXrK.s:6164   .debug_str:0000000000000ad8 .LASF229
     /tmp/ccBtDXrK.s:6254   .debug_str:0000000000000e2c .LASF230
     /tmp/ccBtDXrK.s:5946   .debug_str:00000000000004b6 .LASF231
     /tmp/ccBtDXrK.s:5814   .debug_str:000000000000009a .LASF232
     /tmp/ccBtDXrK.s:6050   .debug_str:0000000000000787 .LASF233
     /tmp/ccBtDXrK.s:5922   .debug_str:0000000000000406 .LASF234
     /tmp/ccBtDXrK.s:6210   .debug_str:0000000000000c31 .LASF235
     /tmp/ccBtDXrK.s:5818   .debug_str:00000000000000b8 .LASF236
     /tmp/ccBtDXrK.s:6052   .debug_str:0000000000000796 .LASF237
     /tmp/ccBtDXrK.s:6228   .debug_str:0000000000000d5a .LASF238
     /tmp/ccBtDXrK.s:6014   .debug_str:0000000000000671 .LASF239
     /tmp/ccBtDXrK.s:6152   .debug_str:0000000000000a84 .LASF240
     /tmp/ccBtDXrK.s:6236   .debug_str:0000000000000da6 .LASF241
     /tmp/ccBtDXrK.s:5810   .debug_str:000000000000007b .LASF242
     /tmp/ccBtDXrK.s:6028   .debug_str:00000000000006da .LASF243
     /tmp/ccBtDXrK.s:6212   .debug_str:0000000000000c36 .LASF244
     /tmp/ccBtDXrK.s:6268   .debug_str:0000000000000ea9 .LASF245
     /tmp/ccBtDXrK.s:5912   .debug_str:000000000000039d .LASF246
     /tmp/ccBtDXrK.s:6196   .debug_str:0000000000000bd0 .LASF247
     /tmp/ccBtDXrK.s:5876   .debug_str:000000000000028f .LASF248
     /tmp/ccBtDXrK.s:6124   .debug_str:000000000000099e .LASF249
     /tmp/ccBtDXrK.s:5860   .debug_str:00000000000001fe .LASF250
     /tmp/ccBtDXrK.s:6322   .debug_str:0000000000001025 .LASF251
     /tmp/ccBtDXrK.s:6176   .debug_str:0000000000000b21 .LASF252
     /tmp/ccBtDXrK.s:97     .text._ZN4ListI3TCBE6removeEPS0_:0000000000000000 .LFB39
     /tmp/ccBtDXrK.s:186    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000088 .LFE39
     /tmp/ccBtDXrK.s:5924   .debug_str:000000000000040d .LASF269
     /tmp/ccBtDXrK.s:5053   .debug_loc:0000000000000000 .LLST1
     /tmp/ccBtDXrK.s:5075   .debug_loc:000000000000005f .LLST2
     /tmp/ccBtDXrK.s:5093   .debug_loc:00000000000000ab .LLST3
     /tmp/ccBtDXrK.s:5976   .debug_str:0000000000000587 .LASF253
     /tmp/ccBtDXrK.s:5117   .debug_loc:000000000000011b .LLST4
     /tmp/ccBtDXrK.s:153    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000058 .LVL9
     /tmp/ccBtDXrK.s:193    .text:000000000000005c .LFB35
     /tmp/ccBtDXrK.s:1044   .text:00000000000003f0 .LFE35
     /tmp/ccBtDXrK.s:5137   .debug_loc:0000000000000178 .LLST5
     /tmp/ccBtDXrK.s:5208   .debug_loc:00000000000002cb .LLST6
     /tmp/ccBtDXrK.s:5283   .debug_loc:0000000000000431 .LLST7
     /tmp/ccBtDXrK.s:5354   .debug_loc:0000000000000584 .LLST8
     /tmp/ccBtDXrK.s:5425   .debug_loc:00000000000006d7 .LLST9
     /tmp/ccBtDXrK.s:6186   .debug_str:0000000000000b8d .LASF254
     /tmp/ccBtDXrK.s:5496   .debug_loc:000000000000082a .LLST10
     /tmp/ccBtDXrK.s:443    .text:0000000000000120 .LBB98
     /tmp/ccBtDXrK.s:492    .text:0000000000000164 .LBE98
     /tmp/ccBtDXrK.s:5523   .debug_loc:000000000000089d .LLST23
     /tmp/ccBtDXrK.s:456    .text:0000000000000130 .LBB99
     /tmp/ccBtDXrK.s:481    .text:0000000000000154 .LBE99
     /tmp/ccBtDXrK.s:5538   .debug_loc:00000000000008e6 .LLST24
     /tmp/ccBtDXrK.s:469    .text:0000000000000148 .LVL24
     /tmp/ccBtDXrK.s:495    .text:0000000000000164 .LBB100
     /tmp/ccBtDXrK.s:596    .text:00000000000001f0 .LBE100
GAS LISTING /tmp/ccBtDXrK.s 			page 45


     /tmp/ccBtDXrK.s:5545   .debug_loc:0000000000000909 .LLST25
     /tmp/ccBtDXrK.s:5552   .debug_loc:000000000000092c .LLST26
     /tmp/ccBtDXrK.s:5567   .debug_loc:0000000000000975 .LLST27
     /tmp/ccBtDXrK.s:5578   .debug_loc:00000000000009ab .LLST28
     /tmp/ccBtDXrK.s:546    .text:00000000000001b0 .LVL35
     /tmp/ccBtDXrK.s:566    .text:00000000000001d8 .LVL36
     /tmp/ccBtDXrK.s:620    .text:0000000000000218 .LBB110
     /tmp/ccBtDXrK.s:694    .text:0000000000000250 .LBE110
     /tmp/ccBtDXrK.s:5589   .debug_loc:00000000000009e1 .LLST30
     /tmp/ccBtDXrK.s:5596   .debug_loc:0000000000000a04 .LLST31
     /tmp/ccBtDXrK.s:622    .text:0000000000000218 .LBB111
     /tmp/ccBtDXrK.s:638    .text:0000000000000224 .LBE111
     /tmp/ccBtDXrK.s:640    .text:0000000000000224 .LBB113
     /tmp/ccBtDXrK.s:656    .text:0000000000000230 .LBE113
     /tmp/ccBtDXrK.s:666    .text:0000000000000244 .LBB115
     /tmp/ccBtDXrK.s:677    .text:0000000000000248 .LBE115
     /tmp/ccBtDXrK.s:5603   .debug_loc:0000000000000a27 .LLST32
     /tmp/ccBtDXrK.s:679    .text:0000000000000248 .LBB117
     /tmp/ccBtDXrK.s:693    .text:0000000000000250 .LBE117
     /tmp/ccBtDXrK.s:5610   .debug_loc:0000000000000a4a .LLST33
     /tmp/ccBtDXrK.s:664    .text:0000000000000244 .LVL46
     /tmp/ccBtDXrK.s:698    .text:0000000000000250 .LBB74
     /tmp/ccBtDXrK.s:834    .text:00000000000002ec .LBE74
     /tmp/ccBtDXrK.s:5617   .debug_loc:0000000000000a6d .LLST15
     /tmp/ccBtDXrK.s:5624   .debug_loc:0000000000000a90 .LLST16
     /tmp/ccBtDXrK.s:5631   .debug_loc:0000000000000ab3 .LLST17
     /tmp/ccBtDXrK.s:809    .text:00000000000002c0 .LBB81
     /tmp/ccBtDXrK.s:820    .text:00000000000002d8 .LBE81
     /tmp/ccBtDXrK.s:5638   .debug_loc:0000000000000ad6 .LLST18
     /tmp/ccBtDXrK.s:819    .text:00000000000002d8 .LVL59
     /tmp/ccBtDXrK.s:700    .text:0000000000000250 .LBB75
     /tmp/ccBtDXrK.s:716    .text:000000000000025c .LBE75
     /tmp/ccBtDXrK.s:718    .text:000000000000025c .LBB77
     /tmp/ccBtDXrK.s:734    .text:0000000000000268 .LBE77
     /tmp/ccBtDXrK.s:749    .text:000000000000027c .LBB82
     /tmp/ccBtDXrK.s:760    .text:0000000000000280 .LBE82
     /tmp/ccBtDXrK.s:5646   .debug_loc:0000000000000afa .LLST19
     /tmp/ccBtDXrK.s:762    .text:0000000000000280 .LBB84
     /tmp/ccBtDXrK.s:773    .text:0000000000000284 .LBE84
     /tmp/ccBtDXrK.s:5653   .debug_loc:0000000000000b1d .LLST20
     /tmp/ccBtDXrK.s:775    .text:0000000000000284 .LBB86
     /tmp/ccBtDXrK.s:790    .text:0000000000000290 .LBE86
     /tmp/ccBtDXrK.s:5660   .debug_loc:0000000000000b40 .LLST21
     /tmp/ccBtDXrK.s:738    .text:0000000000000270 .LVL51
     /tmp/ccBtDXrK.s:806    .text:00000000000002bc .LVL57
     /tmp/ccBtDXrK.s:828    .text:00000000000002e8 .LVL60
     /tmp/ccBtDXrK.s:5669   .debug_loc:0000000000000b66 .LLST11
     /tmp/ccBtDXrK.s:5684   .debug_loc:0000000000000baf .LLST12
     /tmp/ccBtDXrK.s:291    .text:00000000000000c8 .LBB64
     /tmp/ccBtDXrK.s:306    .text:00000000000000d4 .LBE64
     /tmp/ccBtDXrK.s:311    .text:00000000000000d8 .LBB66
     /tmp/ccBtDXrK.s:327    .text:00000000000000e4 .LBE66
     /tmp/ccBtDXrK.s:845    .text:00000000000002f4 .LBB68
     /tmp/ccBtDXrK.s:856    .text:00000000000002f8 .LBE68
     /tmp/ccBtDXrK.s:5699   .debug_loc:0000000000000bf8 .LLST13
     /tmp/ccBtDXrK.s:858    .text:00000000000002f8 .LBB70
     /tmp/ccBtDXrK.s:870    .text:00000000000002fc .LBE70
GAS LISTING /tmp/ccBtDXrK.s 			page 46


     /tmp/ccBtDXrK.s:5706   .debug_loc:0000000000000c1b .LLST14
     /tmp/ccBtDXrK.s:841    .text:00000000000002f4 .LVL62
     /tmp/ccBtDXrK.s:904    .text:0000000000000324 .LVL66
     /tmp/ccBtDXrK.s:913    .text:0000000000000330 .LVL68
     /tmp/ccBtDXrK.s:922    .text:000000000000033c .LVL70
     /tmp/ccBtDXrK.s:935    .text:0000000000000354 .LVL72
     /tmp/ccBtDXrK.s:946    .text:0000000000000364 .LVL75
     /tmp/ccBtDXrK.s:955    .text:0000000000000370 .LVL77
     /tmp/ccBtDXrK.s:964    .text:000000000000037c .LVL79
     /tmp/ccBtDXrK.s:973    .text:0000000000000388 .LVL81
     /tmp/ccBtDXrK.s:982    .text:0000000000000394 .LVL83
     /tmp/ccBtDXrK.s:991    .text:00000000000003a0 .LVL85
     /tmp/ccBtDXrK.s:1005   .text:00000000000003bc .LVL89
     /tmp/ccBtDXrK.s:1014   .text:00000000000003c8 .LVL91
     /tmp/ccBtDXrK.s:1025   .text:00000000000003d8 .LVL94
     /tmp/ccBtDXrK.s:246    .text:0000000000000090 .LBB58
     /tmp/ccBtDXrK.s:262    .text:000000000000009c .LBE58
     /tmp/ccBtDXrK.s:417    .text:0000000000000108 .LBB93
     /tmp/ccBtDXrK.s:429    .text:0000000000000110 .LBE93
     /tmp/ccBtDXrK.s:5713   .debug_loc:0000000000000c3e .LLST22
     /tmp/ccBtDXrK.s:432    .text:0000000000000110 .LBB96
     /tmp/ccBtDXrK.s:440    .text:000000000000011c .LBE96
     /tmp/ccBtDXrK.s:609    .text:0000000000000210 .LBB108
     /tmp/ccBtDXrK.s:617    .text:0000000000000214 .LBE108
     /tmp/ccBtDXrK.s:5721   .debug_loc:0000000000000c62 .LLST29
     /tmp/ccBtDXrK.s:1037   .text:00000000000003ec .LVL97
     /tmp/ccBtDXrK.s:71     .text:0000000000000044 .LFB34
     /tmp/ccBtDXrK.s:90     .text:000000000000005c .LFE34
     /tmp/ccBtDXrK.s:10     .text:0000000000000000 .LFB33
     /tmp/ccBtDXrK.s:65     .text:0000000000000044 .LFE33
     /tmp/ccBtDXrK.s:30     .text:0000000000000028 .LBB56
     /tmp/ccBtDXrK.s:44     .text:0000000000000030 .LBE56
     /tmp/ccBtDXrK.s:5728   .debug_loc:0000000000000c85 .LLST0
     /tmp/ccBtDXrK.s:6270   .debug_str:0000000000000eb4 .LASF255
     /tmp/ccBtDXrK.s:6094   .debug_str:00000000000008c9 .LASF270
     /tmp/ccBtDXrK.s:6038   .debug_str:000000000000072b .LASF256
     /tmp/ccBtDXrK.s:6290   .debug_str:0000000000000f22 .LASF257
     /tmp/ccBtDXrK.s:5952   .debug_str:00000000000004de .LASF258
     /tmp/ccBtDXrK.s:6100   .debug_str:00000000000008ee .LASF259
     /tmp/ccBtDXrK.s:101    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000000 .LVL3
     /tmp/ccBtDXrK.s:106    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000008 .LVL5
     /tmp/ccBtDXrK.s:164    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000068 .LVL10
     /tmp/ccBtDXrK.s:103    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000004 .LVL4
     /tmp/ccBtDXrK.s:109    .text._ZN4ListI3TCBE6removeEPS0_:000000000000000c .LVL6
     /tmp/ccBtDXrK.s:117    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000018 .LVL7
     /tmp/ccBtDXrK.s:122    .text._ZN4ListI3TCBE6removeEPS0_:0000000000000020 .LVL8
     /tmp/ccBtDXrK.s:219    .text:0000000000000080 .LVL11
     /tmp/ccBtDXrK.s:451    .text:000000000000012c .LVL23
     /tmp/ccBtDXrK.s:690    .text:0000000000000250 .LVL48
     /tmp/ccBtDXrK.s:831    .text:00000000000002ec .LVL61
     /tmp/ccBtDXrK.s:893    .text:000000000000031c .LVL65
     /tmp/ccBtDXrK.s:907    .text:0000000000000328 .LVL67
     /tmp/ccBtDXrK.s:916    .text:0000000000000334 .LVL69
     /tmp/ccBtDXrK.s:925    .text:0000000000000340 .LVL71
     /tmp/ccBtDXrK.s:938    .text:0000000000000358 .LVL73
     /tmp/ccBtDXrK.s:949    .text:0000000000000368 .LVL76
     /tmp/ccBtDXrK.s:958    .text:0000000000000374 .LVL78
GAS LISTING /tmp/ccBtDXrK.s 			page 47


     /tmp/ccBtDXrK.s:967    .text:0000000000000380 .LVL80
     /tmp/ccBtDXrK.s:976    .text:000000000000038c .LVL82
     /tmp/ccBtDXrK.s:985    .text:0000000000000398 .LVL84
     /tmp/ccBtDXrK.s:994    .text:00000000000003a4 .LVL86
     /tmp/ccBtDXrK.s:1008   .text:00000000000003c0 .LVL90
     /tmp/ccBtDXrK.s:1017   .text:00000000000003cc .LVL92
     /tmp/ccBtDXrK.s:1028   .text:00000000000003dc .LVL95
     /tmp/ccBtDXrK.s:225    .text:0000000000000084 .LVL12
     /tmp/ccBtDXrK.s:1003   .text:00000000000003b4 .LVL88
     /tmp/ccBtDXrK.s:1023   .text:00000000000003d0 .LVL93
     /tmp/ccBtDXrK.s:1034   .text:00000000000003e0 .LVL96
     /tmp/ccBtDXrK.s:231    .text:0000000000000088 .LVL13
     /tmp/ccBtDXrK.s:944    .text:000000000000035c .LVL74
     /tmp/ccBtDXrK.s:1000   .text:00000000000003a8 .LVL87
     /tmp/ccBtDXrK.s:237    .text:000000000000008c .LVL14
     /tmp/ccBtDXrK.s:243    .text:0000000000000090 .LVL15
     /tmp/ccBtDXrK.s:260    .text:000000000000009c .LVL16
     /tmp/ccBtDXrK.s:285    .text:00000000000000c0 .LVL17
     /tmp/ccBtDXrK.s:333    .text:00000000000000f8 .LVL20
     /tmp/ccBtDXrK.s:410    .text:0000000000000108 .LVL21
     /tmp/ccBtDXrK.s:478    .text:0000000000000150 .LVL26
     /tmp/ccBtDXrK.s:484    .text:0000000000000158 .LVL27
     /tmp/ccBtDXrK.s:490    .text:0000000000000164 .LVL28
     /tmp/ccBtDXrK.s:473    .text:000000000000014c .LVL25
     /tmp/ccBtDXrK.s:499    .text:0000000000000170 .LVL29
     /tmp/ccBtDXrK.s:501    .text:0000000000000174 .LVL30
     /tmp/ccBtDXrK.s:529    .text:0000000000000190 .LVL33
     /tmp/ccBtDXrK.s:569    .text:00000000000001dc .LVL37
     /tmp/ccBtDXrK.s:577    .text:00000000000001e0 .LVL38
     /tmp/ccBtDXrK.s:585    .text:00000000000001e8 .LVL39
     /tmp/ccBtDXrK.s:592    .text:00000000000001f0 .LVL41
     /tmp/ccBtDXrK.s:590    .text:00000000000001ec .LVL40
     /tmp/ccBtDXrK.s:509    .text:0000000000000178 .LVL31
     /tmp/ccBtDXrK.s:520    .text:0000000000000184 .LVL32
     /tmp/ccBtDXrK.s:636    .text:0000000000000224 .LVL44
     /tmp/ccBtDXrK.s:654    .text:0000000000000230 .LVL45
     /tmp/ccBtDXrK.s:674    .text:0000000000000248 .LVL47
     /tmp/ccBtDXrK.s:714    .text:000000000000025c .LVL49
     /tmp/ccBtDXrK.s:732    .text:0000000000000268 .LVL50
     /tmp/ccBtDXrK.s:740    .text:0000000000000274 .LVL52
     /tmp/ccBtDXrK.s:745    .text:000000000000027c .LVL53
     /tmp/ccBtDXrK.s:814    .text:00000000000002cc .LVL58
     /tmp/ccBtDXrK.s:757    .text:0000000000000280 .LVL54
     /tmp/ccBtDXrK.s:770    .text:0000000000000284 .LVL55
     /tmp/ccBtDXrK.s:787    .text:0000000000000290 .LVL56
     /tmp/ccBtDXrK.s:309    .text:00000000000000d8 .LVL18
     /tmp/ccBtDXrK.s:866    .text:00000000000002fc .LVL64
     /tmp/ccBtDXrK.s:325    .text:00000000000000e4 .LVL19
     /tmp/ccBtDXrK.s:853    .text:00000000000002f8 .LVL63
     /tmp/ccBtDXrK.s:426    .text:0000000000000110 .LVL22
     /tmp/ccBtDXrK.s:608    .text:0000000000000210 .LVL42
     /tmp/ccBtDXrK.s:615    .text:0000000000000214 .LVL43
     /tmp/ccBtDXrK.s:29     .text:0000000000000028 .LVL0
     /tmp/ccBtDXrK.s:40     .text:0000000000000030 .LVL1
     /tmp/ccBtDXrK.s:1054   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBtDXrK.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBtDXrK.s:1046   .text:00000000000003f0 .Letext0
GAS LISTING /tmp/ccBtDXrK.s 			page 48


     /tmp/ccBtDXrK.s:289    .text:00000000000000c8 .LBB63
     /tmp/ccBtDXrK.s:412    .text:0000000000000108 .LBE63
     /tmp/ccBtDXrK.s:836    .text:00000000000002ec .LBB72
     /tmp/ccBtDXrK.s:871    .text:00000000000002fc .LBE72
     /tmp/ccBtDXrK.s:899    .text:000000000000031c .LBB73
     /tmp/ccBtDXrK.s:1030   .text:00000000000003dc .LBE73
     /tmp/ccBtDXrK.s:503    .text:0000000000000174 .LBB101
     /tmp/ccBtDXrK.s:573    .text:00000000000001dc .LBE101
     /tmp/ccBtDXrK.s:581    .text:00000000000001e4 .LBB106
     /tmp/ccBtDXrK.s:595    .text:00000000000001f0 .LBE106
     /tmp/ccBtDXrK.s:504    .text:0000000000000174 .LBB102
     /tmp/ccBtDXrK.s:572    .text:00000000000001dc .LBE102
     /tmp/ccBtDXrK.s:587    .text:00000000000001e8 .LBB105
     /tmp/ccBtDXrK.s:594    .text:00000000000001f0 .LBE105
     /tmp/ccBtDXrK.s:505    .text:0000000000000174 .LBB103
     /tmp/ccBtDXrK.s:511    .text:0000000000000178 .LBE103
     /tmp/ccBtDXrK.s:516    .text:0000000000000180 .LBB104
     /tmp/ccBtDXrK.s:571    .text:00000000000001dc .LBE104

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_Z14handleNewCharsPv
_ZdlPv
_ZN9Scheduler12first_sleepyE
_ZN9Scheduler3putEP3TCB
_ZN3Sem5firstE
_ZN3TCB16time_slice_countE
_ZN3TCB8dispatchEv
plic_claim
CONSOLE_STATUS
_ZN9myConsole11inputBufferE
_ZNK13BoundedBuffer4fullEv
CONSOLE_RX_DATA
_ZN9myConsole10input_putcEc
plic_complete
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_
_ZN3TCB11_threadExitEv
_ZN3Sem4openEPPS_j
_ZN3Sem7s_closeEPS_
_ZN3Sem4waitEPS_
_ZN3Sem6signalEPS_
_ZN3Sem9timedwaitEPS_m
_ZN3Sem7trywaitEPS_
_ZN9Scheduler10time_sleepEP3TCBm
_ZN9myConsole10input_getcEv
_ZN9myConsole11output_putcEc
_Z12printIntegerm
