GAS LISTING /tmp/ccz2CSz8.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5RISCV10popSppSpieEv
   9              	_ZN5RISCV10popSppSpieEv:
  10              	.LFB34:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../lib/console.h"
   3:src/riscv.cpp **** #include "../h/riscv.hpp"
   4:src/riscv.cpp **** #include "../h/syscall_c.h"
   5:src/riscv.cpp **** #include "../h/Memoryallocator.hpp"
   6:src/riscv.cpp **** #include "../h/thread.hpp"
   7:src/riscv.cpp **** #include "../h/Console.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** extern void printInteger(uint64);
  10:src/riscv.cpp **** extern void printString(char*);
  11:src/riscv.cpp **** extern void handleNewChars(void*);
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** // first time running a thread, sepc inside of wrapper
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void RISCV::popSppSpie() {
  12              		.loc 1 16 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     // not inline ( ra reg )
  19:src/riscv.cpp ****     // pop sstatus spp and spie bits
  20:src/riscv.cpp ****     if (TCB::running->routine && TCB::running->routine != handleNewChars) RISCV::mask_status(SPP);
  20              		.loc 1 20 5
  21              		.loc 1 20 23 is_stmt 0
  22 000c 97070000 		la	a5,_ZN3TCB7runningE
  22      83B70700 
  23 0014 83B70700 		ld	a5,0(a5)
  24 0018 83B78702 		ld	a5,40(a5)
  25              		.loc 1 20 5
  26 001c 638C0700 		beqz	a5,.L2
  27              		.loc 1 20 31 discriminator 1
  28 0020 17070000 		la	a4,_Z14handleNewCharsPv
  28      03370700 
  29 0028 6386E700 		beq	a5,a4,.L2
  30              		.loc 1 20 75 is_stmt 1
  31              	.LVL0:
  32              	.LBB38:
  33              	.LBB39:
  34              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 4/7/24.
GAS LISTING /tmp/ccz2CSz8.s 			page 2


   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class RISCV {
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     enum causes {
  14:src/../h/riscv.hpp ****         SOFTWARE = 0x8000000000000001UL,
  15:src/../h/riscv.hpp ****         EXTERNAL = 0x8000000000000009UL,
  16:src/../h/riscv.hpp ****         U_ECALL  = 0x0000000000000008UL,
  17:src/../h/riscv.hpp ****         S_ECALL  = 0x0000000000000009UL
  18:src/../h/riscv.hpp ****     };
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static void supervisor_trap();
  21:src/../h/riscv.hpp ****     static void handle_interrupt();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void push_regs();
  24:src/../h/riscv.hpp ****     static void pop_regs();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static uint64 rd_scause();
  27:src/../h/riscv.hpp ****     static void wr_scause(uint64 value);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     static uint64 rd_sepc();
  30:src/../h/riscv.hpp ****     static void wr_sepc(uint64 value);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     static uint64 rd_stvec();
  33:src/../h/riscv.hpp ****     static void wr_stvec(uint64 value);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     static uint64 rd_stval();
  36:src/../h/riscv.hpp ****     static void wr_stval(uint64 value);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     static uint64 rd_sip();
  39:src/../h/riscv.hpp ****     static void wr_sip(uint64 value);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     static uint64 rd_sstatus();
  42:src/../h/riscv.hpp ****     static void wr_sstatus(uint64 value);
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     static inline void clear_sip(uint64 mask) {
  45:src/../h/riscv.hpp ****         __asm__ volatile("csrc sip, %0" : : "r"(mask));
  46:src/../h/riscv.hpp ****     }
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     static inline void set_sip(uint64 mask) {
  49:src/../h/riscv.hpp ****         __asm__ volatile("csrs sip, %0" : : "r"(mask));
  50:src/../h/riscv.hpp ****     }
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     static inline void mask_status(uint64 mask) {
  54:src/../h/riscv.hpp ****         __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
  35              		.loc 2 54 9
  36              		.loc 2 54 59 is_stmt 0
  37 002c 93070010 		li	a5,256
  38              	#APP
  39              	# 54 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccz2CSz8.s 			page 3


  55              	    };
  40              		csrc sstatus, a5
  41              	# 0 "" 2
  42              	.LVL1:
  43              	#NO_APP
  44              	.L2:
  45              	.LBE39:
  46              	.LBE38:
  21:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  47              		.loc 1 21 5 is_stmt 1
  48              		.loc 1 21 39 is_stmt 0
  49              	#APP
  50              	# 21 "src/riscv.cpp" 1
  22              	    __asm__ volatile ("sret");
  51              		csrw sepc, ra
  52              	# 0 "" 2
  53              		.loc 1 22 5 is_stmt 1
  54              		.loc 1 22 30 is_stmt 0
  55              	# 22 "src/riscv.cpp" 1
  23              	
  24:src/riscv.cpp ****     // => pop spp and spie !
  25:src/riscv.cpp ****     // exit from supervisor mode
  26:src/riscv.cpp **** }
  56              		sret
  57              	# 0 "" 2
  58              		.loc 1 26 1
  59              	#NO_APP
  60 003c 03348100 		ld	s0,8(sp)
  61              		.cfi_restore 8
  62              		.cfi_def_cfa 2, 16
  63 0040 13010101 		addi	sp,sp,16
  64              		.cfi_def_cfa_offset 0
  65 0044 67800000 		jr	ra
  66              		.cfi_endproc
  67              	.LFE34:
  69              		.align	2
  70              		.globl	_ZN5RISCV16handle_interruptEv
  72              	_ZN5RISCV16handle_interruptEv:
  73              	.LFB35:
  27:src/riscv.cpp **** 
  28:src/riscv.cpp **** void RISCV::handle_interrupt() {
  74              		.loc 1 28 32 is_stmt 1
  75              		.cfi_startproc
  76 0048 130101FB 		addi	sp,sp,-80
  77              		.cfi_def_cfa_offset 80
  78 004c 23341104 		sd	ra,72(sp)
  79 0050 23308104 		sd	s0,64(sp)
  80 0054 233C9102 		sd	s1,56(sp)
  81 0058 23382103 		sd	s2,48(sp)
  82              		.cfi_offset 1, -8
  83              		.cfi_offset 8, -16
  84              		.cfi_offset 9, -24
  85              		.cfi_offset 18, -32
  86 005c 13040105 		addi	s0,sp,80
  87              		.cfi_def_cfa 8, 0
  29:src/riscv.cpp **** 
  30:src/riscv.cpp ****     uint64 op, a1, a2, a3, a4;
GAS LISTING /tmp/ccz2CSz8.s 			page 4


  88              		.loc 1 30 5
  31:src/riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(op)); // operation code
  89              		.loc 1 31 5
  90              		.loc 1 31 45 is_stmt 0
  91              	#APP
  92              	# 31 "src/riscv.cpp" 1
  32              	    __asm__ volatile("mv %0, a1" : "=r"(a1));
  93              		mv a6, a0
  94              	# 0 "" 2
  95              	.LVL2:
  96              		.loc 1 32 5 is_stmt 1
  97              		.loc 1 32 45 is_stmt 0
  98              	# 32 "src/riscv.cpp" 1
  33              	    __asm__ volatile("mv %0, a2" : "=r"(a2));
  99              		mv a0, a1
 100              	# 0 "" 2
 101              	.LVL3:
 102              		.loc 1 33 5 is_stmt 1
 103              		.loc 1 33 45 is_stmt 0
 104              	# 33 "src/riscv.cpp" 1
  34              	    __asm__ volatile("mv %0, a3" : "=r"(a3));
 105              		mv a1, a2
 106              	# 0 "" 2
 107              	.LVL4:
 108              		.loc 1 34 5 is_stmt 1
 109              		.loc 1 34 45 is_stmt 0
 110              	# 34 "src/riscv.cpp" 1
  35              	    __asm__ volatile("mv %0, a4" : "=r"(a4));
 111              		mv a2, a3
 112              	# 0 "" 2
 113              	.LVL5:
 114              		.loc 1 35 5 is_stmt 1
 115              		.loc 1 35 45 is_stmt 0
 116              	# 35 "src/riscv.cpp" 1
  36              	
 117              		mv a3, a4
 118              	# 0 "" 2
 119              	.LVL6:
  37:src/riscv.cpp ****     uint64 scause = rd_scause();
 120              		.loc 1 37 5 is_stmt 1
 121              	#NO_APP
 122              	.LBB40:
 123              	.LBB41:
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     static inline void set_status(uint64 mask) {
  58:src/../h/riscv.hpp ****         __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
  59:src/../h/riscv.hpp ****     }
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     static void popSppSpie();
  62:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits
  63:src/../h/riscv.hpp ****     // must be in cpp !!!
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     enum mask_sstatus {
  66:src/../h/riscv.hpp ****         SIE = (1 << 1),
  67:src/../h/riscv.hpp ****         SPIE =(1 << 5),
  68:src/../h/riscv.hpp ****         SPP = (1 << 8)
  69:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccz2CSz8.s 			page 5


  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     enum mask_sip_sie {
  72:src/../h/riscv.hpp ****         SS = (1 << 1),
  73:src/../h/riscv.hpp ****         SE = (1 << 9)
  74:src/../h/riscv.hpp ****     };
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp **** };
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp **** inline uint64 RISCV::rd_scause() {
  79:src/../h/riscv.hpp ****     uint64 volatile value;
 124              		.loc 2 79 5
  80:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
 125              		.loc 2 80 5
 126              		.loc 2 80 55 is_stmt 0
 127              	#APP
 128              	# 80 "src/../h/riscv.hpp" 1
  81              	    return value;
 129              		csrr a5, scause
 130              	# 0 "" 2
 131              	#NO_APP
 132 0078 233CF4FA 		sd	a5,-72(s0)
 133              		.loc 2 81 5 is_stmt 1
 134              		.loc 2 81 12 is_stmt 0
 135 007c 033784FB 		ld	a4,-72(s0)
 136              	.LVL7:
 137              	.LBE41:
 138              	.LBE40:
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****     if (scause == SOFTWARE) {
 139              		.loc 1 39 5 is_stmt 1
 140              	.LBB42:
 141 0080 9307F0FF 		li	a5,-1
 142 0084 9397F703 		slli	a5,a5,63
 143 0088 93871700 		addi	a5,a5,1
 144 008c 6300F706 		beq	a4,a5,.L29
 145              	.LBE42:
  40:src/riscv.cpp ****         // software interrupt - timer
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****         // update running time passed for running
  43:src/riscv.cpp ****         // if time >= running time slice, dispatch()
  44:src/riscv.cpp ****         // reset static time passed
  45:src/riscv.cpp ****         // update sleeping threads or timed wait
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****         clear_sip(mask_sip_sie::SS);
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****         if (Scheduler::hasSleeping()) {
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****             Scheduler::first_sleepy -> sleeping_time --;
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****             TCB* tcb = Scheduler::first_sleepy;
  54:src/riscv.cpp ****             while (tcb) {
  55:src/riscv.cpp ****                 // remember first sleepy
  56:src/riscv.cpp ****                 if (tcb -> sleeping_time > 0) break;
  57:src/riscv.cpp **** 
  58:src/riscv.cpp ****                 tcb->current_state = TCB::RUNNABLE;
  59:src/riscv.cpp ****                 Scheduler::put(tcb);
  60:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
GAS LISTING /tmp/ccz2CSz8.s 			page 6


  61:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
  62:src/riscv.cpp ****                 tcb = next;
  63:src/riscv.cpp ****             }
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****             Scheduler::first_sleepy = tcb;
  66:src/riscv.cpp ****             if (!Scheduler::first_sleepy) Scheduler::last_sleepy = nullptr;
  67:src/riscv.cpp **** 
  68:src/riscv.cpp ****         }
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****         TCB::time_slice_count ++;
  71:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
  72:src/riscv.cpp ****         {
  73:src/riscv.cpp ****             uint64 sepc = rd_sepc();
  74:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
  75:src/riscv.cpp **** 
  76:src/riscv.cpp ****             TCB::time_slice_count = 0; // new running thread
  77:src/riscv.cpp ****             TCB::dispatch();
  78:src/riscv.cpp **** 
  79:src/riscv.cpp ****             wr_sepc(sepc);
  80:src/riscv.cpp ****             wr_sstatus(sstatus);
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****             // first time running thread -> context not saved
  83:src/riscv.cpp ****             // next instruction: inside of wrapper function
  84:src/riscv.cpp ****         }
  85:src/riscv.cpp **** 
  86:src/riscv.cpp ****     } else if (scause == EXTERNAL) {
 146              		.loc 1 86 12
 147              	.LBB83:
 148              	.LBB43:
 149 0090 9307F0FF 		li	a5,-1
 150 0094 9397F703 		slli	a5,a5,63
 151 0098 93879700 		addi	a5,a5,9
 152 009c 6300F712 		beq	a4,a5,.L30
 153              	.LBE43:
 154              	.LBE83:
  87:src/riscv.cpp ****         // external interrupt - console
  88:src/riscv.cpp ****         console_handler();
  89:src/riscv.cpp **** //
  90:src/riscv.cpp **** //        uint64 sepc = rd_sepc();
  91:src/riscv.cpp **** //        uint64 sstatus = rd_sstatus();
  92:src/riscv.cpp **** //
  93:src/riscv.cpp **** //        int irq = plic_claim();
  94:src/riscv.cpp **** //        if (irq == CONSOLE_IRQ) {
  95:src/riscv.cpp **** //            while (*(char *) CONSOLE_STATUS & CONSOLE_RX_STATUS_BIT) {
  96:src/riscv.cpp **** //
  97:src/riscv.cpp **** //                char c = *(char *) CONSOLE_RX_DATA;
  98:src/riscv.cpp **** //                myConsole::kputc(c);
  99:src/riscv.cpp **** //                // put new char to input buffer.
 100:src/riscv.cpp **** //            }
 101:src/riscv.cpp **** //        }
 102:src/riscv.cpp **** //        plic_complete(irq);
 103:src/riscv.cpp **** //        wr_sepc(sepc);
 104:src/riscv.cpp **** //        wr_sstatus(sstatus);
 105:src/riscv.cpp **** //        clear_sip(SE);
 106:src/riscv.cpp ****     }
 107:src/riscv.cpp **** //    else if (scause == S_ECALL) {
 108:src/riscv.cpp **** //
GAS LISTING /tmp/ccz2CSz8.s 			page 7


 109:src/riscv.cpp **** //        // a1 = oldRunning
 110:src/riscv.cpp **** //        // a2 = newRunning
 111:src/riscv.cpp **** //
 112:src/riscv.cpp **** //        uint64 sepc = rd_sepc() + 4;
 113:src/riscv.cpp **** //        uint64 sstatus = rd_sstatus();
 114:src/riscv.cpp **** //
 115:src/riscv.cpp **** //        TCB::contextSwitch( &((TCB*)a1)->context, &((TCB*)a2)->context );
 116:src/riscv.cpp **** //
 117:src/riscv.cpp **** //        wr_sepc(sepc);
 118:src/riscv.cpp **** //        wr_sstatus(sstatus);
 119:src/riscv.cpp **** 
 120:src/riscv.cpp ****      else if (scause == U_ECALL || scause == S_ECALL){
 155              		.loc 1 120 11
 156              	.LBB84:
 157              	.LBB58:
 158              	.LBB44:
 159              		.loc 1 120 33 is_stmt 0
 160 00a0 130787FF 		addi	a4,a4,-8
 161              	.LVL8:
 162              		.loc 1 120 11
 163 00a4 93071000 		li	a5,1
 164 00a8 63EEE71E 		bgtu	a4,a5,.L11
 165              	.LBB45:
 121:src/riscv.cpp ****         // environment call from user / supervisor mode
 122:src/riscv.cpp **** 
 123:src/riscv.cpp ****         uint64 sepc = rd_sepc() + 4;
 166              		.loc 1 123 9 is_stmt 1
 167              	.LBB46:
 168              	.LBB47:
  82:src/../h/riscv.hpp **** }
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** inline void RISCV::wr_scause(uint64 value) {
  85:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sepc() {
  89:src/../h/riscv.hpp ****     uint64 volatile value;
 169              		.loc 2 89 5
  90:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 170              		.loc 2 90 5
 171              		.loc 2 90 53 is_stmt 0
 172              	#APP
 173              	# 90 "src/../h/riscv.hpp" 1
  91              	    return value;
 174              		csrr a5, sepc
 175              	# 0 "" 2
 176              	#NO_APP
 177 00b0 233CF4FC 		sd	a5,-40(s0)
 178              		.loc 2 91 5 is_stmt 1
 179              		.loc 2 91 12 is_stmt 0
 180 00b4 833484FD 		ld	s1,-40(s0)
 181              	.LBE47:
 182              	.LBE46:
 183              		.loc 1 123 35
 184 00b8 93844400 		addi	s1,s1,4
 185              	.LVL9:
 124:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
GAS LISTING /tmp/ccz2CSz8.s 			page 8


 186              		.loc 1 124 9 is_stmt 1
 187              	.LBB48:
 188              	.LBB49:
  92:src/../h/riscv.hpp **** }
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** inline void RISCV::wr_sepc(uint64 value) {
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stvec() {
  99:src/../h/riscv.hpp ****     uint64 volatile value;
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
 101:src/../h/riscv.hpp ****     return value;
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline void RISCV::wr_stvec(uint64 value) {
 105:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stval() {
 109:src/../h/riscv.hpp ****     uint64 volatile value;
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stval" : "=r"(value));
 111:src/../h/riscv.hpp ****     return value;
 112:src/../h/riscv.hpp **** }
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** inline void RISCV::wr_stval(uint64 value) {
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %0" : : "r"(value));
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sip() {
 119:src/../h/riscv.hpp ****     uint64 volatile value;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
 121:src/../h/riscv.hpp ****     return value;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void RISCV::wr_sip(uint64 value) {
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sstatus() {
 129:src/../h/riscv.hpp ****     uint64 volatile value;
 189              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 190              		.loc 2 130 5
 191              		.loc 2 130 56 is_stmt 0
 192              	#APP
 193              	# 130 "src/../h/riscv.hpp" 1
 131              	    return value;
 194              		csrr a5, sstatus
 195              	# 0 "" 2
 196              	#NO_APP
 197 00c0 2338F4FC 		sd	a5,-48(s0)
 198              		.loc 2 131 5 is_stmt 1
 199              		.loc 2 131 12 is_stmt 0
 200 00c4 033904FD 		ld	s2,-48(s0)
 201              	.LVL10:
 202              	.LBE49:
GAS LISTING /tmp/ccz2CSz8.s 			page 9


 203              	.LBE48:
 125:src/riscv.cpp **** 
 126:src/riscv.cpp ****         switch (op) {
 204              		.loc 1 126 9 is_stmt 1
 205 00c8 93072004 		li	a5,66
 206 00cc 63E20711 		bgtu	a6,a5,.L12
 207 00d0 13182800 		slli	a6,a6,2
 208              	.LVL11:
 209 00d4 17070000 		lla	a4,.L14
 209      13070700 
 210              	.LVL12:
 211 00dc 3308E800 		add	a6,a6,a4
 212 00e0 83270800 		lw	a5,0(a6)
 213 00e4 B387E700 		add	a5,a5,a4
 214 00e8 67800700 		jr	a5
 215              		.section	.rodata
 216              		.align	2
 217              		.align	2
 218              	.L14:
 219 0000 00000000 		.word	.L12-.L14
 220 0004 00000000 		.word	.L27-.L14
 221 0008 00000000 		.word	.L26-.L14
 222 000c 00000000 		.word	.L12-.L14
 223 0010 00000000 		.word	.L12-.L14
 224 0014 00000000 		.word	.L12-.L14
 225 0018 00000000 		.word	.L12-.L14
 226 001c 00000000 		.word	.L12-.L14
 227 0020 00000000 		.word	.L12-.L14
 228 0024 00000000 		.word	.L12-.L14
 229 0028 00000000 		.word	.L12-.L14
 230 002c 00000000 		.word	.L12-.L14
 231 0030 00000000 		.word	.L12-.L14
 232 0034 00000000 		.word	.L12-.L14
 233 0038 00000000 		.word	.L12-.L14
 234 003c 00000000 		.word	.L12-.L14
 235 0040 00000000 		.word	.L12-.L14
 236 0044 00000000 		.word	.L25-.L14
 237 0048 00000000 		.word	.L24-.L14
 238 004c 00000000 		.word	.L23-.L14
 239 0050 00000000 		.word	.L12-.L14
 240 0054 00000000 		.word	.L12-.L14
 241 0058 00000000 		.word	.L12-.L14
 242 005c 00000000 		.word	.L12-.L14
 243 0060 00000000 		.word	.L12-.L14
 244 0064 00000000 		.word	.L12-.L14
 245 0068 00000000 		.word	.L12-.L14
 246 006c 00000000 		.word	.L12-.L14
 247 0070 00000000 		.word	.L12-.L14
 248 0074 00000000 		.word	.L12-.L14
 249 0078 00000000 		.word	.L12-.L14
 250 007c 00000000 		.word	.L12-.L14
 251 0080 00000000 		.word	.L12-.L14
 252 0084 00000000 		.word	.L22-.L14
 253 0088 00000000 		.word	.L21-.L14
 254 008c 00000000 		.word	.L20-.L14
 255 0090 00000000 		.word	.L19-.L14
 256 0094 00000000 		.word	.L18-.L14
GAS LISTING /tmp/ccz2CSz8.s 			page 10


 257 0098 00000000 		.word	.L17-.L14
 258 009c 00000000 		.word	.L12-.L14
 259 00a0 00000000 		.word	.L12-.L14
 260 00a4 00000000 		.word	.L12-.L14
 261 00a8 00000000 		.word	.L12-.L14
 262 00ac 00000000 		.word	.L12-.L14
 263 00b0 00000000 		.word	.L12-.L14
 264 00b4 00000000 		.word	.L12-.L14
 265 00b8 00000000 		.word	.L12-.L14
 266 00bc 00000000 		.word	.L12-.L14
 267 00c0 00000000 		.word	.L12-.L14
 268 00c4 00000000 		.word	.L16-.L14
 269 00c8 00000000 		.word	.L12-.L14
 270 00cc 00000000 		.word	.L12-.L14
 271 00d0 00000000 		.word	.L12-.L14
 272 00d4 00000000 		.word	.L12-.L14
 273 00d8 00000000 		.word	.L12-.L14
 274 00dc 00000000 		.word	.L12-.L14
 275 00e0 00000000 		.word	.L12-.L14
 276 00e4 00000000 		.word	.L12-.L14
 277 00e8 00000000 		.word	.L12-.L14
 278 00ec 00000000 		.word	.L12-.L14
 279 00f0 00000000 		.word	.L12-.L14
 280 00f4 00000000 		.word	.L12-.L14
 281 00f8 00000000 		.word	.L12-.L14
 282 00fc 00000000 		.word	.L12-.L14
 283 0100 00000000 		.word	.L12-.L14
 284 0104 00000000 		.word	.L15-.L14
 285 0108 00000000 		.word	.L13-.L14
 286              		.text
 287              	.LVL13:
 288              	.L29:
 289              	.LBE45:
 290              	.LBE44:
 291              	.LBE58:
 292              	.LBB59:
  47:src/riscv.cpp **** 
 293              		.loc 1 47 9
 294              	.LBB60:
 295              	.LBB61:
  45:src/../h/riscv.hpp ****     }
 296              		.loc 2 45 9
  45:src/../h/riscv.hpp ****     }
 297              		.loc 2 45 55 is_stmt 0
 298 00ec 93072000 		li	a5,2
 299              	#APP
 300              	# 45 "src/../h/riscv.hpp" 1
 301              		csrc sip, a5
 302              	# 0 "" 2
 303              	.LVL14:
 304              	#NO_APP
 305              	.LBE61:
 306              	.LBE60:
  49:src/riscv.cpp **** 
 307              		.loc 1 49 9 is_stmt 1
 308              	.LBB62:
 309              	.LBB63:
GAS LISTING /tmp/ccz2CSz8.s 			page 11


 310              	.LBB64:
 311              		.file 3 "src/../h/Scheduler.hpp"
   1:src/../h/Scheduler.hpp **** 
   2:src/../h/Scheduler.hpp **** #ifndef PROJECT_BASE_SCHEDULER_HPP
   3:src/../h/Scheduler.hpp **** #define PROJECT_BASE_SCHEDULER_HPP
   4:src/../h/Scheduler.hpp **** 
   5:src/../h/Scheduler.hpp **** #include "thread.hpp"
   6:src/../h/Scheduler.hpp **** 
   7:src/../h/Scheduler.hpp **** class Scheduler {
   8:src/../h/Scheduler.hpp **** 
   9:src/../h/Scheduler.hpp ****     friend class RISCV;
  10:src/../h/Scheduler.hpp **** 
  11:src/../h/Scheduler.hpp **** public:
  12:src/../h/Scheduler.hpp ****     static void init_scheduler() {};
  13:src/../h/Scheduler.hpp **** 
  14:src/../h/Scheduler.hpp ****     static TCB* get();
  15:src/../h/Scheduler.hpp ****     static void put(TCB*);
  16:src/../h/Scheduler.hpp ****     static TCB* peek();
  17:src/../h/Scheduler.hpp ****     static bool empty();
  18:src/../h/Scheduler.hpp **** 
  19:src/../h/Scheduler.hpp ****     static int put_to_sleep(TCB*, time_t );
  20:src/../h/Scheduler.hpp **** 
  21:src/../h/Scheduler.hpp ****     void* operator new(size_t);
  22:src/../h/Scheduler.hpp ****     void operator delete(void *);
  23:src/../h/Scheduler.hpp **** 
  24:src/../h/Scheduler.hpp ****     Scheduler(const Scheduler&) = delete;
  25:src/../h/Scheduler.hpp **** 
  26:src/../h/Scheduler.hpp **** private:
  27:src/../h/Scheduler.hpp **** 
  28:src/../h/Scheduler.hpp ****     static bool hasSleeping() {return  first_sleepy != nullptr;}
 312              		.loc 3 28 32
 313              		.loc 3 28 53 is_stmt 0
 314 00f4 97070000 		la	a5,_ZN9Scheduler12first_sleepyE
 314      83B70700 
 315 00fc 83B40700 		ld	s1,0(a5)
 316              	.LBE64:
 317              	.LBE63:
  49:src/riscv.cpp **** 
 318              		.loc 1 49 9
 319 0100 63860404 		beqz	s1,.L6
 320              	.LBB65:
  51:src/riscv.cpp **** 
 321              		.loc 1 51 13 is_stmt 1
  51:src/riscv.cpp **** 
 322              		.loc 1 51 40 is_stmt 0
 323 0104 83B78401 		ld	a5,24(s1)
  51:src/riscv.cpp **** 
 324              		.loc 1 51 54
 325 0108 9387F7FF 		addi	a5,a5,-1
 326 010c 23BCF400 		sd	a5,24(s1)
  53:src/riscv.cpp ****             while (tcb) {
 327              		.loc 1 53 13 is_stmt 1
 328              	.LVL15:
 329              	.L8:
  54:src/riscv.cpp ****                 // remember first sleepy
 330              		.loc 1 54 13
  54:src/riscv.cpp ****                 // remember first sleepy
GAS LISTING /tmp/ccz2CSz8.s 			page 12


 331              		.loc 1 54 20
 332 0110 63860402 		beqz	s1,.L7
 333              	.LBB66:
  56:src/riscv.cpp **** 
 334              		.loc 1 56 17
  56:src/riscv.cpp **** 
 335              		.loc 1 56 28 is_stmt 0
 336 0114 83B78401 		ld	a5,24(s1)
  56:src/riscv.cpp **** 
 337              		.loc 1 56 17
 338 0118 63920702 		bnez	a5,.L7
  58:src/riscv.cpp ****                 Scheduler::put(tcb);
 339              		.loc 1 58 17 is_stmt 1
  58:src/riscv.cpp ****                 Scheduler::put(tcb);
 340              		.loc 1 58 36 is_stmt 0
 341 011c 23A00406 		sw	zero,96(s1)
  59:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
 342              		.loc 1 59 17 is_stmt 1
  59:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
 343              		.loc 1 59 31 is_stmt 0
 344 0120 13850400 		mv	a0,s1
 345 0124 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 345      E7800000 
 346              	.LVL16:
  60:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
 347              		.loc 1 60 17 is_stmt 1
  60:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
 348              		.loc 1 60 22 is_stmt 0
 349 012c 83B70401 		ld	a5,16(s1)
 350              	.LVL17:
  61:src/riscv.cpp ****                 tcb = next;
 351              		.loc 1 61 17 is_stmt 1
  61:src/riscv.cpp ****                 tcb = next;
 352              		.loc 1 61 36 is_stmt 0
 353 0130 23B80400 		sd	zero,16(s1)
  62:src/riscv.cpp ****             }
 354              		.loc 1 62 17 is_stmt 1
 355              	.LVL18:
  62:src/riscv.cpp ****             }
 356              		.loc 1 62 21 is_stmt 0
 357 0134 93840700 		mv	s1,a5
 358              	.LBE66:
  54:src/riscv.cpp ****                 // remember first sleepy
 359              		.loc 1 54 13
 360 0138 6FF09FFD 		j	.L8
 361              	.LVL19:
 362              	.L7:
  65:src/riscv.cpp ****             if (!Scheduler::first_sleepy) Scheduler::last_sleepy = nullptr;
 363              		.loc 1 65 13 is_stmt 1
  65:src/riscv.cpp ****             if (!Scheduler::first_sleepy) Scheduler::last_sleepy = nullptr;
 364              		.loc 1 65 37 is_stmt 0
 365 013c 97070000 		la	a5,_ZN9Scheduler12first_sleepyE
 365      83B70700 
 366 0144 23B09700 		sd	s1,0(a5)
  66:src/riscv.cpp **** 
 367              		.loc 1 66 13 is_stmt 1
 368 0148 63820406 		beqz	s1,.L31
GAS LISTING /tmp/ccz2CSz8.s 			page 13


 369              	.LVL20:
 370              	.L6:
 371              	.LBE65:
 372              	.LBE62:
  70:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 373              		.loc 1 70 9
  70:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 374              		.loc 1 70 31 is_stmt 0
 375 014c 17070000 		la	a4,_ZN3TCB16time_slice_countE
 375      03370700 
 376 0154 83370700 		ld	a5,0(a4)
 377 0158 93871700 		addi	a5,a5,1
 378 015c 2330F700 		sd	a5,0(a4)
  71:src/riscv.cpp ****         {
 379              		.loc 1 71 9 is_stmt 1
 380              	.LBB68:
  71:src/riscv.cpp ****         {
 381              		.loc 1 71 64 is_stmt 0
 382 0160 17070000 		la	a4,_ZN3TCB7runningE
 382      03370700 
 383 0168 03370700 		ld	a4,0(a4)
 384              	.LVL21:
 385              	.LBB69:
 386              	.LBB70:
 387              		.file 4 "src/../h/thread.hpp"
   1:src/../h/thread.hpp **** //
   2:src/../h/thread.hpp **** // Created by os on 4/9/24.
   3:src/../h/thread.hpp **** //
   4:src/../h/thread.hpp **** 
   5:src/../h/thread.hpp **** #ifndef PROJECT_BASE_THREAD_HPP
   6:src/../h/thread.hpp **** #define PROJECT_BASE_THREAD_HPP
   7:src/../h/thread.hpp **** 
   8:src/../h/thread.hpp **** #include "../lib/hw.h"
   9:src/../h/thread.hpp **** #include "../h/Memoryallocator.hpp"
  10:src/../h/thread.hpp **** #include "../h/riscv.hpp"
  11:src/../h/thread.hpp **** #include "../h/syscall_c.h"
  12:src/../h/thread.hpp **** 
  13:src/../h/thread.hpp **** //extern void thread_dispatch();
  14:src/../h/thread.hpp **** 
  15:src/../h/thread.hpp **** using routine_ptr = void(*)(void *);
  16:src/../h/thread.hpp **** 
  17:src/../h/thread.hpp **** // _thread je wrapper ove klase
  18:src/../h/thread.hpp **** class TCB final {
  19:src/../h/thread.hpp **** 
  20:src/../h/thread.hpp ****     friend class RISCV;
  21:src/../h/thread.hpp ****     friend class Sem;
  22:src/../h/thread.hpp ****     friend class Scheduler;
  23:src/../h/thread.hpp **** 
  24:src/../h/thread.hpp **** public:
  25:src/../h/thread.hpp **** 
  26:src/../h/thread.hpp ****     static TCB* running; // current thread
  27:src/../h/thread.hpp **** 
  28:src/../h/thread.hpp ****     enum state {
  29:src/../h/thread.hpp ****         RUNNABLE,
  30:src/../h/thread.hpp ****         SLEEPING,
  31:src/../h/thread.hpp ****         CREATED,
  32:src/../h/thread.hpp ****         FINISHED,
GAS LISTING /tmp/ccz2CSz8.s 			page 14


  33:src/../h/thread.hpp ****         BLOCKED
  34:src/../h/thread.hpp ****     };
  35:src/../h/thread.hpp ****     struct Context {
  36:src/../h/thread.hpp ****         // nadogradi kasnije
  37:src/../h/thread.hpp ****         uint64 pc;
  38:src/../h/thread.hpp ****         uint64 sp;
  39:src/../h/thread.hpp ****         uint64 sstatus;
  40:src/../h/thread.hpp ****         uint64 sepc;
  41:src/../h/thread.hpp ****     };
  42:src/../h/thread.hpp **** 
  43:src/../h/thread.hpp ****     void start();
  44:src/../h/thread.hpp **** 
  45:src/../h/thread.hpp ****     static int _threadCreate(TCB** handle, routine_ptr routine, void* args, void* stack_space); // 
  46:src/../h/thread.hpp **** 
  47:src/../h/thread.hpp ****     static void yield(TCB*, TCB*);
  48:src/../h/thread.hpp **** 
  49:src/../h/thread.hpp ****     static void dispatch();
  50:src/../h/thread.hpp **** 
  51:src/../h/thread.hpp ****     state getState() const {return current_state;}
  52:src/../h/thread.hpp ****     time_t getTimeSlice() const {return time_slice;}
 388              		.loc 4 52 34 is_stmt 1
 389              		.loc 4 52 41 is_stmt 0
 390 016c 03370702 		ld	a4,32(a4)
 391              	.LVL22:
 392              	.LBE70:
 393              	.LBE69:
  71:src/riscv.cpp ****         {
 394              		.loc 1 71 9
 395 0170 63E4E706 		bltu	a5,a4,.L4
 396              	.LBB71:
  73:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
 397              		.loc 1 73 13 is_stmt 1
 398              	.LBB72:
 399              	.LBB73:
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 400              		.loc 2 89 5
  90:src/../h/riscv.hpp ****     return value;
 401              		.loc 2 90 5
  90:src/../h/riscv.hpp ****     return value;
 402              		.loc 2 90 53 is_stmt 0
 403              	#APP
 404              	# 90 "src/../h/riscv.hpp" 1
 405              		csrr a5, sepc
 406              	# 0 "" 2
 407              	#NO_APP
 408 0178 2334F4FC 		sd	a5,-56(s0)
  91:src/../h/riscv.hpp **** }
 409              		.loc 2 91 5 is_stmt 1
  91:src/../h/riscv.hpp **** }
 410              		.loc 2 91 12 is_stmt 0
 411 017c 033984FC 		ld	s2,-56(s0)
 412              	.LVL23:
 413              	.LBE73:
 414              	.LBE72:
  74:src/riscv.cpp **** 
 415              		.loc 1 74 13 is_stmt 1
 416              	.LBB74:
GAS LISTING /tmp/ccz2CSz8.s 			page 15


 417              	.LBB75:
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 418              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return value;
 419              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return value;
 420              		.loc 2 130 56 is_stmt 0
 421              	#APP
 422              	# 130 "src/../h/riscv.hpp" 1
 423              		csrr a5, sstatus
 424              	# 0 "" 2
 425              	#NO_APP
 426 0184 2330F4FC 		sd	a5,-64(s0)
 427              		.loc 2 131 5 is_stmt 1
 428              		.loc 2 131 12 is_stmt 0
 429 0188 833404FC 		ld	s1,-64(s0)
 430              	.LVL24:
 431              	.LBE75:
 432              	.LBE74:
  76:src/riscv.cpp ****             TCB::dispatch();
 433              		.loc 1 76 13 is_stmt 1
  76:src/riscv.cpp ****             TCB::dispatch();
 434              		.loc 1 76 35 is_stmt 0
 435 018c 97070000 		la	a5,_ZN3TCB16time_slice_countE
 435      83B70700 
 436 0194 23B00700 		sd	zero,0(a5)
  77:src/riscv.cpp **** 
 437              		.loc 1 77 13 is_stmt 1
  77:src/riscv.cpp **** 
 438              		.loc 1 77 26 is_stmt 0
 439 0198 97000000 		call	_ZN3TCB8dispatchEv@plt
 439      E7800000 
 440              	.LVL25:
  79:src/riscv.cpp ****             wr_sstatus(sstatus);
 441              		.loc 1 79 13 is_stmt 1
 442              	.LBB76:
 443              	.LBB77:
  95:src/../h/riscv.hpp **** }
 444              		.loc 2 95 5
  95:src/../h/riscv.hpp **** }
 445              		.loc 2 95 54 is_stmt 0
 446              	#APP
 447              	# 95 "src/../h/riscv.hpp" 1
 448              		csrw sepc, s2
 449              	# 0 "" 2
 450              	.LVL26:
 451              	#NO_APP
 452              	.LBE77:
 453              	.LBE76:
  80:src/riscv.cpp **** 
 454              		.loc 1 80 13 is_stmt 1
 455              	.LBB78:
 456              	.LBB79:
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void RISCV::wr_sstatus(uint64 value) {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
GAS LISTING /tmp/ccz2CSz8.s 			page 16


 457              		.loc 2 135 5
 458              		.loc 2 135 57 is_stmt 0
 459              	#APP
 460              	# 135 "src/../h/riscv.hpp" 1
 136              	}
 461              		csrw sstatus, s1
 462              	# 0 "" 2
 463              		.loc 2 136 1
 464              	#NO_APP
 465 01a8 6F000003 		j	.L4
 466              	.LVL27:
 467              	.L31:
 468              	.LBE79:
 469              	.LBE78:
 470              	.LBE71:
 471              	.LBE68:
 472              	.LBB80:
 473              	.LBB67:
  66:src/riscv.cpp **** 
 474              		.loc 1 66 43 is_stmt 1 discriminator 1
  66:src/riscv.cpp **** 
 475              		.loc 1 66 66 is_stmt 0 discriminator 1
 476 01ac 97070000 		la	a5,_ZN9Scheduler11last_sleepyE
 476      83B70700 
 477 01b4 23B00700 		sd	zero,0(a5)
 478 01b8 6FF05FF9 		j	.L6
 479              	.LVL28:
 480              	.L30:
 481              	.LBE67:
 482              	.LBE80:
 483              	.LBE59:
 484              	.LBB81:
  88:src/riscv.cpp **** //
 485              		.loc 1 88 9 is_stmt 1
  88:src/riscv.cpp **** //
 486              		.loc 1 88 24 is_stmt 0
 487 01bc 97000000 		call	console_handler@plt
 487      E7800000 
 488              	.LVL29:
 489 01c4 6F004001 		j	.L4
 490              	.LVL30:
 491              	.L27:
 492              	.LBB56:
 493              	.LBB54:
 127:src/riscv.cpp ****             case MEM_ALLOC:
 494              		.loc 1 127 13 is_stmt 1
 128:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
 495              		.loc 1 128 17
 496              		.loc 1 128 43 is_stmt 0
 497 01c8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 497      E7800000 
 498              	.LVL31:
 129:src/riscv.cpp ****                 break;
 499              		.loc 1 129 17 is_stmt 1
 500              	.L12:
 130:src/riscv.cpp ****             case MEM_FREE:
 131:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
GAS LISTING /tmp/ccz2CSz8.s 			page 17


 132:src/riscv.cpp ****                 break;
 133:src/riscv.cpp ****             case THREAD_CREATE:
 134:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 135:src/riscv.cpp ****                 break;
 136:src/riscv.cpp ****             case THREAD_EXIT:
 137:src/riscv.cpp ****                 TCB::_threadExit();
 138:src/riscv.cpp ****                 break;
 139:src/riscv.cpp ****             case THREAD_DISPATCH:
 140:src/riscv.cpp **** //                TCB::time_slice_count = 0;
 141:src/riscv.cpp ****                 TCB::dispatch();
 142:src/riscv.cpp ****                 break;
 143:src/riscv.cpp ****             case SEM_OPEN:
 144:src/riscv.cpp ****                 Sem::open((sem_t*)a1, (unsigned int)a2);
 145:src/riscv.cpp ****                 break;
 146:src/riscv.cpp ****             case SEM_CLOSE:
 147:src/riscv.cpp ****                 Sem::s_close((sem_t)a1); // a1 == handle
 148:src/riscv.cpp ****                 break;
 149:src/riscv.cpp ****             case SEM_WAIT:
 150:src/riscv.cpp ****                 Sem::wait(((sem_t)a1)); // a1 <=> handle
 151:src/riscv.cpp ****                 break;
 152:src/riscv.cpp ****             case SEM_SIGNAL:
 153:src/riscv.cpp ****                 Sem::signal((sem_t)a1); // a1 <=> handle
 154:src/riscv.cpp ****                 break;
 155:src/riscv.cpp ****             case SEM_TIMEDWAIT:
 156:src/riscv.cpp ****                 Sem::timedWait((sem_t)a1,(time_t)a2);
 157:src/riscv.cpp ****                 break;
 158:src/riscv.cpp ****             case SEM_TRYWAIT:
 159:src/riscv.cpp ****                 Sem::trywait((sem_t)a1);
 160:src/riscv.cpp ****                 break;
 161:src/riscv.cpp ****             case TIME_SLEEP:
 162:src/riscv.cpp ****                 Scheduler::put_to_sleep((thread_t)TCB::running, (time_t)a1);
 163:src/riscv.cpp ****                 break;
 164:src/riscv.cpp ****             case GETC:
 165:src/riscv.cpp ****                 myConsole::getc();
 166:src/riscv.cpp ****                 break;
 167:src/riscv.cpp ****             case PUTC:
 168:src/riscv.cpp ****                 myConsole::putc((char)a1);
 169:src/riscv.cpp ****                 break;
 170:src/riscv.cpp ****         }
 171:src/riscv.cpp **** 
 172:src/riscv.cpp ****         wr_sepc(sepc);
 501              		.loc 1 172 9
 502              	.LBB50:
 503              	.LBB51:
  95:src/../h/riscv.hpp **** }
 504              		.loc 2 95 5
  95:src/../h/riscv.hpp **** }
 505              		.loc 2 95 54 is_stmt 0
 506              	#APP
 507              	# 95 "src/../h/riscv.hpp" 1
 508              		csrw sepc, s1
 509              	# 0 "" 2
 510              	.LVL32:
 511              	#NO_APP
 512              	.LBE51:
 513              	.LBE50:
 173:src/riscv.cpp ****         wr_sstatus(sstatus);
GAS LISTING /tmp/ccz2CSz8.s 			page 18


 514              		.loc 1 173 9 is_stmt 1
 515              	.LBB52:
 516              	.LBB53:
 135:src/../h/riscv.hpp **** }
 517              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 518              		.loc 2 135 57 is_stmt 0
 519              	#APP
 520              	# 135 "src/../h/riscv.hpp" 1
 521              		csrw sstatus, s2
 522              	# 0 "" 2
 523              	.LVL33:
 524              	#NO_APP
 525              	.L4:
 526              	.LBE53:
 527              	.LBE52:
 528              	.LBE54:
 529              	.LBE56:
 530              	.LBE81:
 531              	.LBE84:
 174:src/riscv.cpp **** 
 175:src/riscv.cpp ****     } else {
 176:src/riscv.cpp ****         // INVALID INTERRUPT CODE
 177:src/riscv.cpp ****         printInteger(123456789);
 178:src/riscv.cpp ****     }
 179:src/riscv.cpp **** }
 532              		.loc 1 179 1
 533 01d8 83308104 		ld	ra,72(sp)
 534              		.cfi_remember_state
 535              		.cfi_restore 1
 536 01dc 03340104 		ld	s0,64(sp)
 537              		.cfi_restore 8
 538              		.cfi_def_cfa 2, 80
 539 01e0 83348103 		ld	s1,56(sp)
 540              		.cfi_restore 9
 541 01e4 03390103 		ld	s2,48(sp)
 542              		.cfi_restore 18
 543 01e8 13010105 		addi	sp,sp,80
 544              		.cfi_def_cfa_offset 0
 545 01ec 67800000 		jr	ra
 546              	.LVL34:
 547              	.L26:
 548              		.cfi_restore_state
 549              	.LBB85:
 550              	.LBB82:
 551              	.LBB57:
 552              	.LBB55:
 130:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 553              		.loc 1 130 13 is_stmt 1
 131:src/riscv.cpp ****                 break;
 554              		.loc 1 131 17
 131:src/riscv.cpp ****                 break;
 555              		.loc 1 131 42 is_stmt 0
 556 01f0 97000000 		call	_ZN15MemoryAllocator8mem_freeEPKv@plt
 556      E7800000 
 557              	.LVL35:
 132:src/riscv.cpp ****             case THREAD_CREATE:
GAS LISTING /tmp/ccz2CSz8.s 			page 19


 558              		.loc 1 132 17 is_stmt 1
 559 01f8 6FF09FFD 		j	.L12
 560              	.LVL36:
 561              	.L25:
 133:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 562              		.loc 1 133 13
 134:src/riscv.cpp ****                 break;
 563              		.loc 1 134 17
 134:src/riscv.cpp ****                 break;
 564              		.loc 1 134 35 is_stmt 0
 565 01fc 97000000 		call	_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_@plt
 565      E7800000 
 566              	.LVL37:
 135:src/riscv.cpp ****             case THREAD_EXIT:
 567              		.loc 1 135 17 is_stmt 1
 568 0204 6FF0DFFC 		j	.L12
 569              	.LVL38:
 570              	.L24:
 136:src/riscv.cpp ****                 TCB::_threadExit();
 571              		.loc 1 136 13
 137:src/riscv.cpp ****                 break;
 572              		.loc 1 137 17
 137:src/riscv.cpp ****                 break;
 573              		.loc 1 137 33 is_stmt 0
 574 0208 97000000 		call	_ZN3TCB11_threadExitEv@plt
 574      E7800000 
 575              	.LVL39:
 138:src/riscv.cpp ****             case THREAD_DISPATCH:
 576              		.loc 1 138 17 is_stmt 1
 577 0210 6FF01FFC 		j	.L12
 578              	.LVL40:
 579              	.L23:
 139:src/riscv.cpp **** //                TCB::time_slice_count = 0;
 580              		.loc 1 139 13
 141:src/riscv.cpp ****                 break;
 581              		.loc 1 141 17
 141:src/riscv.cpp ****                 break;
 582              		.loc 1 141 30 is_stmt 0
 583 0214 97000000 		call	_ZN3TCB8dispatchEv@plt
 583      E7800000 
 584              	.LVL41:
 142:src/riscv.cpp ****             case SEM_OPEN:
 585              		.loc 1 142 17 is_stmt 1
 586 021c 6FF05FFB 		j	.L12
 587              	.LVL42:
 588              	.L22:
 143:src/riscv.cpp ****                 Sem::open((sem_t*)a1, (unsigned int)a2);
 589              		.loc 1 143 13
 144:src/riscv.cpp ****                 break;
 590              		.loc 1 144 17
 144:src/riscv.cpp ****                 break;
 591              		.loc 1 144 26 is_stmt 0
 592 0220 9B850500 		sext.w	a1,a1
 593              	.LVL43:
 594 0224 97000000 		call	_ZN3Sem4openEPPS_j@plt
 594      E7800000 
 595              	.LVL44:
GAS LISTING /tmp/ccz2CSz8.s 			page 20


 145:src/riscv.cpp ****             case SEM_CLOSE:
 596              		.loc 1 145 17 is_stmt 1
 597 022c 6FF05FFA 		j	.L12
 598              	.LVL45:
 599              	.L21:
 146:src/riscv.cpp ****                 Sem::s_close((sem_t)a1); // a1 == handle
 600              		.loc 1 146 13
 147:src/riscv.cpp ****                 break;
 601              		.loc 1 147 17
 147:src/riscv.cpp ****                 break;
 602              		.loc 1 147 29 is_stmt 0
 603 0230 97000000 		call	_ZN3Sem7s_closeEPS_@plt
 603      E7800000 
 604              	.LVL46:
 148:src/riscv.cpp ****             case SEM_WAIT:
 605              		.loc 1 148 17 is_stmt 1
 606 0238 6FF09FF9 		j	.L12
 607              	.LVL47:
 608              	.L20:
 149:src/riscv.cpp ****                 Sem::wait(((sem_t)a1)); // a1 <=> handle
 609              		.loc 1 149 13
 150:src/riscv.cpp ****                 break;
 610              		.loc 1 150 17
 150:src/riscv.cpp ****                 break;
 611              		.loc 1 150 26 is_stmt 0
 612 023c 97000000 		call	_ZN3Sem4waitEPS_@plt
 612      E7800000 
 613              	.LVL48:
 151:src/riscv.cpp ****             case SEM_SIGNAL:
 614              		.loc 1 151 17 is_stmt 1
 615 0244 6FF0DFF8 		j	.L12
 616              	.LVL49:
 617              	.L19:
 152:src/riscv.cpp ****                 Sem::signal((sem_t)a1); // a1 <=> handle
 618              		.loc 1 152 13
 153:src/riscv.cpp ****                 break;
 619              		.loc 1 153 17
 153:src/riscv.cpp ****                 break;
 620              		.loc 1 153 28 is_stmt 0
 621 0248 97000000 		call	_ZN3Sem6signalEPS_@plt
 621      E7800000 
 622              	.LVL50:
 154:src/riscv.cpp ****             case SEM_TIMEDWAIT:
 623              		.loc 1 154 17 is_stmt 1
 624 0250 6FF01FF8 		j	.L12
 625              	.LVL51:
 626              	.L18:
 155:src/riscv.cpp ****                 Sem::timedWait((sem_t)a1,(time_t)a2);
 627              		.loc 1 155 13
 156:src/riscv.cpp ****                 break;
 628              		.loc 1 156 17
 156:src/riscv.cpp ****                 break;
 629              		.loc 1 156 31 is_stmt 0
 630 0254 97000000 		call	_ZN3Sem9timedWaitEPS_m@plt
 630      E7800000 
 631              	.LVL52:
 157:src/riscv.cpp ****             case SEM_TRYWAIT:
GAS LISTING /tmp/ccz2CSz8.s 			page 21


 632              		.loc 1 157 17 is_stmt 1
 633 025c 6FF05FF7 		j	.L12
 634              	.LVL53:
 635              	.L17:
 158:src/riscv.cpp ****                 Sem::trywait((sem_t)a1);
 636              		.loc 1 158 13
 159:src/riscv.cpp ****                 break;
 637              		.loc 1 159 17
 159:src/riscv.cpp ****                 break;
 638              		.loc 1 159 29 is_stmt 0
 639 0260 97000000 		call	_ZN3Sem7trywaitEPS_@plt
 639      E7800000 
 640              	.LVL54:
 160:src/riscv.cpp ****             case TIME_SLEEP:
 641              		.loc 1 160 17 is_stmt 1
 642 0268 6FF09FF6 		j	.L12
 643              	.LVL55:
 644              	.L16:
 161:src/riscv.cpp ****                 Scheduler::put_to_sleep((thread_t)TCB::running, (time_t)a1);
 645              		.loc 1 161 13
 162:src/riscv.cpp ****                 break;
 646              		.loc 1 162 17
 162:src/riscv.cpp ****                 break;
 647              		.loc 1 162 40 is_stmt 0
 648 026c 93050500 		mv	a1,a0
 649              	.LVL56:
 650 0270 97070000 		la	a5,_ZN3TCB7runningE
 650      83B70700 
 651 0278 03B50700 		ld	a0,0(a5)
 652              	.LVL57:
 653 027c 97000000 		call	_ZN9Scheduler12put_to_sleepEP3TCBm@plt
 653      E7800000 
 654              	.LVL58:
 163:src/riscv.cpp ****             case GETC:
 655              		.loc 1 163 17 is_stmt 1
 656 0284 6FF0DFF4 		j	.L12
 657              	.LVL59:
 658              	.L15:
 164:src/riscv.cpp ****                 myConsole::getc();
 659              		.loc 1 164 13
 165:src/riscv.cpp ****                 break;
 660              		.loc 1 165 17
 165:src/riscv.cpp ****                 break;
 661              		.loc 1 165 32 is_stmt 0
 662 0288 97000000 		call	_ZN9myConsole4getcEv@plt
 662      E7800000 
 663              	.LVL60:
 166:src/riscv.cpp ****             case PUTC:
 664              		.loc 1 166 17 is_stmt 1
 665 0290 6FF01FF4 		j	.L12
 666              	.LVL61:
 667              	.L13:
 167:src/riscv.cpp ****                 myConsole::putc((char)a1);
 668              		.loc 1 167 13
 168:src/riscv.cpp ****                 break;
 669              		.loc 1 168 17
 168:src/riscv.cpp ****                 break;
GAS LISTING /tmp/ccz2CSz8.s 			page 22


 670              		.loc 1 168 32 is_stmt 0
 671 0294 1375F50F 		andi	a0,a0,0xff
 672              	.LVL62:
 673 0298 97000000 		call	_ZN9myConsole4putcEc@plt
 673      E7800000 
 674              	.LVL63:
 169:src/riscv.cpp ****         }
 675              		.loc 1 169 17 is_stmt 1
 676 02a0 6FF01FF3 		j	.L12
 677              	.LVL64:
 678              	.L11:
 679              	.LBE55:
 177:src/riscv.cpp ****     }
 680              		.loc 1 177 9
 177:src/riscv.cpp ****     }
 681              		.loc 1 177 21 is_stmt 0
 682 02a4 37D55B07 		li	a0,123457536
 683              	.LVL65:
 684 02a8 130555D1 		addi	a0,a0,-747
 685 02ac 97000000 		call	_Z12printIntegerm@plt
 685      E7800000 
 686              	.LVL66:
 687              	.LBE57:
 688              	.LBE82:
 689              	.LBE85:
 690              		.loc 1 179 1
 691 02b4 6FF05FF2 		j	.L4
 692              		.cfi_endproc
 693              	.LFE35:
 695              	.Letext0:
 696              		.file 5 "src/../lib/hw.h"
 697              		.file 6 "src/../h/syscall_c.h"
 698              		.file 7 "src/../h/semaphore.hpp"
 699              		.file 8 "src/../h/Memoryallocator.hpp"
 700              		.file 9 "src/../h/List.hpp"
 701              		.file 10 "src/../h/BoundedBuffer.hpp"
 702              		.file 11 "src/../h/Console.hpp"
 703              		.file 12 "src/../lib/console.h"
GAS LISTING /tmp/ccz2CSz8.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccz2CSz8.s:9      .text:0000000000000000 _ZN5RISCV10popSppSpieEv
     /tmp/ccz2CSz8.s:13     .text:0000000000000000 .L0 
     /tmp/ccz2CSz8.s:14     .text:0000000000000000 .L0 
     /tmp/ccz2CSz8.s:15     .text:0000000000000004 .L0 
     /tmp/ccz2CSz8.s:17     .text:0000000000000008 .L0 
     /tmp/ccz2CSz8.s:19     .text:000000000000000c .L0 
     /tmp/ccz2CSz8.s:21     .text:000000000000000c .L0 
     /tmp/ccz2CSz8.s:22     .text:000000000000000c .L0 
     /tmp/ccz2CSz8.s:26     .text:000000000000001c .L0 
     /tmp/ccz2CSz8.s:28     .text:0000000000000020 .L0 
     /tmp/ccz2CSz8.s:35     .text:000000000000002c .L0 
     /tmp/ccz2CSz8.s:36     .text:000000000000002c .L0 
     /tmp/ccz2CSz8.s:37     .text:000000000000002c .L0 
     /tmp/ccz2CSz8.s:48     .text:0000000000000034 .L0 
       src/riscv.cpp:21     .text:0000000000000034 .L0 
     /tmp/ccz2CSz8.s:54     .text:0000000000000038 .L0 
       src/riscv.cpp:22     .text:0000000000000038 .L0 
     /tmp/ccz2CSz8.s:60     .text:000000000000003c .L0 
     /tmp/ccz2CSz8.s:61     .text:0000000000000040 .L0 
     /tmp/ccz2CSz8.s:62     .text:0000000000000040 .L0 
     /tmp/ccz2CSz8.s:64     .text:0000000000000044 .L0 
     /tmp/ccz2CSz8.s:66     .text:0000000000000048 .L0 
     /tmp/ccz2CSz8.s:72     .text:0000000000000048 _ZN5RISCV16handle_interruptEv
     /tmp/ccz2CSz8.s:75     .text:0000000000000048 .L0 
     /tmp/ccz2CSz8.s:76     .text:0000000000000048 .L0 
     /tmp/ccz2CSz8.s:77     .text:000000000000004c .L0 
     /tmp/ccz2CSz8.s:82     .text:000000000000005c .L0 
     /tmp/ccz2CSz8.s:83     .text:000000000000005c .L0 
     /tmp/ccz2CSz8.s:84     .text:000000000000005c .L0 
     /tmp/ccz2CSz8.s:85     .text:000000000000005c .L0 
     /tmp/ccz2CSz8.s:87     .text:0000000000000060 .L0 
     /tmp/ccz2CSz8.s:89     .text:0000000000000060 .L0 
     /tmp/ccz2CSz8.s:90     .text:0000000000000060 .L0 
       src/riscv.cpp:31     .text:0000000000000060 .L0 
     /tmp/ccz2CSz8.s:97     .text:0000000000000064 .L0 
       src/riscv.cpp:32     .text:0000000000000064 .L0 
     /tmp/ccz2CSz8.s:103    .text:0000000000000068 .L0 
       src/riscv.cpp:33     .text:0000000000000068 .L0 
     /tmp/ccz2CSz8.s:109    .text:000000000000006c .L0 
       src/riscv.cpp:34     .text:000000000000006c .L0 
     /tmp/ccz2CSz8.s:115    .text:0000000000000070 .L0 
       src/riscv.cpp:35     .text:0000000000000070 .L0 
     /tmp/ccz2CSz8.s:124    .text:0000000000000074 .L0 
     /tmp/ccz2CSz8.s:125    .text:0000000000000074 .L0 
     /tmp/ccz2CSz8.s:126    .text:0000000000000074 .L0 
  src/../h/riscv.hpp:80     .text:0000000000000074 .L0 
     /tmp/ccz2CSz8.s:134    .text:000000000000007c .L0 
     /tmp/ccz2CSz8.s:135    .text:000000000000007c .L0 
     /tmp/ccz2CSz8.s:141    .text:0000000000000080 .L0 
     /tmp/ccz2CSz8.s:149    .text:0000000000000090 .L0 
     /tmp/ccz2CSz8.s:159    .text:00000000000000a0 .L0 
     /tmp/ccz2CSz8.s:160    .text:00000000000000a0 .L0 
     /tmp/ccz2CSz8.s:163    .text:00000000000000a4 .L0 
     /tmp/ccz2CSz8.s:169    .text:00000000000000ac .L0 
     /tmp/ccz2CSz8.s:170    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccz2CSz8.s 			page 24


     /tmp/ccz2CSz8.s:171    .text:00000000000000ac .L0 
  src/../h/riscv.hpp:90     .text:00000000000000ac .L0 
     /tmp/ccz2CSz8.s:179    .text:00000000000000b4 .L0 
     /tmp/ccz2CSz8.s:180    .text:00000000000000b4 .L0 
     /tmp/ccz2CSz8.s:184    .text:00000000000000b8 .L0 
     /tmp/ccz2CSz8.s:189    .text:00000000000000bc .L0 
     /tmp/ccz2CSz8.s:190    .text:00000000000000bc .L0 
     /tmp/ccz2CSz8.s:191    .text:00000000000000bc .L0 
  src/../h/riscv.hpp:130    .text:00000000000000bc .L0 
     /tmp/ccz2CSz8.s:199    .text:00000000000000c4 .L0 
     /tmp/ccz2CSz8.s:200    .text:00000000000000c4 .L0 
     /tmp/ccz2CSz8.s:205    .text:00000000000000c8 .L0 
     /tmp/ccz2CSz8.s:296    .text:00000000000000ec .L0 
     /tmp/ccz2CSz8.s:297    .text:00000000000000ec .L0 
     /tmp/ccz2CSz8.s:298    .text:00000000000000ec .L0 
     /tmp/ccz2CSz8.s:312    .text:00000000000000f4 .L0 
     /tmp/ccz2CSz8.s:313    .text:00000000000000f4 .L0 
     /tmp/ccz2CSz8.s:314    .text:00000000000000f4 .L0 
     /tmp/ccz2CSz8.s:319    .text:0000000000000100 .L0 
     /tmp/ccz2CSz8.s:322    .text:0000000000000104 .L0 
     /tmp/ccz2CSz8.s:323    .text:0000000000000104 .L0 
     /tmp/ccz2CSz8.s:325    .text:0000000000000108 .L0 
     /tmp/ccz2CSz8.s:330    .text:0000000000000110 .L0 
     /tmp/ccz2CSz8.s:331    .text:0000000000000110 .L0 
     /tmp/ccz2CSz8.s:332    .text:0000000000000110 .L0 
     /tmp/ccz2CSz8.s:335    .text:0000000000000114 .L0 
     /tmp/ccz2CSz8.s:336    .text:0000000000000114 .L0 
     /tmp/ccz2CSz8.s:338    .text:0000000000000118 .L0 
     /tmp/ccz2CSz8.s:340    .text:000000000000011c .L0 
     /tmp/ccz2CSz8.s:341    .text:000000000000011c .L0 
     /tmp/ccz2CSz8.s:343    .text:0000000000000120 .L0 
     /tmp/ccz2CSz8.s:344    .text:0000000000000120 .L0 
     /tmp/ccz2CSz8.s:348    .text:000000000000012c .L0 
     /tmp/ccz2CSz8.s:349    .text:000000000000012c .L0 
     /tmp/ccz2CSz8.s:352    .text:0000000000000130 .L0 
     /tmp/ccz2CSz8.s:353    .text:0000000000000130 .L0 
     /tmp/ccz2CSz8.s:356    .text:0000000000000134 .L0 
     /tmp/ccz2CSz8.s:357    .text:0000000000000134 .L0 
     /tmp/ccz2CSz8.s:360    .text:0000000000000138 .L0 
     /tmp/ccz2CSz8.s:364    .text:000000000000013c .L0 
     /tmp/ccz2CSz8.s:365    .text:000000000000013c .L0 
     /tmp/ccz2CSz8.s:368    .text:0000000000000148 .L0 
     /tmp/ccz2CSz8.s:374    .text:000000000000014c .L0 
     /tmp/ccz2CSz8.s:375    .text:000000000000014c .L0 
     /tmp/ccz2CSz8.s:381    .text:0000000000000160 .L0 
     /tmp/ccz2CSz8.s:382    .text:0000000000000160 .L0 
     /tmp/ccz2CSz8.s:389    .text:000000000000016c .L0 
     /tmp/ccz2CSz8.s:390    .text:000000000000016c .L0 
     /tmp/ccz2CSz8.s:395    .text:0000000000000170 .L0 
     /tmp/ccz2CSz8.s:400    .text:0000000000000174 .L0 
     /tmp/ccz2CSz8.s:401    .text:0000000000000174 .L0 
     /tmp/ccz2CSz8.s:402    .text:0000000000000174 .L0 
  src/../h/riscv.hpp:90     .text:0000000000000174 .L0 
     /tmp/ccz2CSz8.s:410    .text:000000000000017c .L0 
     /tmp/ccz2CSz8.s:411    .text:000000000000017c .L0 
     /tmp/ccz2CSz8.s:418    .text:0000000000000180 .L0 
     /tmp/ccz2CSz8.s:419    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccz2CSz8.s 			page 25


     /tmp/ccz2CSz8.s:420    .text:0000000000000180 .L0 
  src/../h/riscv.hpp:130    .text:0000000000000180 .L0 
     /tmp/ccz2CSz8.s:428    .text:0000000000000188 .L0 
     /tmp/ccz2CSz8.s:429    .text:0000000000000188 .L0 
     /tmp/ccz2CSz8.s:434    .text:000000000000018c .L0 
     /tmp/ccz2CSz8.s:435    .text:000000000000018c .L0 
     /tmp/ccz2CSz8.s:438    .text:0000000000000198 .L0 
     /tmp/ccz2CSz8.s:439    .text:0000000000000198 .L0 
     /tmp/ccz2CSz8.s:444    .text:00000000000001a0 .L0 
     /tmp/ccz2CSz8.s:445    .text:00000000000001a0 .L0 
  src/../h/riscv.hpp:95     .text:00000000000001a0 .L0 
     /tmp/ccz2CSz8.s:457    .text:00000000000001a4 .L0 
     /tmp/ccz2CSz8.s:458    .text:00000000000001a4 .L0 
  src/../h/riscv.hpp:135    .text:00000000000001a4 .L0 
     /tmp/ccz2CSz8.s:465    .text:00000000000001a8 .L0 
     /tmp/ccz2CSz8.s:475    .text:00000000000001ac .L0 
     /tmp/ccz2CSz8.s:476    .text:00000000000001ac .L0 
     /tmp/ccz2CSz8.s:486    .text:00000000000001bc .L0 
     /tmp/ccz2CSz8.s:487    .text:00000000000001bc .L0 
     /tmp/ccz2CSz8.s:495    .text:00000000000001c8 .L0 
     /tmp/ccz2CSz8.s:496    .text:00000000000001c8 .L0 
     /tmp/ccz2CSz8.s:497    .text:00000000000001c8 .L0 
     /tmp/ccz2CSz8.s:501    .text:00000000000001d0 .L0 
     /tmp/ccz2CSz8.s:504    .text:00000000000001d0 .L0 
     /tmp/ccz2CSz8.s:505    .text:00000000000001d0 .L0 
  src/../h/riscv.hpp:95     .text:00000000000001d0 .L0 
     /tmp/ccz2CSz8.s:517    .text:00000000000001d4 .L0 
     /tmp/ccz2CSz8.s:518    .text:00000000000001d4 .L0 
  src/../h/riscv.hpp:135    .text:00000000000001d4 .L0 
     /tmp/ccz2CSz8.s:533    .text:00000000000001d8 .L0 
     /tmp/ccz2CSz8.s:534    .text:00000000000001dc .L0 
     /tmp/ccz2CSz8.s:535    .text:00000000000001dc .L0 
     /tmp/ccz2CSz8.s:537    .text:00000000000001e0 .L0 
     /tmp/ccz2CSz8.s:538    .text:00000000000001e0 .L0 
     /tmp/ccz2CSz8.s:540    .text:00000000000001e4 .L0 
     /tmp/ccz2CSz8.s:542    .text:00000000000001e8 .L0 
     /tmp/ccz2CSz8.s:544    .text:00000000000001ec .L0 
     /tmp/ccz2CSz8.s:548    .text:00000000000001f0 .L0 
     /tmp/ccz2CSz8.s:554    .text:00000000000001f0 .L0 
     /tmp/ccz2CSz8.s:555    .text:00000000000001f0 .L0 
     /tmp/ccz2CSz8.s:556    .text:00000000000001f0 .L0 
     /tmp/ccz2CSz8.s:559    .text:00000000000001f8 .L0 
     /tmp/ccz2CSz8.s:563    .text:00000000000001fc .L0 
     /tmp/ccz2CSz8.s:564    .text:00000000000001fc .L0 
     /tmp/ccz2CSz8.s:565    .text:00000000000001fc .L0 
     /tmp/ccz2CSz8.s:568    .text:0000000000000204 .L0 
     /tmp/ccz2CSz8.s:572    .text:0000000000000208 .L0 
     /tmp/ccz2CSz8.s:573    .text:0000000000000208 .L0 
     /tmp/ccz2CSz8.s:574    .text:0000000000000208 .L0 
     /tmp/ccz2CSz8.s:577    .text:0000000000000210 .L0 
     /tmp/ccz2CSz8.s:581    .text:0000000000000214 .L0 
     /tmp/ccz2CSz8.s:582    .text:0000000000000214 .L0 
     /tmp/ccz2CSz8.s:583    .text:0000000000000214 .L0 
     /tmp/ccz2CSz8.s:586    .text:000000000000021c .L0 
     /tmp/ccz2CSz8.s:590    .text:0000000000000220 .L0 
     /tmp/ccz2CSz8.s:591    .text:0000000000000220 .L0 
     /tmp/ccz2CSz8.s:592    .text:0000000000000220 .L0 
GAS LISTING /tmp/ccz2CSz8.s 			page 26


     /tmp/ccz2CSz8.s:597    .text:000000000000022c .L0 
     /tmp/ccz2CSz8.s:601    .text:0000000000000230 .L0 
     /tmp/ccz2CSz8.s:602    .text:0000000000000230 .L0 
     /tmp/ccz2CSz8.s:603    .text:0000000000000230 .L0 
     /tmp/ccz2CSz8.s:606    .text:0000000000000238 .L0 
     /tmp/ccz2CSz8.s:610    .text:000000000000023c .L0 
     /tmp/ccz2CSz8.s:611    .text:000000000000023c .L0 
     /tmp/ccz2CSz8.s:612    .text:000000000000023c .L0 
     /tmp/ccz2CSz8.s:615    .text:0000000000000244 .L0 
     /tmp/ccz2CSz8.s:619    .text:0000000000000248 .L0 
     /tmp/ccz2CSz8.s:620    .text:0000000000000248 .L0 
     /tmp/ccz2CSz8.s:621    .text:0000000000000248 .L0 
     /tmp/ccz2CSz8.s:624    .text:0000000000000250 .L0 
     /tmp/ccz2CSz8.s:628    .text:0000000000000254 .L0 
     /tmp/ccz2CSz8.s:629    .text:0000000000000254 .L0 
     /tmp/ccz2CSz8.s:630    .text:0000000000000254 .L0 
     /tmp/ccz2CSz8.s:633    .text:000000000000025c .L0 
     /tmp/ccz2CSz8.s:637    .text:0000000000000260 .L0 
     /tmp/ccz2CSz8.s:638    .text:0000000000000260 .L0 
     /tmp/ccz2CSz8.s:639    .text:0000000000000260 .L0 
     /tmp/ccz2CSz8.s:642    .text:0000000000000268 .L0 
     /tmp/ccz2CSz8.s:646    .text:000000000000026c .L0 
     /tmp/ccz2CSz8.s:647    .text:000000000000026c .L0 
     /tmp/ccz2CSz8.s:648    .text:000000000000026c .L0 
     /tmp/ccz2CSz8.s:656    .text:0000000000000284 .L0 
     /tmp/ccz2CSz8.s:660    .text:0000000000000288 .L0 
     /tmp/ccz2CSz8.s:661    .text:0000000000000288 .L0 
     /tmp/ccz2CSz8.s:662    .text:0000000000000288 .L0 
     /tmp/ccz2CSz8.s:665    .text:0000000000000290 .L0 
     /tmp/ccz2CSz8.s:669    .text:0000000000000294 .L0 
     /tmp/ccz2CSz8.s:670    .text:0000000000000294 .L0 
     /tmp/ccz2CSz8.s:671    .text:0000000000000294 .L0 
     /tmp/ccz2CSz8.s:676    .text:00000000000002a0 .L0 
     /tmp/ccz2CSz8.s:681    .text:00000000000002a4 .L0 
     /tmp/ccz2CSz8.s:682    .text:00000000000002a4 .L0 
     /tmp/ccz2CSz8.s:691    .text:00000000000002b4 .L0 
     /tmp/ccz2CSz8.s:692    .text:00000000000002b8 .L0 
     /tmp/ccz2CSz8.s:704    .text:00000000000002b8 .L0 
     /tmp/ccz2CSz8.s:22     .text:000000000000000c .L0 
     /tmp/ccz2CSz8.s:28     .text:0000000000000020 .L0 
     /tmp/ccz2CSz8.s:218    .rodata:0000000000000000 .L14
     /tmp/ccz2CSz8.s:209    .text:00000000000000d4 .L0 
     /tmp/ccz2CSz8.s:314    .text:00000000000000f4 .L0 
     /tmp/ccz2CSz8.s:365    .text:000000000000013c .L0 
     /tmp/ccz2CSz8.s:375    .text:000000000000014c .L0 
     /tmp/ccz2CSz8.s:382    .text:0000000000000160 .L0 
     /tmp/ccz2CSz8.s:435    .text:000000000000018c .L0 
     /tmp/ccz2CSz8.s:476    .text:00000000000001ac .L0 
     /tmp/ccz2CSz8.s:650    .text:0000000000000270 .L0 
     /tmp/ccz2CSz8.s:44     .text:0000000000000034 .L2
     /tmp/ccz2CSz8.s:288    .text:00000000000000ec .L29
     /tmp/ccz2CSz8.s:480    .text:00000000000001bc .L30
     /tmp/ccz2CSz8.s:678    .text:00000000000002a4 .L11
     /tmp/ccz2CSz8.s:500    .text:00000000000001d0 .L12
     /tmp/ccz2CSz8.s:370    .text:000000000000014c .L6
     /tmp/ccz2CSz8.s:362    .text:000000000000013c .L7
     /tmp/ccz2CSz8.s:329    .text:0000000000000110 .L8
GAS LISTING /tmp/ccz2CSz8.s 			page 27


     /tmp/ccz2CSz8.s:467    .text:00000000000001ac .L31
     /tmp/ccz2CSz8.s:525    .text:00000000000001d8 .L4
     /tmp/ccz2CSz8.s:491    .text:00000000000001c8 .L27
     /tmp/ccz2CSz8.s:547    .text:00000000000001f0 .L26
     /tmp/ccz2CSz8.s:561    .text:00000000000001fc .L25
     /tmp/ccz2CSz8.s:570    .text:0000000000000208 .L24
     /tmp/ccz2CSz8.s:579    .text:0000000000000214 .L23
     /tmp/ccz2CSz8.s:588    .text:0000000000000220 .L22
     /tmp/ccz2CSz8.s:599    .text:0000000000000230 .L21
     /tmp/ccz2CSz8.s:608    .text:000000000000023c .L20
     /tmp/ccz2CSz8.s:617    .text:0000000000000248 .L19
     /tmp/ccz2CSz8.s:626    .text:0000000000000254 .L18
     /tmp/ccz2CSz8.s:635    .text:0000000000000260 .L17
     /tmp/ccz2CSz8.s:644    .text:000000000000026c .L16
     /tmp/ccz2CSz8.s:658    .text:0000000000000288 .L15
     /tmp/ccz2CSz8.s:667    .text:0000000000000294 .L13
     /tmp/ccz2CSz8.s:2855   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccz2CSz8.s:5020   .debug_str:0000000000000b16 .LASF248
     /tmp/ccz2CSz8.s:5090   .debug_str:0000000000000daf .LASF249
     /tmp/ccz2CSz8.s:4756   .debug_str:00000000000003e5 .LASF250
     /tmp/ccz2CSz8.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccz2CSz8.s:695    .text:00000000000002b8 .Letext0
     /tmp/ccz2CSz8.s:4616   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccz2CSz8.s:4790   .debug_str:00000000000004e9 .LASF0
     /tmp/ccz2CSz8.s:4824   .debug_str:00000000000005a8 .LASF1
     /tmp/ccz2CSz8.s:4940   .debug_str:00000000000008df .LASF2
     /tmp/ccz2CSz8.s:4954   .debug_str:000000000000097c .LASF4
     /tmp/ccz2CSz8.s:4802   .debug_str:0000000000000531 .LASF3
     /tmp/ccz2CSz8.s:4630   .debug_str:000000000000004a .LASF5
     /tmp/ccz2CSz8.s:4906   .debug_str:0000000000000804 .LASF6
     /tmp/ccz2CSz8.s:4894   .debug_str:000000000000079a .LASF7
     /tmp/ccz2CSz8.s:4812   .debug_str:000000000000056e .LASF8
     /tmp/ccz2CSz8.s:4752   .debug_str:00000000000003c9 .LASF9
     /tmp/ccz2CSz8.s:4766   .debug_str:0000000000000445 .LASF10
     /tmp/ccz2CSz8.s:4682   .debug_str:00000000000001d4 .LASF11
     /tmp/ccz2CSz8.s:4740   .debug_str:0000000000000383 .LASF12
     /tmp/ccz2CSz8.s:4700   .debug_str:000000000000025d .LASF13
     /tmp/ccz2CSz8.s:4680   .debug_str:00000000000001c4 .LASF14
     /tmp/ccz2CSz8.s:4994   .debug_str:0000000000000a87 .LASF15
     /tmp/ccz2CSz8.s:4732   .debug_str:0000000000000332 .LASF16
     /tmp/ccz2CSz8.s:4978   .debug_str:00000000000009f6 .LASF17
     /tmp/ccz2CSz8.s:5088   .debug_str:0000000000000da9 .LASF83
     /tmp/ccz2CSz8.s:4800   .debug_str:000000000000052a .LASF22
     /tmp/ccz2CSz8.s:4842   .debug_str:000000000000063c .LASF18
     /tmp/ccz2CSz8.s:4858   .debug_str:00000000000006aa .LASF19
     /tmp/ccz2CSz8.s:4670   .debug_str:0000000000000184 .LASF20
     /tmp/ccz2CSz8.s:4656   .debug_str:00000000000000f9 .LASF21
     /tmp/ccz2CSz8.s:4624   .debug_str:0000000000000027 .LASF23
     /tmp/ccz2CSz8.s:4922   .debug_str:0000000000000875 .LASF24
     /tmp/ccz2CSz8.s:4712   .debug_str:00000000000002ad .LASF25
     /tmp/ccz2CSz8.s:4714   .debug_str:00000000000002ba .LASF26
     /tmp/ccz2CSz8.s:4934   .debug_str:00000000000008a5 .LASF28
     /tmp/ccz2CSz8.s:4722   .debug_str:00000000000002e0 .LASF27
     /tmp/ccz2CSz8.s:4942   .debug_str:00000000000008ed .LASF29
     /tmp/ccz2CSz8.s:4666   .debug_str:0000000000000174 .LASF30
     /tmp/ccz2CSz8.s:5048   .debug_str:0000000000000c93 .LASF31
     /tmp/ccz2CSz8.s:4764   .debug_str:000000000000043c .LASF32
GAS LISTING /tmp/ccz2CSz8.s 			page 28


     /tmp/ccz2CSz8.s:4684   .debug_str:00000000000001e3 .LASF33
     /tmp/ccz2CSz8.s:4932   .debug_str:000000000000089b .LASF34
     /tmp/ccz2CSz8.s:5124   .debug_str:0000000000000eda .LASF36
     /tmp/ccz2CSz8.s:5000   .debug_str:0000000000000ab0 .LASF38
     /tmp/ccz2CSz8.s:4904   .debug_str:00000000000007ee .LASF40
     /tmp/ccz2CSz8.s:5074   .debug_str:0000000000000d61 .LASF35
     /tmp/ccz2CSz8.s:5076   .debug_str:0000000000000d69 .LASF37
     /tmp/ccz2CSz8.s:4964   .debug_str:00000000000009a9 .LASF39
     /tmp/ccz2CSz8.s:5122   .debug_str:0000000000000ec6 .LASF41
     /tmp/ccz2CSz8.s:4676   .debug_str:00000000000001a6 .LASF42
     /tmp/ccz2CSz8.s:5112   .debug_str:0000000000000e61 .LASF43
     /tmp/ccz2CSz8.s:4836   .debug_str:0000000000000605 .LASF44
     /tmp/ccz2CSz8.s:5010   .debug_str:0000000000000adb .LASF45
     /tmp/ccz2CSz8.s:4920   .debug_str:000000000000086c .LASF46
     /tmp/ccz2CSz8.s:4844   .debug_str:0000000000000645 .LASF47
     /tmp/ccz2CSz8.s:5080   .debug_str:0000000000000d88 .LASF48
     /tmp/ccz2CSz8.s:4900   .debug_str:00000000000007c0 .LASF49
     /tmp/ccz2CSz8.s:4880   .debug_str:0000000000000748 .LASF50
     /tmp/ccz2CSz8.s:4854   .debug_str:0000000000000688 .LASF51
     /tmp/ccz2CSz8.s:4734   .debug_str:0000000000000348 .LASF52
     /tmp/ccz2CSz8.s:4988   .debug_str:0000000000000a52 .LASF53
     /tmp/ccz2CSz8.s:5038   .debug_str:0000000000000c41 .LASF54
     /tmp/ccz2CSz8.s:4692   .debug_str:000000000000021d .LASF55
     /tmp/ccz2CSz8.s:5086   .debug_str:0000000000000d9e .LASF56
     /tmp/ccz2CSz8.s:5056   .debug_str:0000000000000ceb .LASF57
     /tmp/ccz2CSz8.s:4810   .debug_str:0000000000000564 .LASF58
     /tmp/ccz2CSz8.s:5054   .debug_str:0000000000000cd5 .LASF59
     /tmp/ccz2CSz8.s:5034   .debug_str:0000000000000c25 .LASF60
     /tmp/ccz2CSz8.s:5036   .debug_str:0000000000000c2d .LASF61
     /tmp/ccz2CSz8.s:4708   .debug_str:0000000000000291 .LASF62
     /tmp/ccz2CSz8.s:5108   .debug_str:0000000000000e32 .LASF63
     /tmp/ccz2CSz8.s:4924   .debug_str:000000000000087a .LASF64
     /tmp/ccz2CSz8.s:4840   .debug_str:0000000000000624 .LASF65
     /tmp/ccz2CSz8.s:4776   .debug_str:0000000000000493 .LASF66
     /tmp/ccz2CSz8.s:4728   .debug_str:0000000000000305 .LASF67
     /tmp/ccz2CSz8.s:5028   .debug_str:0000000000000c04 .LASF251
     /tmp/ccz2CSz8.s:5120   .debug_str:0000000000000ebc .LASF68
     /tmp/ccz2CSz8.s:4748   .debug_str:00000000000003b6 .LASF69
     /tmp/ccz2CSz8.s:4976   .debug_str:00000000000009e8 .LASF70
     /tmp/ccz2CSz8.s:4914   .debug_str:0000000000000848 .LASF71
     /tmp/ccz2CSz8.s:4710   .debug_str:000000000000029d .LASF72
     /tmp/ccz2CSz8.s:4686   .debug_str:00000000000001f8 .LASF73
     /tmp/ccz2CSz8.s:4628   .debug_str:0000000000000040 .LASF74
     /tmp/ccz2CSz8.s:4874   .debug_str:000000000000071c .LASF75
     /tmp/ccz2CSz8.s:4952   .debug_str:0000000000000971 .LASF76
     /tmp/ccz2CSz8.s:5024   .debug_str:0000000000000bdf .LASF77
     /tmp/ccz2CSz8.s:4938   .debug_str:00000000000008d3 .LASF78
     /tmp/ccz2CSz8.s:5098   .debug_str:0000000000000df3 .LASF79
     /tmp/ccz2CSz8.s:4806   .debug_str:000000000000054f .LASF80
     /tmp/ccz2CSz8.s:4868   .debug_str:00000000000006fb .LASF81
     /tmp/ccz2CSz8.s:5068   .debug_str:0000000000000d3b .LASF82
     /tmp/ccz2CSz8.s:4726   .debug_str:00000000000002ff .LASF84
     /tmp/ccz2CSz8.s:4814   .debug_str:0000000000000581 .LASF85
     /tmp/ccz2CSz8.s:4688   .debug_str:0000000000000201 .LASF86
     /tmp/ccz2CSz8.s:4918   .debug_str:0000000000000864 .LASF87
     /tmp/ccz2CSz8.s:4664   .debug_str:000000000000016b .LASF88
     /tmp/ccz2CSz8.s:4848   .debug_str:0000000000000666 .LASF89
GAS LISTING /tmp/ccz2CSz8.s 			page 29


     /tmp/ccz2CSz8.s:5004   .debug_str:0000000000000ac3 .LASF152
     /tmp/ccz2CSz8.s:5084   .debug_str:0000000000000d96 .LASF90
     /tmp/ccz2CSz8.s:5022   .debug_str:0000000000000bda .LASF91
     /tmp/ccz2CSz8.s:5018   .debug_str:0000000000000b0e .LASF165
     /tmp/ccz2CSz8.s:5102   .debug_str:0000000000000e10 .LASF92
     /tmp/ccz2CSz8.s:5072   .debug_str:0000000000000d51 .LASF94
     /tmp/ccz2CSz8.s:4672   .debug_str:000000000000018c .LASF93
     /tmp/ccz2CSz8.s:4738   .debug_str:000000000000035b .LASF95
     /tmp/ccz2CSz8.s:4828   .debug_str:00000000000005cd .LASF96
     /tmp/ccz2CSz8.s:4648   .debug_str:00000000000000ca .LASF97
     /tmp/ccz2CSz8.s:4718   .debug_str:00000000000002d2 .LASF98
     /tmp/ccz2CSz8.s:4690   .debug_str:000000000000020a .LASF99
     /tmp/ccz2CSz8.s:4962   .debug_str:00000000000009a0 .LASF100
     /tmp/ccz2CSz8.s:4974   .debug_str:00000000000009d4 .LASF102
     /tmp/ccz2CSz8.s:4832   .debug_str:00000000000005f3 .LASF101
     /tmp/ccz2CSz8.s:5060   .debug_str:0000000000000d0d .LASF103
     /tmp/ccz2CSz8.s:4634   .debug_str:0000000000000056 .LASF104
     /tmp/ccz2CSz8.s:4838   .debug_str:000000000000060e .LASF105
     /tmp/ccz2CSz8.s:5006   .debug_str:0000000000000acb .LASF106
     /tmp/ccz2CSz8.s:4998   .debug_str:0000000000000a9a .LASF107
     /tmp/ccz2CSz8.s:4852   .debug_str:0000000000000681 .LASF108
     /tmp/ccz2CSz8.s:4702   .debug_str:000000000000026d .LASF109
     /tmp/ccz2CSz8.s:4956   .debug_str:0000000000000983 .LASF110
     /tmp/ccz2CSz8.s:4626   .debug_str:0000000000000034 .LASF111
     /tmp/ccz2CSz8.s:5114   .debug_str:0000000000000e76 .LASF112
     /tmp/ccz2CSz8.s:4760   .debug_str:0000000000000413 .LASF113
     /tmp/ccz2CSz8.s:4622   .debug_str:0000000000000017 .LASF114
     /tmp/ccz2CSz8.s:4886   .debug_str:000000000000076c .LASF115
     /tmp/ccz2CSz8.s:4966   .debug_str:00000000000009b1 .LASF116
     /tmp/ccz2CSz8.s:4936   .debug_str:00000000000008c2 .LASF117
     /tmp/ccz2CSz8.s:4650   .debug_str:00000000000000df .LASF118
     /tmp/ccz2CSz8.s:4946   .debug_str:000000000000091e .LASF119
     /tmp/ccz2CSz8.s:4724   .debug_str:00000000000002f1 .LASF120
     /tmp/ccz2CSz8.s:4928   .debug_str:000000000000088a .LASF121
     /tmp/ccz2CSz8.s:4716   .debug_str:00000000000002ca .LASF122
     /tmp/ccz2CSz8.s:4888   .debug_str:0000000000000779 .LASF123
     /tmp/ccz2CSz8.s:4972   .debug_str:00000000000009ce .LASF124
     /tmp/ccz2CSz8.s:5042   .debug_str:0000000000000c58 .LASF125
     /tmp/ccz2CSz8.s:4866   .debug_str:00000000000006ed .LASF126
     /tmp/ccz2CSz8.s:5002   .debug_str:0000000000000aba .LASF127
     /tmp/ccz2CSz8.s:5116   .debug_str:0000000000000e83 .LASF181
     /tmp/ccz2CSz8.s:4706   .debug_str:0000000000000283 .LASF239
     /tmp/ccz2CSz8.s:4662   .debug_str:0000000000000143 .LASF241
     /tmp/ccz2CSz8.s:5062   .debug_str:0000000000000d26 .LASF195
     /tmp/ccz2CSz8.s:4636   .debug_str:0000000000000061 .LASF197
     /tmp/ccz2CSz8.s:4890   .debug_str:000000000000077e .LASF128
     /tmp/ccz2CSz8.s:5026   .debug_str:0000000000000bed .LASF129
     /tmp/ccz2CSz8.s:5094   .debug_str:0000000000000dd2 .LASF130
     /tmp/ccz2CSz8.s:4720   .debug_str:00000000000002db .LASF131
     /tmp/ccz2CSz8.s:4792   .debug_str:00000000000004f6 .LASF132
     /tmp/ccz2CSz8.s:4996   .debug_str:0000000000000a93 .LASF133
     /tmp/ccz2CSz8.s:4912   .debug_str:0000000000000835 .LASF134
     /tmp/ccz2CSz8.s:4652   .debug_str:00000000000000ea .LASF135
     /tmp/ccz2CSz8.s:4744   .debug_str:000000000000039a .LASF136
     /tmp/ccz2CSz8.s:5066   .debug_str:0000000000000d33 .LASF137
     /tmp/ccz2CSz8.s:4698   .debug_str:0000000000000249 .LASF138
     /tmp/ccz2CSz8.s:4882   .debug_str:000000000000074f .LASF139
GAS LISTING /tmp/ccz2CSz8.s 			page 30


     /tmp/ccz2CSz8.s:4850   .debug_str:000000000000066e .LASF140
     /tmp/ccz2CSz8.s:4772   .debug_str:0000000000000470 .LASF141
     /tmp/ccz2CSz8.s:4798   .debug_str:0000000000000516 .LASF142
     /tmp/ccz2CSz8.s:4754   .debug_str:00000000000003d9 .LASF143
     /tmp/ccz2CSz8.s:4990   .debug_str:0000000000000a65 .LASF144
     /tmp/ccz2CSz8.s:4846   .debug_str:000000000000065a .LASF207
     /tmp/ccz2CSz8.s:4788   .debug_str:00000000000004e3 .LASF145
     /tmp/ccz2CSz8.s:4808   .debug_str:0000000000000554 .LASF146
     /tmp/ccz2CSz8.s:5106   .debug_str:0000000000000e2a .LASF147
     /tmp/ccz2CSz8.s:4958   .debug_str:0000000000000988 .LASF148
     /tmp/ccz2CSz8.s:4780   .debug_str:00000000000004b1 .LASF149
     /tmp/ccz2CSz8.s:4908   .debug_str:000000000000080b .LASF150
     /tmp/ccz2CSz8.s:4892   .debug_str:000000000000078a .LASF151
     /tmp/ccz2CSz8.s:4674   .debug_str:000000000000019a .LASF153
     /tmp/ccz2CSz8.s:4632   .debug_str:0000000000000051 .LASF154
     /tmp/ccz2CSz8.s:4618   .debug_str:0000000000000000 .LASF155
     /tmp/ccz2CSz8.s:4822   .debug_str:00000000000005a3 .LASF156
     /tmp/ccz2CSz8.s:4646   .debug_str:00000000000000b1 .LASF157
     /tmp/ccz2CSz8.s:4774   .debug_str:0000000000000478 .LASF158
     /tmp/ccz2CSz8.s:5078   .debug_str:0000000000000d7d .LASF159
     /tmp/ccz2CSz8.s:5096   .debug_str:0000000000000dd8 .LASF160
     /tmp/ccz2CSz8.s:5012   .debug_str:0000000000000af0 .LASF161
     /tmp/ccz2CSz8.s:4642   .debug_str:0000000000000099 .LASF162
     /tmp/ccz2CSz8.s:4796   .debug_str:000000000000050c .LASF163
     /tmp/ccz2CSz8.s:4948   .debug_str:000000000000092a .LASF164
     /tmp/ccz2CSz8.s:5058   .debug_str:0000000000000d03 .LASF166
     /tmp/ccz2CSz8.s:4860   .debug_str:00000000000006b3 .LASF167
     /tmp/ccz2CSz8.s:4658   .debug_str:0000000000000101 .LASF168
     /tmp/ccz2CSz8.s:4862   .debug_str:00000000000006c0 .LASF169
     /tmp/ccz2CSz8.s:5044   .debug_str:0000000000000c60 .LASF170
     /tmp/ccz2CSz8.s:4784   .debug_str:00000000000004cf .LASF171
     /tmp/ccz2CSz8.s:4910   .debug_str:0000000000000813 .LASF172
     /tmp/ccz2CSz8.s:4668   .debug_str:000000000000017e .LASF173
     /tmp/ccz2CSz8.s:4660   .debug_str:0000000000000126 .LASF174
     /tmp/ccz2CSz8.s:4786   .debug_str:00000000000004d8 .LASF175
     /tmp/ccz2CSz8.s:4804   .debug_str:0000000000000543 .LASF176
     /tmp/ccz2CSz8.s:4926   .debug_str:0000000000000885 .LASF177
     /tmp/ccz2CSz8.s:4750   .debug_str:00000000000003bf .LASF178
     /tmp/ccz2CSz8.s:4816   .debug_str:000000000000058a .LASF179
     /tmp/ccz2CSz8.s:4830   .debug_str:00000000000005d3 .LASF180
     /tmp/ccz2CSz8.s:5104   .debug_str:0000000000000e16 .LASF252
     /tmp/ccz2CSz8.s:4782   .debug_str:00000000000004b7 .LASF182
     /tmp/ccz2CSz8.s:4820   .debug_str:000000000000059e .LASF183
     /tmp/ccz2CSz8.s:4730   .debug_str:000000000000031d .LASF184
     /tmp/ccz2CSz8.s:4694   .debug_str:0000000000000235 .LASF185
     /tmp/ccz2CSz8.s:4878   .debug_str:0000000000000732 .LASF186
     /tmp/ccz2CSz8.s:4876   .debug_str:0000000000000725 .LASF187
     /tmp/ccz2CSz8.s:4864   .debug_str:00000000000006ca .LASF188
     /tmp/ccz2CSz8.s:5046   .debug_str:0000000000000c81 .LASF189
     /tmp/ccz2CSz8.s:4778   .debug_str:000000000000049e .LASF190
     /tmp/ccz2CSz8.s:4678   .debug_str:00000000000001af .LASF191
     /tmp/ccz2CSz8.s:5040   .debug_str:0000000000000c4c .LASF192
     /tmp/ccz2CSz8.s:4762   .debug_str:000000000000041f .LASF193
     /tmp/ccz2CSz8.s:5100   .debug_str:0000000000000dfe .LASF194
     /tmp/ccz2CSz8.s:4742   .debug_str:0000000000000392 .LASF196
     /tmp/ccz2CSz8.s:4884   .debug_str:0000000000000754 .LASF198
     /tmp/ccz2CSz8.s:4930   .debug_str:0000000000000895 .LASF199
GAS LISTING /tmp/ccz2CSz8.s 			page 31


     /tmp/ccz2CSz8.s:4834   .debug_str:0000000000000600 .LASF200
     /tmp/ccz2CSz8.s:4970   .debug_str:00000000000009c1 .LASF201
     /tmp/ccz2CSz8.s:4736   .debug_str:000000000000034f .LASF202
     /tmp/ccz2CSz8.s:4870   .debug_str:0000000000000700 .LASF203
     /tmp/ccz2CSz8.s:4704   .debug_str:000000000000027e .LASF205
     /tmp/ccz2CSz8.s:4818   .debug_str:0000000000000599 .LASF204
     /tmp/ccz2CSz8.s:4640   .debug_str:0000000000000083 .LASF206
     /tmp/ccz2CSz8.s:4944   .debug_str:000000000000090b .LASF208
     /tmp/ccz2CSz8.s:4986   .debug_str:0000000000000a43 .LASF218
     /tmp/ccz2CSz8.s:4916   .debug_str:0000000000000854 .LASF209
     /tmp/ccz2CSz8.s:5016   .debug_str:0000000000000b09 .LASF210
     /tmp/ccz2CSz8.s:4770   .debug_str:000000000000046b .LASF211
     /tmp/ccz2CSz8.s:5014   .debug_str:0000000000000afe .LASF212
     /tmp/ccz2CSz8.s:4696   .debug_str:000000000000023b .LASF213
     /tmp/ccz2CSz8.s:4872   .debug_str:0000000000000705 .LASF214
     /tmp/ccz2CSz8.s:5030   .debug_str:0000000000000c0a .LASF215
     /tmp/ccz2CSz8.s:4984   .debug_str:0000000000000a2c .LASF216
     /tmp/ccz2CSz8.s:4902   .debug_str:00000000000007d5 .LASF217
     /tmp/ccz2CSz8.s:4980   .debug_str:0000000000000a0c .LASF219
     /tmp/ccz2CSz8.s:5050   .debug_str:0000000000000ca9 .LASF220
     /tmp/ccz2CSz8.s:4768   .debug_str:0000000000000453 .LASF221
     /tmp/ccz2CSz8.s:4638   .debug_str:0000000000000073 .LASF222
     /tmp/ccz2CSz8.s:4856   .debug_str:000000000000069b .LASF223
     /tmp/ccz2CSz8.s:4968   .debug_str:00000000000009ba .LASF224
     /tmp/ccz2CSz8.s:5008   .debug_str:0000000000000ad6 .LASF225
     /tmp/ccz2CSz8.s:4644   .debug_str:00000000000000a7 .LASF226
     /tmp/ccz2CSz8.s:4826   .debug_str:00000000000005bb .LASF227
     /tmp/ccz2CSz8.s:4950   .debug_str:000000000000095c .LASF228
     /tmp/ccz2CSz8.s:5032   .debug_str:0000000000000c19 .LASF229
     /tmp/ccz2CSz8.s:5070   .debug_str:0000000000000d44 .LASF230
     /tmp/ccz2CSz8.s:4654   .debug_str:00000000000000f4 .LASF231
     /tmp/ccz2CSz8.s:5052   .debug_str:0000000000000cc0 .LASF232
     /tmp/ccz2CSz8.s:4794   .debug_str:0000000000000507 .LASF233
     /tmp/ccz2CSz8.s:4992   .debug_str:0000000000000a72 .LASF234
     /tmp/ccz2CSz8.s:5082   .debug_str:0000000000000d91 .LASF235
     /tmp/ccz2CSz8.s:5092   .debug_str:0000000000000dbd .LASF236
     /tmp/ccz2CSz8.s:4896   .debug_str:00000000000007ad .LASF237
     /tmp/ccz2CSz8.s:5110   .debug_str:0000000000000e4b .LASF238
     /tmp/ccz2CSz8.s:4960   .debug_str:000000000000099a .LASF240
     /tmp/ccz2CSz8.s:5118   .debug_str:0000000000000ea6 .LASF242
     /tmp/ccz2CSz8.s:73     .text:0000000000000048 .LFB35
     /tmp/ccz2CSz8.s:693    .text:00000000000002b8 .LFE35
     /tmp/ccz2CSz8.s:4131   .debug_loc:0000000000000000 .LLST1
     /tmp/ccz2CSz8.s:4150   .debug_loc:000000000000005c .LLST2
     /tmp/ccz2CSz8.s:4225   .debug_loc:00000000000001c2 .LLST3
     /tmp/ccz2CSz8.s:4296   .debug_loc:0000000000000315 .LLST4
     /tmp/ccz2CSz8.s:4367   .debug_loc:0000000000000468 .LLST5
     /tmp/ccz2CSz8.s:4982   .debug_str:0000000000000a25 .LASF243
     /tmp/ccz2CSz8.s:4438   .debug_loc:00000000000005bb .LLST6
     /tmp/ccz2CSz8.s:4600   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccz2CSz8.s:4465   .debug_loc:000000000000062e .LLST12
     /tmp/ccz2CSz8.s:333    .text:0000000000000114 .LBB66
     /tmp/ccz2CSz8.s:358    .text:0000000000000138 .LBE66
     /tmp/ccz2CSz8.s:4484   .debug_loc:000000000000068a .LLST13
     /tmp/ccz2CSz8.s:346    .text:000000000000012c .LVL16
     /tmp/ccz2CSz8.s:396    .text:0000000000000174 .LBB71
     /tmp/ccz2CSz8.s:470    .text:00000000000001ac .LBE71
GAS LISTING /tmp/ccz2CSz8.s 			page 32


     /tmp/ccz2CSz8.s:4491   .debug_loc:00000000000006ad .LLST15
     /tmp/ccz2CSz8.s:4498   .debug_loc:00000000000006d0 .LLST16
     /tmp/ccz2CSz8.s:398    .text:0000000000000174 .LBB72
     /tmp/ccz2CSz8.s:414    .text:0000000000000180 .LBE72
     /tmp/ccz2CSz8.s:416    .text:0000000000000180 .LBB74
     /tmp/ccz2CSz8.s:432    .text:000000000000018c .LBE74
     /tmp/ccz2CSz8.s:442    .text:00000000000001a0 .LBB76
     /tmp/ccz2CSz8.s:453    .text:00000000000001a4 .LBE76
     /tmp/ccz2CSz8.s:4505   .debug_loc:00000000000006f3 .LLST17
     /tmp/ccz2CSz8.s:455    .text:00000000000001a4 .LBB78
     /tmp/ccz2CSz8.s:469    .text:00000000000001ac .LBE78
     /tmp/ccz2CSz8.s:4512   .debug_loc:0000000000000716 .LLST18
     /tmp/ccz2CSz8.s:440    .text:00000000000001a0 .LVL25
     /tmp/ccz2CSz8.s:4519   .debug_loc:0000000000000739 .LLST7
     /tmp/ccz2CSz8.s:4534   .debug_loc:0000000000000782 .LLST8
     /tmp/ccz2CSz8.s:167    .text:00000000000000ac .LBB46
     /tmp/ccz2CSz8.s:182    .text:00000000000000b8 .LBE46
     /tmp/ccz2CSz8.s:187    .text:00000000000000bc .LBB48
     /tmp/ccz2CSz8.s:203    .text:00000000000000c8 .LBE48
     /tmp/ccz2CSz8.s:502    .text:00000000000001d0 .LBB50
     /tmp/ccz2CSz8.s:513    .text:00000000000001d4 .LBE50
     /tmp/ccz2CSz8.s:4549   .debug_loc:00000000000007cb .LLST9
     /tmp/ccz2CSz8.s:515    .text:00000000000001d4 .LBB52
     /tmp/ccz2CSz8.s:527    .text:00000000000001d8 .LBE52
     /tmp/ccz2CSz8.s:4556   .debug_loc:00000000000007ee .LLST10
     /tmp/ccz2CSz8.s:498    .text:00000000000001d0 .LVL31
     /tmp/ccz2CSz8.s:557    .text:00000000000001f8 .LVL35
     /tmp/ccz2CSz8.s:566    .text:0000000000000204 .LVL37
     /tmp/ccz2CSz8.s:575    .text:0000000000000210 .LVL39
     /tmp/ccz2CSz8.s:584    .text:000000000000021c .LVL41
     /tmp/ccz2CSz8.s:595    .text:000000000000022c .LVL44
     /tmp/ccz2CSz8.s:604    .text:0000000000000238 .LVL46
     /tmp/ccz2CSz8.s:613    .text:0000000000000244 .LVL48
     /tmp/ccz2CSz8.s:622    .text:0000000000000250 .LVL50
     /tmp/ccz2CSz8.s:631    .text:000000000000025c .LVL52
     /tmp/ccz2CSz8.s:640    .text:0000000000000268 .LVL54
     /tmp/ccz2CSz8.s:654    .text:0000000000000284 .LVL58
     /tmp/ccz2CSz8.s:663    .text:0000000000000290 .LVL60
     /tmp/ccz2CSz8.s:674    .text:00000000000002a0 .LVL63
     /tmp/ccz2CSz8.s:122    .text:0000000000000074 .LBB40
     /tmp/ccz2CSz8.s:138    .text:0000000000000080 .LBE40
     /tmp/ccz2CSz8.s:294    .text:00000000000000ec .LBB60
     /tmp/ccz2CSz8.s:306    .text:00000000000000f4 .LBE60
     /tmp/ccz2CSz8.s:4563   .debug_loc:0000000000000811 .LLST11
     /tmp/ccz2CSz8.s:309    .text:00000000000000f4 .LBB63
     /tmp/ccz2CSz8.s:317    .text:0000000000000100 .LBE63
     /tmp/ccz2CSz8.s:385    .text:000000000000016c .LBB69
     /tmp/ccz2CSz8.s:393    .text:0000000000000170 .LBE69
     /tmp/ccz2CSz8.s:4571   .debug_loc:0000000000000835 .LLST14
     /tmp/ccz2CSz8.s:488    .text:00000000000001c4 .LVL29
     /tmp/ccz2CSz8.s:686    .text:00000000000002b4 .LVL66
     /tmp/ccz2CSz8.s:10     .text:0000000000000000 .LFB34
     /tmp/ccz2CSz8.s:67     .text:0000000000000048 .LFE34
     /tmp/ccz2CSz8.s:32     .text:000000000000002c .LBB38
     /tmp/ccz2CSz8.s:46     .text:0000000000000034 .LBE38
     /tmp/ccz2CSz8.s:4578   .debug_loc:0000000000000858 .LLST0
     /tmp/ccz2CSz8.s:4746   .debug_str:00000000000003b1 .LASF253
GAS LISTING /tmp/ccz2CSz8.s 			page 33


     /tmp/ccz2CSz8.s:5064   .debug_str:0000000000000d2e .LASF244
     /tmp/ccz2CSz8.s:4758   .debug_str:0000000000000403 .LASF245
     /tmp/ccz2CSz8.s:4620   .debug_str:0000000000000005 .LASF246
     /tmp/ccz2CSz8.s:4898   .debug_str:00000000000007b3 .LASF247
     /tmp/ccz2CSz8.s:95     .text:0000000000000064 .LVL2
     /tmp/ccz2CSz8.s:208    .text:00000000000000d4 .LVL11
     /tmp/ccz2CSz8.s:287    .text:00000000000000ec .LVL13
     /tmp/ccz2CSz8.s:328    .text:0000000000000110 .LVL15
     /tmp/ccz2CSz8.s:479    .text:00000000000001bc .LVL28
     /tmp/ccz2CSz8.s:677    .text:00000000000002a4 .LVL64
     /tmp/ccz2CSz8.s:101    .text:0000000000000068 .LVL3
     /tmp/ccz2CSz8.s:490    .text:00000000000001c8 .LVL30
     /tmp/ccz2CSz8.s:546    .text:00000000000001f0 .LVL34
     /tmp/ccz2CSz8.s:560    .text:00000000000001fc .LVL36
     /tmp/ccz2CSz8.s:569    .text:0000000000000208 .LVL38
     /tmp/ccz2CSz8.s:578    .text:0000000000000214 .LVL40
     /tmp/ccz2CSz8.s:587    .text:0000000000000220 .LVL42
     /tmp/ccz2CSz8.s:598    .text:0000000000000230 .LVL45
     /tmp/ccz2CSz8.s:607    .text:000000000000023c .LVL47
     /tmp/ccz2CSz8.s:616    .text:0000000000000248 .LVL49
     /tmp/ccz2CSz8.s:625    .text:0000000000000254 .LVL51
     /tmp/ccz2CSz8.s:634    .text:0000000000000260 .LVL53
     /tmp/ccz2CSz8.s:643    .text:000000000000026c .LVL55
     /tmp/ccz2CSz8.s:652    .text:000000000000027c .LVL57
     /tmp/ccz2CSz8.s:657    .text:0000000000000288 .LVL59
     /tmp/ccz2CSz8.s:666    .text:0000000000000294 .LVL61
     /tmp/ccz2CSz8.s:672    .text:0000000000000298 .LVL62
     /tmp/ccz2CSz8.s:683    .text:00000000000002a8 .LVL65
     /tmp/ccz2CSz8.s:107    .text:000000000000006c .LVL4
     /tmp/ccz2CSz8.s:593    .text:0000000000000224 .LVL43
     /tmp/ccz2CSz8.s:649    .text:0000000000000270 .LVL56
     /tmp/ccz2CSz8.s:113    .text:0000000000000070 .LVL5
     /tmp/ccz2CSz8.s:119    .text:0000000000000074 .LVL6
     /tmp/ccz2CSz8.s:136    .text:0000000000000080 .LVL7
     /tmp/ccz2CSz8.s:161    .text:00000000000000a4 .LVL8
     /tmp/ccz2CSz8.s:210    .text:00000000000000dc .LVL12
     /tmp/ccz2CSz8.s:355    .text:0000000000000134 .LVL18
     /tmp/ccz2CSz8.s:361    .text:000000000000013c .LVL19
     /tmp/ccz2CSz8.s:369    .text:000000000000014c .LVL20
     /tmp/ccz2CSz8.s:466    .text:00000000000001ac .LVL27
     /tmp/ccz2CSz8.s:350    .text:0000000000000130 .LVL17
     /tmp/ccz2CSz8.s:412    .text:0000000000000180 .LVL23
     /tmp/ccz2CSz8.s:430    .text:000000000000018c .LVL24
     /tmp/ccz2CSz8.s:450    .text:00000000000001a4 .LVL26
     /tmp/ccz2CSz8.s:185    .text:00000000000000bc .LVL9
     /tmp/ccz2CSz8.s:523    .text:00000000000001d8 .LVL33
     /tmp/ccz2CSz8.s:201    .text:00000000000000c8 .LVL10
     /tmp/ccz2CSz8.s:510    .text:00000000000001d4 .LVL32
     /tmp/ccz2CSz8.s:303    .text:00000000000000f4 .LVL14
     /tmp/ccz2CSz8.s:384    .text:000000000000016c .LVL21
     /tmp/ccz2CSz8.s:391    .text:0000000000000170 .LVL22
     /tmp/ccz2CSz8.s:31     .text:000000000000002c .LVL0
     /tmp/ccz2CSz8.s:42     .text:0000000000000034 .LVL1
     /tmp/ccz2CSz8.s:705    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccz2CSz8.s:165    .text:00000000000000ac .LBB45
     /tmp/ccz2CSz8.s:289    .text:00000000000000ec .LBE45
     /tmp/ccz2CSz8.s:493    .text:00000000000001c8 .LBB54
GAS LISTING /tmp/ccz2CSz8.s 			page 34


     /tmp/ccz2CSz8.s:528    .text:00000000000001d8 .LBE54
     /tmp/ccz2CSz8.s:552    .text:00000000000001f0 .LBB55
     /tmp/ccz2CSz8.s:679    .text:00000000000002a4 .LBE55
     /tmp/ccz2CSz8.s:320    .text:0000000000000104 .LBB65
     /tmp/ccz2CSz8.s:371    .text:000000000000014c .LBE65
     /tmp/ccz2CSz8.s:473    .text:00000000000001ac .LBB67
     /tmp/ccz2CSz8.s:481    .text:00000000000001bc .LBE67

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_Z14handleNewCharsPv
_ZN9Scheduler12first_sleepyE
_ZN9Scheduler3putEP3TCB
_ZN3TCB16time_slice_countE
_ZN3TCB8dispatchEv
_ZN9Scheduler11last_sleepyE
console_handler
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPKv
_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_
_ZN3TCB11_threadExitEv
_ZN3Sem4openEPPS_j
_ZN3Sem7s_closeEPS_
_ZN3Sem4waitEPS_
_ZN3Sem6signalEPS_
_ZN3Sem9timedWaitEPS_m
_ZN3Sem7trywaitEPS_
_ZN9Scheduler12put_to_sleepEP3TCBm
_ZN9myConsole4getcEv
_ZN9myConsole4putcEc
_Z12printIntegerm
