GAS LISTING /tmp/ccYWzPAt.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5RISCV10popSppSpieEv
   9              	_ZN5RISCV10popSppSpieEv:
  10              	.LFB17:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../lib/console.h"
   3:src/riscv.cpp **** #include "../h/riscv.hpp"
   4:src/riscv.cpp **** #include "../h/syscall_c.h"
   5:src/riscv.cpp **** #include "../h/Memoryallocator.hpp"
   6:src/riscv.cpp **** #include "../h/thread.hpp"
   7:src/riscv.cpp **** 
   8:src/riscv.cpp **** // not inline ( ra reg )
   9:src/riscv.cpp **** // first time running a thread, sepc inside of wrapper
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void RISCV::popSppSpie() {
  12              		.loc 1 11 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 12 5
  21              		.loc 1 12 39 is_stmt 0
  22              	#APP
  23              	# 12 "src/riscv.cpp" 1
  13              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 13 5 is_stmt 1
  27              		.loc 1 13 30 is_stmt 0
  28              	# 13 "src/riscv.cpp" 1
  14              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 14 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE17:
  42              		.align	2
  43              		.globl	_ZN5RISCV15supervisor_trapEv
  45              	_ZN5RISCV15supervisor_trapEv:
  46              	.LFB18:
GAS LISTING /tmp/ccYWzPAt.s 			page 2


  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void RISCV::supervisor_trap() {
  47              		.loc 1 16 31 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FB 		addi	sp,sp,-80
  50              		.cfi_def_cfa_offset 80
  51 0024 23341104 		sd	ra,72(sp)
  52 0028 23308104 		sd	s0,64(sp)
  53 002c 233C9102 		sd	s1,56(sp)
  54 0030 23382103 		sd	s2,48(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040105 		addi	s0,sp,80
  60              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp ****     uint64 op, a1, a2, a3, a4;
  61              		.loc 1 17 5
  18:src/riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(op));
  62              		.loc 1 18 5
  63              		.loc 1 18 45 is_stmt 0
  64              	#APP
  65              	# 18 "src/riscv.cpp" 1
  19              	    __asm__ volatile("mv %0, a1" : "=r"(a1));
  66              		mv a6, a0
  67              	# 0 "" 2
  68              	.LVL0:
  69              		.loc 1 19 5 is_stmt 1
  70              		.loc 1 19 45 is_stmt 0
  71              	# 19 "src/riscv.cpp" 1
  20              	    __asm__ volatile("mv %0, a2" : "=r"(a2));
  72              		mv a0, a1
  73              	# 0 "" 2
  74              	.LVL1:
  75              		.loc 1 20 5 is_stmt 1
  76              		.loc 1 20 45 is_stmt 0
  77              	# 20 "src/riscv.cpp" 1
  21              	    __asm__ volatile("mv %0, a3" : "=r"(a3));
  78              		mv a1, a2
  79              	# 0 "" 2
  80              	.LVL2:
  81              		.loc 1 21 5 is_stmt 1
  82              		.loc 1 21 45 is_stmt 0
  83              	# 21 "src/riscv.cpp" 1
  22              	    __asm__ volatile("mv %0, a4" : "=r"(a4));
  84              		mv a2, a3
  85              	# 0 "" 2
  86              	.LVL3:
  87              		.loc 1 22 5 is_stmt 1
  88              		.loc 1 22 45 is_stmt 0
  89              	# 22 "src/riscv.cpp" 1
  23              	
  90              		mv a3, a4
  91              	# 0 "" 2
  92              	.LVL4:
  24:src/riscv.cpp ****     uint64 scause = rd_scause();
  93              		.loc 1 24 5 is_stmt 1
GAS LISTING /tmp/ccYWzPAt.s 			page 3


  94              	#NO_APP
  95              	.LBB31:
  96              	.LBB32:
  97              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 4/7/24.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class RISCV {
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     enum causes {
  14:src/../h/riscv.hpp ****         SOFTWARE = 0x800000000000001UL,
  15:src/../h/riscv.hpp ****         EXTERNAL = 0x800000000000009UL,
  16:src/../h/riscv.hpp ****         U_ECALL  = 0x000000000000008UL,
  17:src/../h/riscv.hpp ****         S_ECALL  = 0x000000000000009UL
  18:src/../h/riscv.hpp ****     };
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static void supervisor_trap();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     static void push_regs();
  23:src/../h/riscv.hpp ****     static void pop_regs();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     static void handle_interrupt();
  26:src/../h/riscv.hpp ****     static void handle_trap();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     static uint64 rd_scause();
  29:src/../h/riscv.hpp ****     static void wr_scause(uint64 scause);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     static uint64 rd_sepc();
  32:src/../h/riscv.hpp ****     static void wr_sepc(uint64 sepc);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     static uint64 rd_stvec();
  35:src/../h/riscv.hpp ****     static void wr_stvec(uint64 stvec);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     static uint64 rd_stval();
  38:src/../h/riscv.hpp ****     static void wr_stval(uint64 stval);
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     static uint64 rd_sip();
  41:src/../h/riscv.hpp ****     static void wr_sip(uint64 sip);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     static uint64 rd_sstatus();
  44:src/../h/riscv.hpp ****     static void wr_sstatus(uint64 sstatus);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static inline void mask_sip(uint64 mask) {
  47:src/../h/riscv.hpp ****         __asm__ volatile("csrc sip, %0" : : "r"(mask));
  48:src/../h/riscv.hpp ****     }
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     static void popSppSpie();
  51:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits
  52:src/../h/riscv.hpp ****     // must be in cpp !!!
  53:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccYWzPAt.s 			page 4


  54:src/../h/riscv.hpp ****     enum mask_sstatus {
  55:src/../h/riscv.hpp ****         SIE = (1 << 1),
  56:src/../h/riscv.hpp ****         SPIE =(1 << 5),
  57:src/../h/riscv.hpp ****         SSP = (1 << 8)
  58:src/../h/riscv.hpp ****     };
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum mask_sip_sie {
  61:src/../h/riscv.hpp ****         SS = (1 << 1),
  62:src/../h/riscv.hpp ****         SE = (1 << 9)
  63:src/../h/riscv.hpp ****     };
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp **** };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp **** inline uint64 RISCV::rd_scause() {
  68:src/../h/riscv.hpp ****     uint64 volatile value;
  98              		.loc 2 68 5
  69:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
  99              		.loc 2 69 5
 100              		.loc 2 69 55 is_stmt 0
 101              	#APP
 102              	# 69 "src/../h/riscv.hpp" 1
  70              	    return value;
 103              		csrr a5, scause
 104              	# 0 "" 2
 105              	#NO_APP
 106 0050 233CF4FA 		sd	a5,-72(s0)
 107              		.loc 2 70 5 is_stmt 1
 108              		.loc 2 70 12 is_stmt 0
 109 0054 033784FB 		ld	a4,-72(s0)
 110              	.LVL5:
 111              	.LBE32:
 112              	.LBE31:
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****     if (scause == SOFTWARE) {
 113              		.loc 1 26 5 is_stmt 1
 114              	.LBB33:
 115 0058 93071000 		li	a5,1
 116 005c 9397B703 		slli	a5,a5,59
 117 0060 93871700 		addi	a5,a5,1
 118 0064 6302F706 		beq	a4,a5,.L15
 119              	.LBE33:
  27:src/riscv.cpp ****         // software interrupt - timer
  28:src/riscv.cpp ****         TCB::time_slice_count ++;
  29:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
  30:src/riscv.cpp ****         {
  31:src/riscv.cpp ****             uint64 sepc = rd_sepc();
  32:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
  33:src/riscv.cpp **** 
  34:src/riscv.cpp ****             TCB::time_slice_count = 0; // new running thread
  35:src/riscv.cpp ****             TCB::dispatch();
  36:src/riscv.cpp **** 
  37:src/riscv.cpp ****             wr_sstatus(sstatus);
  38:src/riscv.cpp ****             wr_sepc(sepc);
  39:src/riscv.cpp **** 
  40:src/riscv.cpp ****             // first time running thread -> context not saved
  41:src/riscv.cpp ****             // next instruction: inside of wrapper function
  42:src/riscv.cpp ****         }
GAS LISTING /tmp/ccYWzPAt.s 			page 5


  43:src/riscv.cpp ****         mask_sip(mask_sip_sie::SS);
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****     } else if (scause == EXTERNAL) {
 120              		.loc 1 45 12
 121              	.LBB69:
 122              	.LBB34:
 123 0068 93071000 		li	a5,1
 124 006c 9397B703 		slli	a5,a5,59
 125 0070 93879700 		addi	a5,a5,9
 126 0074 630AF70C 		beq	a4,a5,.L16
 127              	.LBE34:
 128              	.LBE69:
  46:src/riscv.cpp ****         // external interrupt - console
  47:src/riscv.cpp ****         console_handler();
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****         // plus INVALID INTERRUPT
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****     } else if (scause == U_ECALL || scause == S_ECALL){
 129              		.loc 1 51 12
 130              	.LBB70:
 131              	.LBB49:
 132              	.LBB35:
 133              		.loc 1 51 34 is_stmt 0
 134 0078 130787FF 		addi	a4,a4,-8
 135              	.LVL6:
 136              		.loc 1 51 12
 137 007c 93071000 		li	a5,1
 138 0080 63ECE706 		bgtu	a4,a5,.L3
 139              	.LBB36:
  52:src/riscv.cpp ****         // environment call from user / supervisor mode
  53:src/riscv.cpp **** 
  54:src/riscv.cpp **** //        TCB::time_slice_count = 0; // new running thread
  55:src/riscv.cpp **** //        TCB::dispatch();
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****         uint64 sepc = rd_sepc() + 4;
 140              		.loc 1 57 9 is_stmt 1
 141              	.LBB37:
 142              	.LBB38:
  71:src/../h/riscv.hpp **** }
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** inline void RISCV::wr_scause(uint64 value) {
  74:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  75:src/../h/riscv.hpp **** }
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sepc() {
  78:src/../h/riscv.hpp ****     uint64 volatile value;
 143              		.loc 2 78 5
  79:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 144              		.loc 2 79 5
 145              		.loc 2 79 53 is_stmt 0
 146              	#APP
 147              	# 79 "src/../h/riscv.hpp" 1
  80              	    return value;
 148              		csrr a5, sepc
 149              	# 0 "" 2
 150              	#NO_APP
 151 0088 233CF4FC 		sd	a5,-40(s0)
GAS LISTING /tmp/ccYWzPAt.s 			page 6


 152              		.loc 2 80 5 is_stmt 1
 153              		.loc 2 80 12 is_stmt 0
 154 008c 833484FD 		ld	s1,-40(s0)
 155              	.LBE38:
 156              	.LBE37:
 157              		.loc 1 57 35
 158 0090 93844400 		addi	s1,s1,4
 159              	.LVL7:
  58:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
 160              		.loc 1 58 9 is_stmt 1
 161              	.LBB39:
 162              	.LBB40:
  81:src/../h/riscv.hpp **** }
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** inline void RISCV::wr_sepc(uint64 value) {
  84:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  85:src/../h/riscv.hpp **** }
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stvec() {
  88:src/../h/riscv.hpp ****     uint64 volatile value;
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
  90:src/../h/riscv.hpp ****     return value;
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline void RISCV::wr_stvec(uint64 value) {
  94:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stval() {
  98:src/../h/riscv.hpp ****     uint64 volatile value;
  99:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stval" : "=r"(value));
 100:src/../h/riscv.hpp ****     return value;
 101:src/../h/riscv.hpp **** }
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline void RISCV::wr_stval(uint64 value) {
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %0" : : "r"(value));
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sip() {
 108:src/../h/riscv.hpp ****     uint64 volatile value;
 109:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
 110:src/../h/riscv.hpp ****     return value;
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline void RISCV::wr_sip(uint64 value) {
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sstatus() {
 118:src/../h/riscv.hpp ****     uint64 volatile value;
 163              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 164              		.loc 2 119 5
 165              		.loc 2 119 56 is_stmt 0
 166              	#APP
 167              	# 119 "src/../h/riscv.hpp" 1
 120              	    return value;
GAS LISTING /tmp/ccYWzPAt.s 			page 7


 168              		csrr a5, sstatus
 169              	# 0 "" 2
 170              	#NO_APP
 171 0098 2338F4FC 		sd	a5,-48(s0)
 172              		.loc 2 120 5 is_stmt 1
 173              		.loc 2 120 12 is_stmt 0
 174 009c 033904FD 		ld	s2,-48(s0)
 175              	.LVL8:
 176              	.LBE40:
 177              	.LBE39:
  59:src/riscv.cpp **** 
  60:src/riscv.cpp ****         switch (op) {
 178              		.loc 1 60 9 is_stmt 1
 179 00a0 93071001 		li	a5,17
 180 00a4 630CF80C 		beq	a6,a5,.L8
 181 00a8 63E6070B 		bgtu	a6,a5,.L9
 182 00ac 93071000 		li	a5,1
 183 00b0 630CF80A 		beq	a6,a5,.L10
 184 00b4 93072000 		li	a5,2
 185 00b8 631CF80A 		bne	a6,a5,.L12
  61:src/riscv.cpp ****             case MEM_ALLOC:
  62:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
  63:src/riscv.cpp ****                 break;
  64:src/riscv.cpp ****             case MEM_FREE:
 186              		.loc 1 64 13
  65:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 187              		.loc 1 65 17
 188              		.loc 1 65 42 is_stmt 0
 189 00bc 97000000 		call	_ZN15MemoryAllocator8mem_freeEPKv@plt
 189      E7800000 
 190              	.LVL9:
  66:src/riscv.cpp ****                 break;
 191              		.loc 1 66 17 is_stmt 1
 192 00c4 6F00C00A 		j	.L12
 193              	.LVL10:
 194              	.L15:
 195              	.LBE36:
 196              	.LBE35:
 197              	.LBE49:
 198              	.LBB50:
  28:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 199              		.loc 1 28 9
  28:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 200              		.loc 1 28 31 is_stmt 0
 201 00c8 17070000 		la	a4,_ZN3TCB16time_slice_countE
 201      03370700 
 202              	.LVL11:
 203 00d0 83370700 		ld	a5,0(a4)
 204 00d4 93871700 		addi	a5,a5,1
 205 00d8 2330F700 		sd	a5,0(a4)
  29:src/riscv.cpp ****         {
 206              		.loc 1 29 9 is_stmt 1
 207              	.LBB51:
  29:src/riscv.cpp ****         {
 208              		.loc 1 29 64 is_stmt 0
 209 00dc 17070000 		la	a4,_ZN3TCB7runningE
 209      03370700 
GAS LISTING /tmp/ccYWzPAt.s 			page 8


 210 00e4 03370700 		ld	a4,0(a4)
 211              	.LVL12:
 212              	.LBB52:
 213              	.LBB53:
 214              		.file 3 "src/../h/thread.hpp"
   1:src/../h/thread.hpp **** //
   2:src/../h/thread.hpp **** // Created by os on 4/9/24.
   3:src/../h/thread.hpp **** //
   4:src/../h/thread.hpp **** 
   5:src/../h/thread.hpp **** #ifndef PROJECT_BASE_THREAD_HPP
   6:src/../h/thread.hpp **** #define PROJECT_BASE_THREAD_HPP
   7:src/../h/thread.hpp **** 
   8:src/../h/thread.hpp **** #include "../lib/hw.h"
   9:src/../h/thread.hpp **** #include "../h/Memoryallocator.hpp"
  10:src/../h/thread.hpp **** #include "../h/riscv.hpp"
  11:src/../h/thread.hpp **** 
  12:src/../h/thread.hpp **** using routine_ptr = void(*)(void *);
  13:src/../h/thread.hpp **** 
  14:src/../h/thread.hpp **** // _thread je wrapper ove klase
  15:src/../h/thread.hpp **** class TCB final {
  16:src/../h/thread.hpp **** 
  17:src/../h/thread.hpp **** friend class RISCV;
  18:src/../h/thread.hpp **** 
  19:src/../h/thread.hpp **** public:
  20:src/../h/thread.hpp **** 
  21:src/../h/thread.hpp ****     enum state {
  22:src/../h/thread.hpp ****         RUNNABLE,
  23:src/../h/thread.hpp ****         SLEEPING,
  24:src/../h/thread.hpp ****         JOINED,
  25:src/../h/thread.hpp ****         FINISHED,
  26:src/../h/thread.hpp ****         BLOCKED
  27:src/../h/thread.hpp ****     };
  28:src/../h/thread.hpp **** 
  29:src/../h/thread.hpp ****      struct Context {
  30:src/../h/thread.hpp ****         // nadogradi kasnije
  31:src/../h/thread.hpp ****         uint64 pc;
  32:src/../h/thread.hpp ****         uint64 sp;
  33:src/../h/thread.hpp ****     };
  34:src/../h/thread.hpp **** 
  35:src/../h/thread.hpp ****      void start();
  36:src/../h/thread.hpp **** 
  37:src/../h/thread.hpp ****     static int _threadCreate(TCB** handle, routine_ptr routine, void* args, void* stack_space);
  38:src/../h/thread.hpp **** 
  39:src/../h/thread.hpp ****     static void yield(TCB*, TCB*);
  40:src/../h/thread.hpp **** 
  41:src/../h/thread.hpp ****     static void dispatch();
  42:src/../h/thread.hpp **** 
  43:src/../h/thread.hpp ****     static TCB* running; // tekuca nit
  44:src/../h/thread.hpp ****     state getState() {return current_state;}
  45:src/../h/thread.hpp ****     time_t getTimeSlice() const {return time_slice;}
 215              		.loc 3 45 34 is_stmt 1
 216              		.loc 3 45 41 is_stmt 0
 217 00e8 03370702 		ld	a4,32(a4)
 218              	.LVL13:
 219              	.LBE53:
 220              	.LBE52:
  29:src/riscv.cpp ****         {
GAS LISTING /tmp/ccYWzPAt.s 			page 9


 221              		.loc 1 29 9
 222 00ec 63F2E702 		bgeu	a5,a4,.L17
 223              	.LVL14:
 224              	.L5:
 225              	.LBE51:
  43:src/riscv.cpp **** 
 226              		.loc 1 43 9 is_stmt 1
 227              	.LBB63:
 228              	.LBB64:
  47:src/../h/riscv.hpp ****     }
 229              		.loc 2 47 9
  47:src/../h/riscv.hpp ****     }
 230              		.loc 2 47 55 is_stmt 0
 231 00f0 93072000 		li	a5,2
 232              	#APP
 233              	# 47 "src/../h/riscv.hpp" 1
 234              		csrc sip, a5
 235              	# 0 "" 2
 236              	.LVL15:
 237              	#NO_APP
 238              	.L3:
 239              	.LBE64:
 240              	.LBE63:
 241              	.LBE50:
 242              	.LBE70:
  67:src/riscv.cpp ****             case THREAD_CREATE:
  68:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
  69:src/riscv.cpp ****                 break;
  70:src/riscv.cpp ****             case THREAD_EXIT:
  71:src/riscv.cpp ****                 break;
  72:src/riscv.cpp ****             case THREAD_DISPATCH:
  73:src/riscv.cpp ****                 TCB::dispatch();
  74:src/riscv.cpp ****                 break;
  75:src/riscv.cpp ****             case THREAD_CREATE_ONLY:
  76:src/riscv.cpp ****                 // ...
  77:src/riscv.cpp ****                 break;
  78:src/riscv.cpp ****             case THREAD_START:
  79:src/riscv.cpp ****                 // ...
  80:src/riscv.cpp ****                 break;
  81:src/riscv.cpp ****             case SEM_OPEN:
  82:src/riscv.cpp ****                 // ...
  83:src/riscv.cpp ****                 break;
  84:src/riscv.cpp ****             case SEM_CLOSE:
  85:src/riscv.cpp ****                 // ...
  86:src/riscv.cpp ****                 break;
  87:src/riscv.cpp ****             case SEM_WAIT:
  88:src/riscv.cpp ****                 // ...
  89:src/riscv.cpp ****                 break;
  90:src/riscv.cpp ****             case SEM_SIGNAL:
  91:src/riscv.cpp ****                 // ...
  92:src/riscv.cpp ****                 break;
  93:src/riscv.cpp ****             case GETC:
  94:src/riscv.cpp ****                 // ...
  95:src/riscv.cpp ****                 break;
  96:src/riscv.cpp ****             case PUTC:
  97:src/riscv.cpp ****                 // ...
  98:src/riscv.cpp ****                 break;
GAS LISTING /tmp/ccYWzPAt.s 			page 10


  99:src/riscv.cpp ****         }
 100:src/riscv.cpp **** 
 101:src/riscv.cpp ****         wr_sepc(sepc);
 102:src/riscv.cpp ****         wr_sstatus(sstatus);
 103:src/riscv.cpp **** 
 104:src/riscv.cpp ****     }
 105:src/riscv.cpp **** }
 243              		.loc 1 105 1
 244 00f8 83308104 		ld	ra,72(sp)
 245              		.cfi_remember_state
 246              		.cfi_restore 1
 247 00fc 03340104 		ld	s0,64(sp)
 248              		.cfi_restore 8
 249              		.cfi_def_cfa 2, 80
 250 0100 83348103 		ld	s1,56(sp)
 251              		.cfi_restore 9
 252 0104 03390103 		ld	s2,48(sp)
 253              		.cfi_restore 18
 254 0108 13010105 		addi	sp,sp,80
 255              		.cfi_def_cfa_offset 0
 256 010c 67800000 		jr	ra
 257              	.LVL16:
 258              	.L17:
 259              		.cfi_restore_state
 260              	.LBB71:
 261              	.LBB66:
 262              	.LBB65:
 263              	.LBB54:
  31:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
 264              		.loc 1 31 13 is_stmt 1
 265              	.LBB55:
 266              	.LBB56:
  78:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 267              		.loc 2 78 5
  79:src/../h/riscv.hpp ****     return value;
 268              		.loc 2 79 5
  79:src/../h/riscv.hpp ****     return value;
 269              		.loc 2 79 53 is_stmt 0
 270              	#APP
 271              	# 79 "src/../h/riscv.hpp" 1
 272              		csrr a5, sepc
 273              	# 0 "" 2
 274              	#NO_APP
 275 0114 2334F4FC 		sd	a5,-56(s0)
  80:src/../h/riscv.hpp **** }
 276              		.loc 2 80 5 is_stmt 1
  80:src/../h/riscv.hpp **** }
 277              		.loc 2 80 12 is_stmt 0
 278 0118 833484FC 		ld	s1,-56(s0)
 279              	.LVL17:
 280              	.LBE56:
 281              	.LBE55:
  32:src/riscv.cpp **** 
 282              		.loc 1 32 13 is_stmt 1
 283              	.LBB57:
 284              	.LBB58:
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
GAS LISTING /tmp/ccYWzPAt.s 			page 11


 285              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     return value;
 286              		.loc 2 119 5
 119:src/../h/riscv.hpp ****     return value;
 287              		.loc 2 119 56 is_stmt 0
 288              	#APP
 289              	# 119 "src/../h/riscv.hpp" 1
 290              		csrr a5, sstatus
 291              	# 0 "" 2
 292              	#NO_APP
 293 0120 2330F4FC 		sd	a5,-64(s0)
 294              		.loc 2 120 5 is_stmt 1
 295              		.loc 2 120 12 is_stmt 0
 296 0124 033904FC 		ld	s2,-64(s0)
 297              	.LVL18:
 298              	.LBE58:
 299              	.LBE57:
  34:src/riscv.cpp ****             TCB::dispatch();
 300              		.loc 1 34 13 is_stmt 1
  34:src/riscv.cpp ****             TCB::dispatch();
 301              		.loc 1 34 35 is_stmt 0
 302 0128 97070000 		la	a5,_ZN3TCB16time_slice_countE
 302      83B70700 
 303 0130 23B00700 		sd	zero,0(a5)
  35:src/riscv.cpp **** 
 304              		.loc 1 35 13 is_stmt 1
  35:src/riscv.cpp **** 
 305              		.loc 1 35 26 is_stmt 0
 306 0134 97000000 		call	_ZN3TCB8dispatchEv@plt
 306      E7800000 
 307              	.LVL19:
  37:src/riscv.cpp ****             wr_sepc(sepc);
 308              		.loc 1 37 13 is_stmt 1
 309              	.LBB59:
 310              	.LBB60:
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline void RISCV::wr_sstatus(uint64 value) {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
 311              		.loc 2 124 5
 312              		.loc 2 124 57 is_stmt 0
 313              	#APP
 314              	# 124 "src/../h/riscv.hpp" 1
 125              	}
 315              		csrw sstatus, s2
 316              	# 0 "" 2
 317              	.LVL20:
 318              	#NO_APP
 319              	.LBE60:
 320              	.LBE59:
  38:src/riscv.cpp **** 
 321              		.loc 1 38 13 is_stmt 1
 322              	.LBB61:
 323              	.LBB62:
  84:src/../h/riscv.hpp **** }
 324              		.loc 2 84 5
  84:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccYWzPAt.s 			page 12


 325              		.loc 2 84 54 is_stmt 0
 326              	#APP
 327              	# 84 "src/../h/riscv.hpp" 1
  85:src/../h/riscv.hpp **** 
 328              		csrw sepc, s1
 329              	# 0 "" 2
 330              		.loc 2 85 1
 331              	#NO_APP
 332 0144 6FF0DFFA 		j	.L5
 333              	.LVL21:
 334              	.L16:
 335              	.LBE62:
 336              	.LBE61:
 337              	.LBE54:
 338              	.LBE65:
 339              	.LBE66:
 340              	.LBB67:
  47:src/riscv.cpp **** 
 341              		.loc 1 47 9 is_stmt 1
  47:src/riscv.cpp **** 
 342              		.loc 1 47 24 is_stmt 0
 343 0148 97000000 		call	console_handler@plt
 343      E7800000 
 344              	.LVL22:
 345 0150 6FF09FFA 		j	.L3
 346              	.LVL23:
 347              	.L9:
 348              	.LBB47:
 349              	.LBB45:
  60:src/riscv.cpp ****             case MEM_ALLOC:
 350              		.loc 1 60 9
 351 0154 93073001 		li	a5,19
 352 0158 631CF800 		bne	a6,a5,.L12
  72:src/riscv.cpp ****                 TCB::dispatch();
 353              		.loc 1 72 13 is_stmt 1
  73:src/riscv.cpp ****                 break;
 354              		.loc 1 73 17
  73:src/riscv.cpp ****                 break;
 355              		.loc 1 73 30 is_stmt 0
 356 015c 97000000 		call	_ZN3TCB8dispatchEv@plt
 356      E7800000 
 357              	.LVL24:
  74:src/riscv.cpp ****             case THREAD_CREATE_ONLY:
 358              		.loc 1 74 17 is_stmt 1
 359 0164 6F00C000 		j	.L12
 360              	.LVL25:
 361              	.L10:
  61:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
 362              		.loc 1 61 13
  62:src/riscv.cpp ****                 break;
 363              		.loc 1 62 17
  62:src/riscv.cpp ****                 break;
 364              		.loc 1 62 43 is_stmt 0
 365 0168 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 365      E7800000 
 366              	.LVL26:
  63:src/riscv.cpp ****             case MEM_FREE:
GAS LISTING /tmp/ccYWzPAt.s 			page 13


 367              		.loc 1 63 17 is_stmt 1
 368              	.L12:
 101:src/riscv.cpp ****         wr_sstatus(sstatus);
 369              		.loc 1 101 9
 370              	.LBB41:
 371              	.LBB42:
  84:src/../h/riscv.hpp **** }
 372              		.loc 2 84 5
  84:src/../h/riscv.hpp **** }
 373              		.loc 2 84 54 is_stmt 0
 374              	#APP
 375              	# 84 "src/../h/riscv.hpp" 1
 376              		csrw sepc, s1
 377              	# 0 "" 2
 378              	.LVL27:
 379              	#NO_APP
 380              	.LBE42:
 381              	.LBE41:
 102:src/riscv.cpp **** 
 382              		.loc 1 102 9 is_stmt 1
 383              	.LBB43:
 384              	.LBB44:
 124:src/../h/riscv.hpp **** }
 385              		.loc 2 124 5
 124:src/../h/riscv.hpp **** }
 386              		.loc 2 124 57 is_stmt 0
 387              	#APP
 388              	# 124 "src/../h/riscv.hpp" 1
 389              		csrw sstatus, s2
 390              	# 0 "" 2
 391              	.LVL28:
 392              	#NO_APP
 393              	.LBE44:
 394              	.LBE43:
 395              	.LBE45:
 396              	.LBE47:
 397              	.LBE67:
 398              	.LBE71:
 399              		.loc 1 105 1
 400 0178 6FF01FF8 		j	.L3
 401              	.LVL29:
 402              	.L8:
 403              	.LBB72:
 404              	.LBB68:
 405              	.LBB48:
 406              	.LBB46:
  67:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 407              		.loc 1 67 13 is_stmt 1
  68:src/riscv.cpp ****                 break;
 408              		.loc 1 68 17
  68:src/riscv.cpp ****                 break;
 409              		.loc 1 68 35 is_stmt 0
 410 017c 97000000 		call	_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_@plt
 410      E7800000 
 411              	.LVL30:
  69:src/riscv.cpp ****             case THREAD_EXIT:
 412              		.loc 1 69 17 is_stmt 1
GAS LISTING /tmp/ccYWzPAt.s 			page 14


 413 0184 6FF0DFFE 		j	.L12
 414              	.LBE46:
 415              	.LBE48:
 416              	.LBE68:
 417              	.LBE72:
 418              		.cfi_endproc
 419              	.LFE18:
 421              	.Letext0:
 422              		.file 4 "src/../lib/hw.h"
 423              		.file 5 "src/../h/Memoryallocator.hpp"
 424              		.file 6 "src/../h/syscall_c.h"
 425              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/ccYWzPAt.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccYWzPAt.s:9      .text:0000000000000000 _ZN5RISCV10popSppSpieEv
     /tmp/ccYWzPAt.s:13     .text:0000000000000000 .L0 
     /tmp/ccYWzPAt.s:14     .text:0000000000000000 .L0 
     /tmp/ccYWzPAt.s:15     .text:0000000000000004 .L0 
     /tmp/ccYWzPAt.s:17     .text:0000000000000008 .L0 
     /tmp/ccYWzPAt.s:19     .text:000000000000000c .L0 
     /tmp/ccYWzPAt.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:12     .text:000000000000000c .L0 
     /tmp/ccYWzPAt.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:13     .text:0000000000000010 .L0 
     /tmp/ccYWzPAt.s:33     .text:0000000000000014 .L0 
     /tmp/ccYWzPAt.s:34     .text:0000000000000018 .L0 
     /tmp/ccYWzPAt.s:35     .text:0000000000000018 .L0 
     /tmp/ccYWzPAt.s:37     .text:000000000000001c .L0 
     /tmp/ccYWzPAt.s:39     .text:0000000000000020 .L0 
     /tmp/ccYWzPAt.s:45     .text:0000000000000020 _ZN5RISCV15supervisor_trapEv
     /tmp/ccYWzPAt.s:48     .text:0000000000000020 .L0 
     /tmp/ccYWzPAt.s:49     .text:0000000000000020 .L0 
     /tmp/ccYWzPAt.s:50     .text:0000000000000024 .L0 
     /tmp/ccYWzPAt.s:55     .text:0000000000000034 .L0 
     /tmp/ccYWzPAt.s:56     .text:0000000000000034 .L0 
     /tmp/ccYWzPAt.s:57     .text:0000000000000034 .L0 
     /tmp/ccYWzPAt.s:58     .text:0000000000000034 .L0 
     /tmp/ccYWzPAt.s:60     .text:0000000000000038 .L0 
     /tmp/ccYWzPAt.s:62     .text:0000000000000038 .L0 
     /tmp/ccYWzPAt.s:63     .text:0000000000000038 .L0 
       src/riscv.cpp:18     .text:0000000000000038 .L0 
     /tmp/ccYWzPAt.s:70     .text:000000000000003c .L0 
       src/riscv.cpp:19     .text:000000000000003c .L0 
     /tmp/ccYWzPAt.s:76     .text:0000000000000040 .L0 
       src/riscv.cpp:20     .text:0000000000000040 .L0 
     /tmp/ccYWzPAt.s:82     .text:0000000000000044 .L0 
       src/riscv.cpp:21     .text:0000000000000044 .L0 
     /tmp/ccYWzPAt.s:88     .text:0000000000000048 .L0 
       src/riscv.cpp:22     .text:0000000000000048 .L0 
     /tmp/ccYWzPAt.s:98     .text:000000000000004c .L0 
     /tmp/ccYWzPAt.s:99     .text:000000000000004c .L0 
     /tmp/ccYWzPAt.s:100    .text:000000000000004c .L0 
  src/../h/riscv.hpp:69     .text:000000000000004c .L0 
     /tmp/ccYWzPAt.s:108    .text:0000000000000054 .L0 
     /tmp/ccYWzPAt.s:109    .text:0000000000000054 .L0 
     /tmp/ccYWzPAt.s:115    .text:0000000000000058 .L0 
     /tmp/ccYWzPAt.s:123    .text:0000000000000068 .L0 
     /tmp/ccYWzPAt.s:133    .text:0000000000000078 .L0 
     /tmp/ccYWzPAt.s:134    .text:0000000000000078 .L0 
     /tmp/ccYWzPAt.s:137    .text:000000000000007c .L0 
     /tmp/ccYWzPAt.s:143    .text:0000000000000084 .L0 
     /tmp/ccYWzPAt.s:144    .text:0000000000000084 .L0 
     /tmp/ccYWzPAt.s:145    .text:0000000000000084 .L0 
  src/../h/riscv.hpp:79     .text:0000000000000084 .L0 
     /tmp/ccYWzPAt.s:153    .text:000000000000008c .L0 
     /tmp/ccYWzPAt.s:154    .text:000000000000008c .L0 
     /tmp/ccYWzPAt.s:158    .text:0000000000000090 .L0 
     /tmp/ccYWzPAt.s:163    .text:0000000000000094 .L0 
     /tmp/ccYWzPAt.s:164    .text:0000000000000094 .L0 
GAS LISTING /tmp/ccYWzPAt.s 			page 16


     /tmp/ccYWzPAt.s:165    .text:0000000000000094 .L0 
  src/../h/riscv.hpp:119    .text:0000000000000094 .L0 
     /tmp/ccYWzPAt.s:173    .text:000000000000009c .L0 
     /tmp/ccYWzPAt.s:174    .text:000000000000009c .L0 
     /tmp/ccYWzPAt.s:179    .text:00000000000000a0 .L0 
     /tmp/ccYWzPAt.s:187    .text:00000000000000bc .L0 
     /tmp/ccYWzPAt.s:188    .text:00000000000000bc .L0 
     /tmp/ccYWzPAt.s:189    .text:00000000000000bc .L0 
     /tmp/ccYWzPAt.s:192    .text:00000000000000c4 .L0 
     /tmp/ccYWzPAt.s:200    .text:00000000000000c8 .L0 
     /tmp/ccYWzPAt.s:201    .text:00000000000000c8 .L0 
     /tmp/ccYWzPAt.s:208    .text:00000000000000dc .L0 
     /tmp/ccYWzPAt.s:209    .text:00000000000000dc .L0 
     /tmp/ccYWzPAt.s:216    .text:00000000000000e8 .L0 
     /tmp/ccYWzPAt.s:217    .text:00000000000000e8 .L0 
     /tmp/ccYWzPAt.s:222    .text:00000000000000ec .L0 
     /tmp/ccYWzPAt.s:229    .text:00000000000000f0 .L0 
     /tmp/ccYWzPAt.s:230    .text:00000000000000f0 .L0 
     /tmp/ccYWzPAt.s:231    .text:00000000000000f0 .L0 
     /tmp/ccYWzPAt.s:244    .text:00000000000000f8 .L0 
     /tmp/ccYWzPAt.s:245    .text:00000000000000fc .L0 
     /tmp/ccYWzPAt.s:246    .text:00000000000000fc .L0 
     /tmp/ccYWzPAt.s:248    .text:0000000000000100 .L0 
     /tmp/ccYWzPAt.s:249    .text:0000000000000100 .L0 
     /tmp/ccYWzPAt.s:251    .text:0000000000000104 .L0 
     /tmp/ccYWzPAt.s:253    .text:0000000000000108 .L0 
     /tmp/ccYWzPAt.s:255    .text:000000000000010c .L0 
     /tmp/ccYWzPAt.s:259    .text:0000000000000110 .L0 
     /tmp/ccYWzPAt.s:267    .text:0000000000000110 .L0 
     /tmp/ccYWzPAt.s:268    .text:0000000000000110 .L0 
     /tmp/ccYWzPAt.s:269    .text:0000000000000110 .L0 
  src/../h/riscv.hpp:79     .text:0000000000000110 .L0 
     /tmp/ccYWzPAt.s:277    .text:0000000000000118 .L0 
     /tmp/ccYWzPAt.s:278    .text:0000000000000118 .L0 
     /tmp/ccYWzPAt.s:285    .text:000000000000011c .L0 
     /tmp/ccYWzPAt.s:286    .text:000000000000011c .L0 
     /tmp/ccYWzPAt.s:287    .text:000000000000011c .L0 
  src/../h/riscv.hpp:119    .text:000000000000011c .L0 
     /tmp/ccYWzPAt.s:295    .text:0000000000000124 .L0 
     /tmp/ccYWzPAt.s:296    .text:0000000000000124 .L0 
     /tmp/ccYWzPAt.s:301    .text:0000000000000128 .L0 
     /tmp/ccYWzPAt.s:302    .text:0000000000000128 .L0 
     /tmp/ccYWzPAt.s:305    .text:0000000000000134 .L0 
     /tmp/ccYWzPAt.s:306    .text:0000000000000134 .L0 
     /tmp/ccYWzPAt.s:311    .text:000000000000013c .L0 
     /tmp/ccYWzPAt.s:312    .text:000000000000013c .L0 
  src/../h/riscv.hpp:124    .text:000000000000013c .L0 
     /tmp/ccYWzPAt.s:324    .text:0000000000000140 .L0 
     /tmp/ccYWzPAt.s:325    .text:0000000000000140 .L0 
  src/../h/riscv.hpp:84     .text:0000000000000140 .L0 
     /tmp/ccYWzPAt.s:332    .text:0000000000000144 .L0 
     /tmp/ccYWzPAt.s:342    .text:0000000000000148 .L0 
     /tmp/ccYWzPAt.s:343    .text:0000000000000148 .L0 
     /tmp/ccYWzPAt.s:351    .text:0000000000000154 .L0 
     /tmp/ccYWzPAt.s:354    .text:000000000000015c .L0 
     /tmp/ccYWzPAt.s:355    .text:000000000000015c .L0 
     /tmp/ccYWzPAt.s:356    .text:000000000000015c .L0 
GAS LISTING /tmp/ccYWzPAt.s 			page 17


     /tmp/ccYWzPAt.s:359    .text:0000000000000164 .L0 
     /tmp/ccYWzPAt.s:363    .text:0000000000000168 .L0 
     /tmp/ccYWzPAt.s:364    .text:0000000000000168 .L0 
     /tmp/ccYWzPAt.s:365    .text:0000000000000168 .L0 
     /tmp/ccYWzPAt.s:369    .text:0000000000000170 .L0 
     /tmp/ccYWzPAt.s:372    .text:0000000000000170 .L0 
     /tmp/ccYWzPAt.s:373    .text:0000000000000170 .L0 
  src/../h/riscv.hpp:84     .text:0000000000000170 .L0 
     /tmp/ccYWzPAt.s:385    .text:0000000000000174 .L0 
     /tmp/ccYWzPAt.s:386    .text:0000000000000174 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000174 .L0 
     /tmp/ccYWzPAt.s:400    .text:0000000000000178 .L0 
     /tmp/ccYWzPAt.s:408    .text:000000000000017c .L0 
     /tmp/ccYWzPAt.s:409    .text:000000000000017c .L0 
     /tmp/ccYWzPAt.s:410    .text:000000000000017c .L0 
     /tmp/ccYWzPAt.s:413    .text:0000000000000184 .L0 
     /tmp/ccYWzPAt.s:418    .text:0000000000000188 .L0 
     /tmp/ccYWzPAt.s:426    .text:0000000000000188 .L0 
     /tmp/ccYWzPAt.s:201    .text:00000000000000c8 .L0 
     /tmp/ccYWzPAt.s:209    .text:00000000000000dc .L0 
     /tmp/ccYWzPAt.s:302    .text:0000000000000128 .L0 
     /tmp/ccYWzPAt.s:194    .text:00000000000000c8 .L15
     /tmp/ccYWzPAt.s:334    .text:0000000000000148 .L16
     /tmp/ccYWzPAt.s:238    .text:00000000000000f8 .L3
     /tmp/ccYWzPAt.s:402    .text:000000000000017c .L8
     /tmp/ccYWzPAt.s:347    .text:0000000000000154 .L9
     /tmp/ccYWzPAt.s:361    .text:0000000000000168 .L10
     /tmp/ccYWzPAt.s:368    .text:0000000000000170 .L12
     /tmp/ccYWzPAt.s:258    .text:0000000000000110 .L17
     /tmp/ccYWzPAt.s:224    .text:00000000000000f0 .L5
     /tmp/ccYWzPAt.s:1705   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccYWzPAt.s:3223   .debug_str:0000000000000772 .LASF148
     /tmp/ccYWzPAt.s:3157   .debug_str:00000000000005a0 .LASF149
     /tmp/ccYWzPAt.s:3051   .debug_str:00000000000002ad .LASF150
     /tmp/ccYWzPAt.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccYWzPAt.s:421    .text:0000000000000188 .Letext0
     /tmp/ccYWzPAt.s:2955   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccYWzPAt.s:3129   .debug_str:00000000000004c1 .LASF0
     /tmp/ccYWzPAt.s:3153   .debug_str:000000000000057a .LASF1
     /tmp/ccYWzPAt.s:3115   .debug_str:000000000000047a .LASF2
     /tmp/ccYWzPAt.s:3073   .debug_str:000000000000036f .LASF4
     /tmp/ccYWzPAt.s:3199   .debug_str:00000000000006c1 .LASF3
     /tmp/ccYWzPAt.s:2991   .debug_str:00000000000000ea .LASF5
     /tmp/ccYWzPAt.s:3027   .debug_str:0000000000000223 .LASF6
     /tmp/ccYWzPAt.s:3155   .debug_str:000000000000058d .LASF7
     /tmp/ccYWzPAt.s:3127   .debug_str:00000000000004ae .LASF8
     /tmp/ccYWzPAt.s:3237   .debug_str:0000000000000899 .LASF9
     /tmp/ccYWzPAt.s:3057   .debug_str:00000000000002e0 .LASF10
     /tmp/ccYWzPAt.s:3167   .debug_str:00000000000005ea .LASF11
     /tmp/ccYWzPAt.s:3225   .debug_str:0000000000000836 .LASF12
     /tmp/ccYWzPAt.s:2995   .debug_str:0000000000000101 .LASF13
     /tmp/ccYWzPAt.s:2967   .debug_str:0000000000000033 .LASF14
     /tmp/ccYWzPAt.s:3011   .debug_str:00000000000001a4 .LASF15
     /tmp/ccYWzPAt.s:3191   .debug_str:0000000000000677 .LASF16
     /tmp/ccYWzPAt.s:3019   .debug_str:00000000000001e1 .LASF17
     /tmp/ccYWzPAt.s:3061   .debug_str:00000000000002f6 .LASF75
     /tmp/ccYWzPAt.s:3145   .debug_str:000000000000052e .LASF22
GAS LISTING /tmp/ccYWzPAt.s 			page 18


     /tmp/ccYWzPAt.s:3197   .debug_str:00000000000006b8 .LASF18
     /tmp/ccYWzPAt.s:2999   .debug_str:000000000000011c .LASF19
     /tmp/ccYWzPAt.s:3093   .debug_str:00000000000003e7 .LASF20
     /tmp/ccYWzPAt.s:3143   .debug_str:0000000000000526 .LASF21
     /tmp/ccYWzPAt.s:2965   .debug_str:0000000000000026 .LASF23
     /tmp/ccYWzPAt.s:2975   .debug_str:000000000000007a .LASF24
     /tmp/ccYWzPAt.s:3193   .debug_str:000000000000068d .LASF26
     /tmp/ccYWzPAt.s:3009   .debug_str:000000000000019a .LASF25
     /tmp/ccYWzPAt.s:3229   .debug_str:000000000000084e .LASF27
     /tmp/ccYWzPAt.s:3035   .debug_str:000000000000025b .LASF28
     /tmp/ccYWzPAt.s:3211   .debug_str:0000000000000704 .LASF29
     /tmp/ccYWzPAt.s:3187   .debug_str:000000000000065b .LASF30
     /tmp/ccYWzPAt.s:3257   .debug_str:0000000000000904 .LASF31
     /tmp/ccYWzPAt.s:3055   .debug_str:00000000000002d4 .LASF32
     /tmp/ccYWzPAt.s:3147   .debug_str:0000000000000535 .LASF33
     /tmp/ccYWzPAt.s:3037   .debug_str:0000000000000264 .LASF34
     /tmp/ccYWzPAt.s:3101   .debug_str:0000000000000416 .LASF36
     /tmp/ccYWzPAt.s:3183   .debug_str:0000000000000648 .LASF38
     /tmp/ccYWzPAt.s:2979   .debug_str:0000000000000093 .LASF40
     /tmp/ccYWzPAt.s:3239   .debug_str:00000000000008a9 .LASF35
     /tmp/ccYWzPAt.s:3149   .debug_str:000000000000054e .LASF37
     /tmp/ccYWzPAt.s:2961   .debug_str:0000000000000013 .LASF39
     /tmp/ccYWzPAt.s:3133   .debug_str:00000000000004e4 .LASF41
     /tmp/ccYWzPAt.s:3205   .debug_str:00000000000006ea .LASF42
     /tmp/ccYWzPAt.s:3109   .debug_str:0000000000000451 .LASF43
     /tmp/ccYWzPAt.s:3233   .debug_str:0000000000000887 .LASF44
     /tmp/ccYWzPAt.s:3095   .debug_str:00000000000003ef .LASF45
     /tmp/ccYWzPAt.s:3123   .debug_str:000000000000049f .LASF46
     /tmp/ccYWzPAt.s:3081   .debug_str:0000000000000395 .LASF47
     /tmp/ccYWzPAt.s:3227   .debug_str:0000000000000845 .LASF48
     /tmp/ccYWzPAt.s:3067   .debug_str:0000000000000327 .LASF49
     /tmp/ccYWzPAt.s:3241   .debug_str:00000000000008b1 .LASF50
     /tmp/ccYWzPAt.s:3171   .debug_str:00000000000005fe .LASF51
     /tmp/ccYWzPAt.s:3207   .debug_str:00000000000006f3 .LASF52
     /tmp/ccYWzPAt.s:3261   .debug_str:0000000000000944 .LASF53
     /tmp/ccYWzPAt.s:3099   .debug_str:000000000000040b .LASF54
     /tmp/ccYWzPAt.s:3217   .debug_str:000000000000073f .LASF55
     /tmp/ccYWzPAt.s:3071   .debug_str:0000000000000364 .LASF56
     /tmp/ccYWzPAt.s:3249   .debug_str:00000000000008d8 .LASF57
     /tmp/ccYWzPAt.s:3053   .debug_str:00000000000002cb .LASF58
     /tmp/ccYWzPAt.s:3271   .debug_str:0000000000000982 .LASF59
     /tmp/ccYWzPAt.s:3189   .debug_str:000000000000066c .LASF60
     /tmp/ccYWzPAt.s:3151   .debug_str:0000000000000562 .LASF61
     /tmp/ccYWzPAt.s:3025   .debug_str:000000000000021d .LASF151
     /tmp/ccYWzPAt.s:3209   .debug_str:00000000000006fa .LASF62
     /tmp/ccYWzPAt.s:3185   .debug_str:0000000000000652 .LASF63
     /tmp/ccYWzPAt.s:3091   .debug_str:00000000000003d9 .LASF64
     /tmp/ccYWzPAt.s:3039   .debug_str:000000000000026e .LASF65
     /tmp/ccYWzPAt.s:3015   .debug_str:00000000000001c0 .LASF66
     /tmp/ccYWzPAt.s:3163   .debug_str:00000000000005c5 .LASF67
     /tmp/ccYWzPAt.s:3173   .debug_str:0000000000000611 .LASF68
     /tmp/ccYWzPAt.s:3235   .debug_str:0000000000000890 .LASF69
     /tmp/ccYWzPAt.s:3089   .debug_str:00000000000003cf .LASF70
     /tmp/ccYWzPAt.s:3045   .debug_str:000000000000028c .LASF71
     /tmp/ccYWzPAt.s:2997   .debug_str:0000000000000111 .LASF72
     /tmp/ccYWzPAt.s:2987   .debug_str:00000000000000cc .LASF73
     /tmp/ccYWzPAt.s:3169   .debug_str:00000000000005f9 .LASF74
GAS LISTING /tmp/ccYWzPAt.s 			page 19


     /tmp/ccYWzPAt.s:3107   .debug_str:0000000000000441 .LASF76
     /tmp/ccYWzPAt.s:3117   .debug_str:0000000000000488 .LASF102
     /tmp/ccYWzPAt.s:3267   .debug_str:0000000000000974 .LASF77
     /tmp/ccYWzPAt.s:3121   .debug_str:000000000000049a .LASF78
     /tmp/ccYWzPAt.s:3215   .debug_str:000000000000073a .LASF79
     /tmp/ccYWzPAt.s:3033   .debug_str:0000000000000242 .LASF80
     /tmp/ccYWzPAt.s:3135   .debug_str:00000000000004f8 .LASF81
     /tmp/ccYWzPAt.s:2985   .debug_str:00000000000000c1 .LASF114
     /tmp/ccYWzPAt.s:3021   .debug_str:00000000000001f7 .LASF116
     /tmp/ccYWzPAt.s:3065   .debug_str:0000000000000319 .LASF82
     /tmp/ccYWzPAt.s:3113   .debug_str:000000000000046c .LASF83
     /tmp/ccYWzPAt.s:3043   .debug_str:0000000000000282 .LASF84
     /tmp/ccYWzPAt.s:3003   .debug_str:000000000000013a .LASF85
     /tmp/ccYWzPAt.s:2983   .debug_str:00000000000000b7 .LASF112
     /tmp/ccYWzPAt.s:3175   .debug_str:000000000000061e .LASF86
     /tmp/ccYWzPAt.s:2969   .debug_str:0000000000000043 .LASF87
     /tmp/ccYWzPAt.s:3203   .debug_str:00000000000006e0 .LASF88
     /tmp/ccYWzPAt.s:3213   .debug_str:0000000000000719 .LASF89
     /tmp/ccYWzPAt.s:3077   .debug_str:000000000000037e .LASF90
     /tmp/ccYWzPAt.s:3259   .debug_str:0000000000000922 .LASF91
     /tmp/ccYWzPAt.s:3125   .debug_str:00000000000004a8 .LASF92
     /tmp/ccYWzPAt.s:3063   .debug_str:00000000000002fc .LASF93
     /tmp/ccYWzPAt.s:3023   .debug_str:0000000000000212 .LASF94
     /tmp/ccYWzPAt.s:2959   .debug_str:0000000000000007 .LASF95
     /tmp/ccYWzPAt.s:3005   .debug_str:000000000000016c .LASF96
     /tmp/ccYWzPAt.s:3181   .debug_str:000000000000063f .LASF97
     /tmp/ccYWzPAt.s:2977   .debug_str:000000000000008a .LASF98
     /tmp/ccYWzPAt.s:3097   .debug_str:0000000000000404 .LASF99
     /tmp/ccYWzPAt.s:3083   .debug_str:00000000000003aa .LASF100
     /tmp/ccYWzPAt.s:3075   .debug_str:0000000000000376 .LASF101
     /tmp/ccYWzPAt.s:3029   .debug_str:000000000000022a .LASF103
     /tmp/ccYWzPAt.s:3111   .debug_str:0000000000000466 .LASF104
     /tmp/ccYWzPAt.s:2993   .debug_str:00000000000000f1 .LASF105
     /tmp/ccYWzPAt.s:3195   .debug_str:00000000000006aa .LASF106
     /tmp/ccYWzPAt.s:3007   .debug_str:0000000000000172 .LASF107
     /tmp/ccYWzPAt.s:3119   .debug_str:0000000000000494 .LASF108
     /tmp/ccYWzPAt.s:3001   .debug_str:0000000000000125 .LASF109
     /tmp/ccYWzPAt.s:3255   .debug_str:00000000000008fb .LASF110
     /tmp/ccYWzPAt.s:3047   .debug_str:0000000000000295 .LASF111
     /tmp/ccYWzPAt.s:3041   .debug_str:000000000000027a .LASF113
     /tmp/ccYWzPAt.s:3087   .debug_str:00000000000003c6 .LASF115
     /tmp/ccYWzPAt.s:3085   .debug_str:00000000000003b3 .LASF117
     /tmp/ccYWzPAt.s:3105   .debug_str:0000000000000434 .LASF118
     /tmp/ccYWzPAt.s:2989   .debug_str:00000000000000d1 .LASF119
     /tmp/ccYWzPAt.s:2973   .debug_str:000000000000006f .LASF120
     /tmp/ccYWzPAt.s:3131   .debug_str:00000000000004ce .LASF121
     /tmp/ccYWzPAt.s:3159   .debug_str:00000000000005ae .LASF122
     /tmp/ccYWzPAt.s:3221   .debug_str:000000000000075c .LASF123
     /tmp/ccYWzPAt.s:2957   .debug_str:0000000000000000 .LASF124
     /tmp/ccYWzPAt.s:3263   .debug_str:0000000000000957 .LASF125
     /tmp/ccYWzPAt.s:3247   .debug_str:00000000000008cb .LASF126
     /tmp/ccYWzPAt.s:3265   .debug_str:0000000000000968 .LASF127
     /tmp/ccYWzPAt.s:3013   .debug_str:00000000000001b0 .LASF128
     /tmp/ccYWzPAt.s:3201   .debug_str:00000000000006d3 .LASF129
     /tmp/ccYWzPAt.s:3269   .debug_str:0000000000000979 .LASF130
     /tmp/ccYWzPAt.s:3017   .debug_str:00000000000001d0 .LASF131
     /tmp/ccYWzPAt.s:2963   .debug_str:000000000000001b .LASF132
GAS LISTING /tmp/ccYWzPAt.s 			page 20


     /tmp/ccYWzPAt.s:3161   .debug_str:00000000000005b9 .LASF133
     /tmp/ccYWzPAt.s:3079   .debug_str:0000000000000387 .LASF134
     /tmp/ccYWzPAt.s:3177   .debug_str:000000000000062b .LASF135
     /tmp/ccYWzPAt.s:3059   .debug_str:00000000000002ee .LASF136
     /tmp/ccYWzPAt.s:3137   .debug_str:0000000000000513 .LASF137
     /tmp/ccYWzPAt.s:3139   .debug_str:0000000000000519 .LASF138
     /tmp/ccYWzPAt.s:3141   .debug_str:000000000000051e .LASF139
     /tmp/ccYWzPAt.s:2981   .debug_str:00000000000000a9 .LASF140
     /tmp/ccYWzPAt.s:3179   .debug_str:0000000000000636 .LASF141
     /tmp/ccYWzPAt.s:3231   .debug_str:0000000000000864 .LASF152
     /tmp/ccYWzPAt.s:3245   .debug_str:00000000000008bd .LASF153
     /tmp/ccYWzPAt.s:3069   .debug_str:000000000000033c .LASF154
     /tmp/ccYWzPAt.s:3273   .debug_str:0000000000000997 .LASF155
     /tmp/ccYWzPAt.s:3165   .debug_str:00000000000005d8 .LASF156
     /tmp/ccYWzPAt.s:3049   .debug_str:00000000000002a8 .LASF142
     /tmp/ccYWzPAt.s:46     .text:0000000000000020 .LFB18
     /tmp/ccYWzPAt.s:419    .text:0000000000000188 .LFE18
     /tmp/ccYWzPAt.s:2659   .debug_loc:0000000000000000 .LLST0
     /tmp/ccYWzPAt.s:2690   .debug_loc:0000000000000095 .LLST1
     /tmp/ccYWzPAt.s:2721   .debug_loc:000000000000012a .LLST2
     /tmp/ccYWzPAt.s:2752   .debug_loc:00000000000001bf .LLST3
     /tmp/ccYWzPAt.s:2783   .debug_loc:0000000000000254 .LLST4
     /tmp/ccYWzPAt.s:2971   .debug_str:0000000000000068 .LASF143
     /tmp/ccYWzPAt.s:2814   .debug_loc:00000000000002e9 .LLST5
     /tmp/ccYWzPAt.s:263    .text:0000000000000110 .LBB54
     /tmp/ccYWzPAt.s:337    .text:0000000000000148 .LBE54
     /tmp/ccYWzPAt.s:3243   .debug_str:00000000000008b8 .LASF144
     /tmp/ccYWzPAt.s:2853   .debug_loc:0000000000000386 .LLST11
     /tmp/ccYWzPAt.s:3103   .debug_str:000000000000042c .LASF145
     /tmp/ccYWzPAt.s:2860   .debug_loc:00000000000003a9 .LLST12
     /tmp/ccYWzPAt.s:265    .text:0000000000000110 .LBB55
     /tmp/ccYWzPAt.s:281    .text:000000000000011c .LBE55
     /tmp/ccYWzPAt.s:283    .text:000000000000011c .LBB57
     /tmp/ccYWzPAt.s:299    .text:0000000000000128 .LBE57
     /tmp/ccYWzPAt.s:309    .text:000000000000013c .LBB59
     /tmp/ccYWzPAt.s:320    .text:0000000000000140 .LBE59
     /tmp/ccYWzPAt.s:2867   .debug_loc:00000000000003cc .LLST13
     /tmp/ccYWzPAt.s:322    .text:0000000000000140 .LBB61
     /tmp/ccYWzPAt.s:336    .text:0000000000000148 .LBE61
     /tmp/ccYWzPAt.s:2874   .debug_loc:00000000000003ef .LLST14
     /tmp/ccYWzPAt.s:307    .text:000000000000013c .LVL19
     /tmp/ccYWzPAt.s:2945   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccYWzPAt.s:2881   .debug_loc:0000000000000412 .LLST6
     /tmp/ccYWzPAt.s:2892   .debug_loc:0000000000000448 .LLST7
     /tmp/ccYWzPAt.s:141    .text:0000000000000084 .LBB37
     /tmp/ccYWzPAt.s:156    .text:0000000000000090 .LBE37
     /tmp/ccYWzPAt.s:161    .text:0000000000000094 .LBB39
     /tmp/ccYWzPAt.s:177    .text:00000000000000a0 .LBE39
     /tmp/ccYWzPAt.s:370    .text:0000000000000170 .LBB41
     /tmp/ccYWzPAt.s:381    .text:0000000000000174 .LBE41
     /tmp/ccYWzPAt.s:2903   .debug_loc:000000000000047e .LLST8
     /tmp/ccYWzPAt.s:383    .text:0000000000000174 .LBB43
     /tmp/ccYWzPAt.s:394    .text:0000000000000178 .LBE43
     /tmp/ccYWzPAt.s:2910   .debug_loc:00000000000004a1 .LLST9
     /tmp/ccYWzPAt.s:190    .text:00000000000000c4 .LVL9
     /tmp/ccYWzPAt.s:357    .text:0000000000000164 .LVL24
     /tmp/ccYWzPAt.s:366    .text:0000000000000170 .LVL26
GAS LISTING /tmp/ccYWzPAt.s 			page 21


     /tmp/ccYWzPAt.s:411    .text:0000000000000184 .LVL30
     /tmp/ccYWzPAt.s:95     .text:000000000000004c .LBB31
     /tmp/ccYWzPAt.s:112    .text:0000000000000058 .LBE31
     /tmp/ccYWzPAt.s:212    .text:00000000000000e8 .LBB52
     /tmp/ccYWzPAt.s:220    .text:00000000000000ec .LBE52
     /tmp/ccYWzPAt.s:2917   .debug_loc:00000000000004c4 .LLST10
     /tmp/ccYWzPAt.s:227    .text:00000000000000f0 .LBB63
     /tmp/ccYWzPAt.s:240    .text:00000000000000f8 .LBE63
     /tmp/ccYWzPAt.s:2924   .debug_loc:00000000000004e7 .LLST15
     /tmp/ccYWzPAt.s:344    .text:0000000000000150 .LVL22
     /tmp/ccYWzPAt.s:10     .text:0000000000000000 .LFB17
     /tmp/ccYWzPAt.s:40     .text:0000000000000020 .LFE17
     /tmp/ccYWzPAt.s:3253   .debug_str:00000000000008f6 .LASF157
     /tmp/ccYWzPAt.s:3251   .debug_str:00000000000008f0 .LASF146
     /tmp/ccYWzPAt.s:3219   .debug_str:0000000000000757 .LASF147
     /tmp/ccYWzPAt.s:3031   .debug_str:0000000000000232 .LASF158
     /tmp/ccYWzPAt.s:68     .text:000000000000003c .LVL0
     /tmp/ccYWzPAt.s:193    .text:00000000000000c8 .LVL10
     /tmp/ccYWzPAt.s:223    .text:00000000000000f0 .LVL14
     /tmp/ccYWzPAt.s:257    .text:0000000000000110 .LVL16
     /tmp/ccYWzPAt.s:333    .text:0000000000000148 .LVL21
     /tmp/ccYWzPAt.s:346    .text:0000000000000154 .LVL23
     /tmp/ccYWzPAt.s:360    .text:0000000000000168 .LVL25
     /tmp/ccYWzPAt.s:401    .text:000000000000017c .LVL29
     /tmp/ccYWzPAt.s:74     .text:0000000000000040 .LVL1
     /tmp/ccYWzPAt.s:80     .text:0000000000000044 .LVL2
     /tmp/ccYWzPAt.s:86     .text:0000000000000048 .LVL3
     /tmp/ccYWzPAt.s:92     .text:000000000000004c .LVL4
     /tmp/ccYWzPAt.s:110    .text:0000000000000058 .LVL5
     /tmp/ccYWzPAt.s:135    .text:000000000000007c .LVL6
     /tmp/ccYWzPAt.s:202    .text:00000000000000d0 .LVL11
     /tmp/ccYWzPAt.s:279    .text:000000000000011c .LVL17
     /tmp/ccYWzPAt.s:297    .text:0000000000000128 .LVL18
     /tmp/ccYWzPAt.s:317    .text:0000000000000140 .LVL20
     /tmp/ccYWzPAt.s:159    .text:0000000000000094 .LVL7
     /tmp/ccYWzPAt.s:175    .text:00000000000000a0 .LVL8
     /tmp/ccYWzPAt.s:378    .text:0000000000000174 .LVL27
     /tmp/ccYWzPAt.s:391    .text:0000000000000178 .LVL28
     /tmp/ccYWzPAt.s:211    .text:00000000000000e8 .LVL12
     /tmp/ccYWzPAt.s:218    .text:00000000000000ec .LVL13
     /tmp/ccYWzPAt.s:236    .text:00000000000000f8 .LVL15
     /tmp/ccYWzPAt.s:427    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccYWzPAt.s:139    .text:0000000000000084 .LBB36
     /tmp/ccYWzPAt.s:195    .text:00000000000000c8 .LBE36
     /tmp/ccYWzPAt.s:349    .text:0000000000000154 .LBB45
     /tmp/ccYWzPAt.s:395    .text:0000000000000178 .LBE45
     /tmp/ccYWzPAt.s:406    .text:000000000000017c .LBB46
     /tmp/ccYWzPAt.s:414    .text:0000000000000188 .LBE46

UNDEFINED SYMBOLS
_ZN15MemoryAllocator8mem_freeEPKv
_ZN3TCB16time_slice_countE
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
console_handler
_ZN15MemoryAllocator9mem_allocEm
_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_
GAS LISTING /tmp/ccYWzPAt.s 			page 22


