GAS LISTING /tmp/ccfEVpwv.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5RISCV10popSppSpieEv
   9              	_ZN5RISCV10popSppSpieEv:
  10              	.LFB31:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../lib/hw.h"
   2:src/riscv.cpp **** #include "../lib/console.h"
   3:src/riscv.cpp **** #include "../h/riscv.hpp"
   4:src/riscv.cpp **** #include "../h/syscall_c.h"
   5:src/riscv.cpp **** #include "../h/Memoryallocator.hpp"
   6:src/riscv.cpp **** #include "../h/thread.hpp"
   7:src/riscv.cpp **** #include "../h/Console.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** extern void printInteger(uint64);
  10:src/riscv.cpp **** extern void printString(char*);
  11:src/riscv.cpp **** extern void handleNewChars(void*);
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** // first time running a thread, sepc inside of wrapper
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void RISCV::popSppSpie() {
  12              		.loc 1 16 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     // not inline ( ra reg )
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****     if (TCB::running->routine != handleNewChars) RISCV::mask_status(SPP);
  20              		.loc 1 20 5
  21              		.loc 1 20 23 is_stmt 0
  22 000c 97070000 		la	a5,_ZN3TCB7runningE
  22      83B70700 
  23 0014 83B70700 		ld	a5,0(a5)
  24 0018 03B78702 		ld	a4,40(a5)
  25              		.loc 1 20 5
  26 001c 97070000 		la	a5,_Z14handleNewCharsPv
  26      83B70700 
  27 0024 6306F700 		beq	a4,a5,.L2
  28              		.loc 1 20 50 is_stmt 1
  29              	.LVL0:
  30              	.LBB52:
  31              	.LBB53:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 4/7/24.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccfEVpwv.s 			page 2


   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class RISCV {
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     enum causes {
  14:src/../h/riscv.hpp ****         SOFTWARE = 0x8000000000000001UL,
  15:src/../h/riscv.hpp ****         EXTERNAL = 0x8000000000000009UL,
  16:src/../h/riscv.hpp ****         U_ECALL  = 0x0000000000000008UL,
  17:src/../h/riscv.hpp ****         S_ECALL  = 0x0000000000000009UL
  18:src/../h/riscv.hpp ****     };
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     static void supervisor_trap();
  21:src/../h/riscv.hpp ****     static void handle_interrupt();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void push_regs();
  24:src/../h/riscv.hpp ****     static void pop_regs();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     static uint64 rd_scause();
  27:src/../h/riscv.hpp ****     static void wr_scause(uint64 value);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     static uint64 rd_sepc();
  30:src/../h/riscv.hpp ****     static void wr_sepc(uint64 value);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     static uint64 rd_stvec();
  33:src/../h/riscv.hpp ****     static void wr_stvec(uint64 value);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     static uint64 rd_stval();
  36:src/../h/riscv.hpp ****     static void wr_stval(uint64 value);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     static uint64 rd_sip();
  39:src/../h/riscv.hpp ****     static void wr_sip(uint64 value);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     static uint64 rd_sstatus();
  42:src/../h/riscv.hpp ****     static void wr_sstatus(uint64 value);
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     static inline void clear_sip(uint64 mask) {
  45:src/../h/riscv.hpp ****         __asm__ volatile("csrc sip, %0" : : "r"(mask));
  46:src/../h/riscv.hpp ****     }
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     static inline void set_sip(uint64 mask) {
  49:src/../h/riscv.hpp ****         __asm__ volatile("csrs sip, %0" : : "r"(mask));
  50:src/../h/riscv.hpp ****     }
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     static inline void mask_status(uint64 mask) {
  54:src/../h/riscv.hpp ****         __asm__ volatile("csrc sstatus, %0" : : "r"(mask));
  33              		.loc 2 54 9
  34              		.loc 2 54 59 is_stmt 0
  35 0028 93070010 		li	a5,256
  36              	#APP
  37              	# 54 "src/../h/riscv.hpp" 1
  55              	    };
  38              		csrc sstatus, a5
GAS LISTING /tmp/ccfEVpwv.s 			page 3


  39              	# 0 "" 2
  40              	.LVL1:
  41              	#NO_APP
  42              	.L2:
  43              	.LBE53:
  44              	.LBE52:
  21:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  45              		.loc 1 21 5 is_stmt 1
  46              		.loc 1 21 39 is_stmt 0
  47              	#APP
  48              	# 21 "src/riscv.cpp" 1
  22              	    __asm__ volatile ("sret");
  49              		csrw sepc, ra
  50              	# 0 "" 2
  51              		.loc 1 22 5 is_stmt 1
  52              		.loc 1 22 30 is_stmt 0
  53              	# 22 "src/riscv.cpp" 1
  23              	
  24:src/riscv.cpp ****     // => pop spp and spie !
  25:src/riscv.cpp ****     // exit from supervisor mode
  26:src/riscv.cpp **** }
  54              		sret
  55              	# 0 "" 2
  56              		.loc 1 26 1
  57              	#NO_APP
  58 0038 03348100 		ld	s0,8(sp)
  59              		.cfi_restore 8
  60              		.cfi_def_cfa 2, 16
  61 003c 13010101 		addi	sp,sp,16
  62              		.cfi_def_cfa_offset 0
  63 0040 67800000 		jr	ra
  64              		.cfi_endproc
  65              	.LFE31:
  67              		.align	2
  68              		.globl	_ZN5RISCV16handle_interruptEv
  70              	_ZN5RISCV16handle_interruptEv:
  71              	.LFB32:
  27:src/riscv.cpp **** 
  28:src/riscv.cpp **** void RISCV::handle_interrupt() {
  72              		.loc 1 28 32 is_stmt 1
  73              		.cfi_startproc
  74 0044 130101F9 		addi	sp,sp,-112
  75              		.cfi_def_cfa_offset 112
  76 0048 23341106 		sd	ra,104(sp)
  77 004c 23308106 		sd	s0,96(sp)
  78 0050 233C9104 		sd	s1,88(sp)
  79 0054 23382105 		sd	s2,80(sp)
  80 0058 23343105 		sd	s3,72(sp)
  81              		.cfi_offset 1, -8
  82              		.cfi_offset 8, -16
  83              		.cfi_offset 9, -24
  84              		.cfi_offset 18, -32
  85              		.cfi_offset 19, -40
  86 005c 13040107 		addi	s0,sp,112
  87              		.cfi_def_cfa 8, 0
  29:src/riscv.cpp **** 
  30:src/riscv.cpp ****     uint64 op, a1, a2, a3, a4;
GAS LISTING /tmp/ccfEVpwv.s 			page 4


  88              		.loc 1 30 5
  31:src/riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r"(op)); // operation code
  89              		.loc 1 31 5
  90              		.loc 1 31 45 is_stmt 0
  91              	#APP
  92              	# 31 "src/riscv.cpp" 1
  32              	    __asm__ volatile("mv %0, a1" : "=r"(a1));
  93              		mv a6, a0
  94              	# 0 "" 2
  95              	.LVL2:
  96              		.loc 1 32 5 is_stmt 1
  97              		.loc 1 32 45 is_stmt 0
  98              	# 32 "src/riscv.cpp" 1
  33              	    __asm__ volatile("mv %0, a2" : "=r"(a2));
  99              		mv a0, a1
 100              	# 0 "" 2
 101              	.LVL3:
 102              		.loc 1 33 5 is_stmt 1
 103              		.loc 1 33 45 is_stmt 0
 104              	# 33 "src/riscv.cpp" 1
  34              	    __asm__ volatile("mv %0, a3" : "=r"(a3));
 105              		mv a1, a2
 106              	# 0 "" 2
 107              	.LVL4:
 108              		.loc 1 34 5 is_stmt 1
 109              		.loc 1 34 45 is_stmt 0
 110              	# 34 "src/riscv.cpp" 1
  35              	    __asm__ volatile("mv %0, a4" : "=r"(a4));
 111              		mv a2, a3
 112              	# 0 "" 2
 113              	.LVL5:
 114              		.loc 1 35 5 is_stmt 1
 115              		.loc 1 35 45 is_stmt 0
 116              	# 35 "src/riscv.cpp" 1
  36              	
 117              		mv a3, a4
 118              	# 0 "" 2
 119              	.LVL6:
  37:src/riscv.cpp ****     uint64 scause = rd_scause();
 120              		.loc 1 37 5 is_stmt 1
 121              	#NO_APP
 122              	.LBB54:
 123              	.LBB55:
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     static inline void set_status(uint64 mask) {
  58:src/../h/riscv.hpp ****         __asm__ volatile("csrs sstatus, %0" : : "r"(mask));
  59:src/../h/riscv.hpp ****     }
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     static void popSppSpie();
  62:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits
  63:src/../h/riscv.hpp ****     // must be in cpp !!!
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     enum mask_sstatus {
  66:src/../h/riscv.hpp ****         SIE = (1 << 1),
  67:src/../h/riscv.hpp ****         SPIE =(1 << 5),
  68:src/../h/riscv.hpp ****         SPP = (1 << 8)
  69:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccfEVpwv.s 			page 5


  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     enum mask_sip_sie {
  72:src/../h/riscv.hpp ****         SS = (1 << 1),
  73:src/../h/riscv.hpp ****         SE = (1 << 9)
  74:src/../h/riscv.hpp ****     };
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp **** };
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp **** inline uint64 RISCV::rd_scause() {
  79:src/../h/riscv.hpp ****     uint64 volatile value;
 124              		.loc 2 79 5
  80:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, scause" : "=r"(value));
 125              		.loc 2 80 5
 126              		.loc 2 80 55 is_stmt 0
 127              	#APP
 128              	# 80 "src/../h/riscv.hpp" 1
  81              	    return value;
 129              		csrr a5, scause
 130              	# 0 "" 2
 131              	#NO_APP
 132 0078 233CF4F8 		sd	a5,-104(s0)
 133              		.loc 2 81 5 is_stmt 1
 134              		.loc 2 81 12 is_stmt 0
 135 007c 033784F9 		ld	a4,-104(s0)
 136              	.LVL7:
 137              	.LBE55:
 138              	.LBE54:
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****     if (scause == SOFTWARE) {
 139              		.loc 1 39 5 is_stmt 1
 140              	.LBB56:
 141 0080 9307F0FF 		li	a5,-1
 142 0084 9397F703 		slli	a5,a5,63
 143 0088 93871700 		addi	a5,a5,1
 144 008c 6300F706 		beq	a4,a5,.L32
 145              	.LBE56:
  40:src/riscv.cpp ****         // software interrupt - timer
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****         // update running time passed for running
  43:src/riscv.cpp ****         // if time >= running time slice, dispatch()
  44:src/riscv.cpp ****         // reset static time passed
  45:src/riscv.cpp ****         // update sleeping threads or timed wait
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****         clear_sip(mask_sip_sie::SS);
  48:src/riscv.cpp **** 
  49:src/riscv.cpp ****         if (Scheduler::hasSleeping()) {
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****             Scheduler::first_sleepy -> sleeping_time --;
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****             TCB* tcb = Scheduler::first_sleepy;
  54:src/riscv.cpp ****             while (tcb) {
  55:src/riscv.cpp ****                 // remember first sleepy
  56:src/riscv.cpp ****                 if (tcb -> sleeping_time > 0) break;
  57:src/riscv.cpp **** 
  58:src/riscv.cpp ****                 tcb->current_state = TCB::RUNNABLE;
  59:src/riscv.cpp ****                 Scheduler::put(tcb);
  60:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
GAS LISTING /tmp/ccfEVpwv.s 			page 6


  61:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
  62:src/riscv.cpp ****                 tcb = next;
  63:src/riscv.cpp ****             }
  64:src/riscv.cpp **** 
  65:src/riscv.cpp ****             Scheduler::first_sleepy = tcb;
  66:src/riscv.cpp **** 
  67:src/riscv.cpp ****         }
  68:src/riscv.cpp **** 
  69:src/riscv.cpp ****         TCB::time_slice_count ++;
  70:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
  71:src/riscv.cpp ****         {
  72:src/riscv.cpp ****             uint64 sepc = rd_sepc();
  73:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
  74:src/riscv.cpp **** 
  75:src/riscv.cpp ****             TCB::time_slice_count = 0; // new running thread
  76:src/riscv.cpp ****             TCB::dispatch();
  77:src/riscv.cpp **** 
  78:src/riscv.cpp ****             wr_sepc(sepc);
  79:src/riscv.cpp ****             wr_sstatus(sstatus);
  80:src/riscv.cpp **** 
  81:src/riscv.cpp ****             // first time running thread -> context not saved
  82:src/riscv.cpp ****             // next instruction: inside of wrapper function
  83:src/riscv.cpp ****         }
  84:src/riscv.cpp **** 
  85:src/riscv.cpp ****     } else if (scause == EXTERNAL) {
 146              		.loc 1 85 12
 147              	.LBB110:
 148              	.LBB57:
 149 0090 9307F0FF 		li	a5,-1
 150 0094 9397F703 		slli	a5,a5,63
 151 0098 93879700 		addi	a5,a5,9
 152 009c 6306F710 		beq	a4,a5,.L33
 153              	.LBE57:
 154              	.LBE110:
  86:src/riscv.cpp ****         // external interrupt - console
  87:src/riscv.cpp ****         //console_handler();
  88:src/riscv.cpp **** 
  89:src/riscv.cpp ****         uint64 sepc = rd_sepc();
  90:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
  91:src/riscv.cpp **** 
  92:src/riscv.cpp ****         int irq = plic_claim();
  93:src/riscv.cpp ****         if (irq == CONSOLE_IRQ) {
  94:src/riscv.cpp **** 
  95:src/riscv.cpp ****             while (*(char *) CONSOLE_STATUS & CONSOLE_RX_STATUS_BIT && !myConsole::inputBuffer->ful
  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****                 char c = *(char *) CONSOLE_RX_DATA;
  98:src/riscv.cpp ****                 myConsole::input_putc(c);
  99:src/riscv.cpp ****                 // put new char to input buffer.
 100:src/riscv.cpp ****             }
 101:src/riscv.cpp **** 
 102:src/riscv.cpp ****             plic_complete(irq);
 103:src/riscv.cpp ****         }
 104:src/riscv.cpp **** 
 105:src/riscv.cpp ****         wr_sepc(sepc);
 106:src/riscv.cpp ****         wr_sstatus(sstatus);
 107:src/riscv.cpp ****         clear_sip(SE);
 108:src/riscv.cpp **** 
GAS LISTING /tmp/ccfEVpwv.s 			page 7


 109:src/riscv.cpp ****     }
 110:src/riscv.cpp **** //    else if (scause == S_ECALL) {
 111:src/riscv.cpp **** //
 112:src/riscv.cpp **** //        // a1 = oldRunning
 113:src/riscv.cpp **** //        // a2 = newRunning
 114:src/riscv.cpp **** //
 115:src/riscv.cpp **** //        uint64 sepc = rd_sepc() + 4;
 116:src/riscv.cpp **** //        uint64 sstatus = rd_sstatus();
 117:src/riscv.cpp **** //
 118:src/riscv.cpp **** //        TCB::contextSwitch( &((TCB*)a1)->context, &((TCB*)a2)->context );
 119:src/riscv.cpp **** //
 120:src/riscv.cpp **** //        wr_sepc(sepc);
 121:src/riscv.cpp **** //        wr_sstatus(sstatus);
 122:src/riscv.cpp **** 
 123:src/riscv.cpp ****      else if (scause == U_ECALL || scause == S_ECALL){
 155              		.loc 1 123 11
 156              	.LBB111:
 157              	.LBB87:
 158              	.LBB58:
 159              		.loc 1 123 33 is_stmt 0
 160 00a0 130787FF 		addi	a4,a4,-8
 161              	.LVL8:
 162              		.loc 1 123 11
 163 00a4 93071000 		li	a5,1
 164 00a8 63E4E728 		bgtu	a4,a5,.L14
 165              	.LBB59:
 124:src/riscv.cpp ****         // environment call from user / supervisor mode
 125:src/riscv.cpp **** 
 126:src/riscv.cpp ****         uint64 sepc = rd_sepc() + 4;
 166              		.loc 1 126 9 is_stmt 1
 167              	.LBB60:
 168              	.LBB61:
  82:src/../h/riscv.hpp **** }
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp **** inline void RISCV::wr_scause(uint64 value) {
  85:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %0" : : "r"(value));
  86:src/../h/riscv.hpp **** }
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sepc() {
  89:src/../h/riscv.hpp ****     uint64 volatile value;
 169              		.loc 2 89 5
  90:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 170              		.loc 2 90 5
 171              		.loc 2 90 53 is_stmt 0
 172              	#APP
 173              	# 90 "src/../h/riscv.hpp" 1
  91              	    return value;
 174              		csrr a5, sepc
 175              	# 0 "" 2
 176              	#NO_APP
 177 00b0 2334F4FC 		sd	a5,-56(s0)
 178              		.loc 2 91 5 is_stmt 1
 179              		.loc 2 91 12 is_stmt 0
 180 00b4 833484FC 		ld	s1,-56(s0)
 181              	.LBE61:
 182              	.LBE60:
 183              		.loc 1 126 35
GAS LISTING /tmp/ccfEVpwv.s 			page 8


 184 00b8 93844400 		addi	s1,s1,4
 185              	.LVL9:
 127:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
 186              		.loc 1 127 9 is_stmt 1
 187              	.LBB62:
 188              	.LBB63:
  92:src/../h/riscv.hpp **** }
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** inline void RISCV::wr_sepc(uint64 value) {
  95:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %0" : : "r"(value));
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stvec() {
  99:src/../h/riscv.hpp ****     uint64 volatile value;
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stvec" : "=r"(value));
 101:src/../h/riscv.hpp ****     return value;
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline void RISCV::wr_stvec(uint64 value) {
 105:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %0" : : "r"(value));
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline uint64 RISCV::rd_stval() {
 109:src/../h/riscv.hpp ****     uint64 volatile value;
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, stval" : "=r"(value));
 111:src/../h/riscv.hpp ****     return value;
 112:src/../h/riscv.hpp **** }
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** inline void RISCV::wr_stval(uint64 value) {
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %0" : : "r"(value));
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sip() {
 119:src/../h/riscv.hpp ****     uint64 volatile value;
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sip" : "=r"(value));
 121:src/../h/riscv.hpp ****     return value;
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline void RISCV::wr_sip(uint64 value) {
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %0" : : "r"(value));
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline uint64 RISCV::rd_sstatus() {
 129:src/../h/riscv.hpp ****     uint64 volatile value;
 189              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 190              		.loc 2 130 5
 191              		.loc 2 130 56 is_stmt 0
 192              	#APP
 193              	# 130 "src/../h/riscv.hpp" 1
 131              	    return value;
 194              		csrr a5, sstatus
 195              	# 0 "" 2
 196              	#NO_APP
 197 00c0 2330F4FC 		sd	a5,-64(s0)
 198              		.loc 2 131 5 is_stmt 1
 199              		.loc 2 131 12 is_stmt 0
GAS LISTING /tmp/ccfEVpwv.s 			page 9


 200 00c4 033904FC 		ld	s2,-64(s0)
 201              	.LVL10:
 202              	.LBE63:
 203              	.LBE62:
 128:src/riscv.cpp **** 
 129:src/riscv.cpp ****         switch (op) {
 204              		.loc 1 129 9 is_stmt 1
 205 00c8 93072004 		li	a5,66
 206 00cc 63E00719 		bgtu	a6,a5,.L15
 207 00d0 13182800 		slli	a6,a6,2
 208              	.LVL11:
 209 00d4 17070000 		lla	a4,.L17
 209      13070700 
 210              	.LVL12:
 211 00dc 3308E800 		add	a6,a6,a4
 212 00e0 83270800 		lw	a5,0(a6)
 213 00e4 B387E700 		add	a5,a5,a4
 214 00e8 67800700 		jr	a5
 215              		.section	.rodata
 216              		.align	2
 217              		.align	2
 218              	.L17:
 219 0000 00000000 		.word	.L15-.L17
 220 0004 00000000 		.word	.L30-.L17
 221 0008 00000000 		.word	.L29-.L17
 222 000c 00000000 		.word	.L15-.L17
 223 0010 00000000 		.word	.L15-.L17
 224 0014 00000000 		.word	.L15-.L17
 225 0018 00000000 		.word	.L15-.L17
 226 001c 00000000 		.word	.L15-.L17
 227 0020 00000000 		.word	.L15-.L17
 228 0024 00000000 		.word	.L15-.L17
 229 0028 00000000 		.word	.L15-.L17
 230 002c 00000000 		.word	.L15-.L17
 231 0030 00000000 		.word	.L15-.L17
 232 0034 00000000 		.word	.L15-.L17
 233 0038 00000000 		.word	.L15-.L17
 234 003c 00000000 		.word	.L15-.L17
 235 0040 00000000 		.word	.L15-.L17
 236 0044 00000000 		.word	.L28-.L17
 237 0048 00000000 		.word	.L27-.L17
 238 004c 00000000 		.word	.L26-.L17
 239 0050 00000000 		.word	.L15-.L17
 240 0054 00000000 		.word	.L15-.L17
 241 0058 00000000 		.word	.L15-.L17
 242 005c 00000000 		.word	.L15-.L17
 243 0060 00000000 		.word	.L15-.L17
 244 0064 00000000 		.word	.L15-.L17
 245 0068 00000000 		.word	.L15-.L17
 246 006c 00000000 		.word	.L15-.L17
 247 0070 00000000 		.word	.L15-.L17
 248 0074 00000000 		.word	.L15-.L17
 249 0078 00000000 		.word	.L15-.L17
 250 007c 00000000 		.word	.L15-.L17
 251 0080 00000000 		.word	.L15-.L17
 252 0084 00000000 		.word	.L25-.L17
 253 0088 00000000 		.word	.L24-.L17
GAS LISTING /tmp/ccfEVpwv.s 			page 10


 254 008c 00000000 		.word	.L23-.L17
 255 0090 00000000 		.word	.L22-.L17
 256 0094 00000000 		.word	.L21-.L17
 257 0098 00000000 		.word	.L20-.L17
 258 009c 00000000 		.word	.L15-.L17
 259 00a0 00000000 		.word	.L15-.L17
 260 00a4 00000000 		.word	.L15-.L17
 261 00a8 00000000 		.word	.L15-.L17
 262 00ac 00000000 		.word	.L15-.L17
 263 00b0 00000000 		.word	.L15-.L17
 264 00b4 00000000 		.word	.L15-.L17
 265 00b8 00000000 		.word	.L15-.L17
 266 00bc 00000000 		.word	.L15-.L17
 267 00c0 00000000 		.word	.L15-.L17
 268 00c4 00000000 		.word	.L19-.L17
 269 00c8 00000000 		.word	.L15-.L17
 270 00cc 00000000 		.word	.L15-.L17
 271 00d0 00000000 		.word	.L15-.L17
 272 00d4 00000000 		.word	.L15-.L17
 273 00d8 00000000 		.word	.L15-.L17
 274 00dc 00000000 		.word	.L15-.L17
 275 00e0 00000000 		.word	.L15-.L17
 276 00e4 00000000 		.word	.L15-.L17
 277 00e8 00000000 		.word	.L15-.L17
 278 00ec 00000000 		.word	.L15-.L17
 279 00f0 00000000 		.word	.L15-.L17
 280 00f4 00000000 		.word	.L15-.L17
 281 00f8 00000000 		.word	.L15-.L17
 282 00fc 00000000 		.word	.L15-.L17
 283 0100 00000000 		.word	.L15-.L17
 284 0104 00000000 		.word	.L18-.L17
 285 0108 00000000 		.word	.L16-.L17
 286              		.text
 287              	.LVL13:
 288              	.L32:
 289              	.LBE59:
 290              	.LBE58:
 291              	.LBE87:
 292              	.LBB88:
  47:src/riscv.cpp **** 
 293              		.loc 1 47 9
 294              	.LBB89:
 295              	.LBB90:
  45:src/../h/riscv.hpp ****     }
 296              		.loc 2 45 9
  45:src/../h/riscv.hpp ****     }
 297              		.loc 2 45 55 is_stmt 0
 298 00ec 93072000 		li	a5,2
 299              	#APP
 300              	# 45 "src/../h/riscv.hpp" 1
 301              		csrc sip, a5
 302              	# 0 "" 2
 303              	.LVL14:
 304              	#NO_APP
 305              	.LBE90:
 306              	.LBE89:
  49:src/riscv.cpp **** 
GAS LISTING /tmp/ccfEVpwv.s 			page 11


 307              		.loc 1 49 9 is_stmt 1
 308              	.LBB91:
 309              	.LBB92:
 310              	.LBB93:
 311              		.file 3 "src/../h/Scheduler.hpp"
   1:src/../h/Scheduler.hpp **** 
   2:src/../h/Scheduler.hpp **** #ifndef PROJECT_BASE_SCHEDULER_HPP
   3:src/../h/Scheduler.hpp **** #define PROJECT_BASE_SCHEDULER_HPP
   4:src/../h/Scheduler.hpp **** 
   5:src/../h/Scheduler.hpp **** #include "thread.hpp"
   6:src/../h/Scheduler.hpp **** 
   7:src/../h/Scheduler.hpp **** class Scheduler {
   8:src/../h/Scheduler.hpp **** 
   9:src/../h/Scheduler.hpp ****     friend class RISCV;
  10:src/../h/Scheduler.hpp **** 
  11:src/../h/Scheduler.hpp **** public:
  12:src/../h/Scheduler.hpp ****     static void init_scheduler();
  13:src/../h/Scheduler.hpp **** 
  14:src/../h/Scheduler.hpp ****     static TCB* get();
  15:src/../h/Scheduler.hpp ****     static void put(TCB*);
  16:src/../h/Scheduler.hpp ****     static TCB* peek();
  17:src/../h/Scheduler.hpp ****     static bool empty();
  18:src/../h/Scheduler.hpp **** 
  19:src/../h/Scheduler.hpp ****     static int put_to_sleep(TCB*, time_t );
  20:src/../h/Scheduler.hpp **** 
  21:src/../h/Scheduler.hpp ****     void* operator new(size_t);
  22:src/../h/Scheduler.hpp ****     void operator delete(void *);
  23:src/../h/Scheduler.hpp **** 
  24:src/../h/Scheduler.hpp ****     Scheduler(const Scheduler&) = delete;
  25:src/../h/Scheduler.hpp **** 
  26:src/../h/Scheduler.hpp **** private:
  27:src/../h/Scheduler.hpp **** 
  28:src/../h/Scheduler.hpp ****     static bool hasSleeping() {return  first_sleepy != nullptr;}
 312              		.loc 3 28 32
 313              		.loc 3 28 53 is_stmt 0
 314 00f4 97070000 		la	a5,_ZN9Scheduler12first_sleepyE
 314      83B70700 
 315 00fc 83B40700 		ld	s1,0(a5)
 316              	.LBE93:
 317              	.LBE92:
  49:src/riscv.cpp **** 
 318              		.loc 1 49 9
 319 0100 63840404 		beqz	s1,.L6
 320              	.LBB94:
  51:src/riscv.cpp **** 
 321              		.loc 1 51 13 is_stmt 1
  51:src/riscv.cpp **** 
 322              		.loc 1 51 40 is_stmt 0
 323 0104 83B78401 		ld	a5,24(s1)
  51:src/riscv.cpp **** 
 324              		.loc 1 51 54
 325 0108 9387F7FF 		addi	a5,a5,-1
 326 010c 23BCF400 		sd	a5,24(s1)
  53:src/riscv.cpp ****             while (tcb) {
 327              		.loc 1 53 13 is_stmt 1
 328              	.LVL15:
 329              	.L8:
GAS LISTING /tmp/ccfEVpwv.s 			page 12


  54:src/riscv.cpp ****                 // remember first sleepy
 330              		.loc 1 54 13
  54:src/riscv.cpp ****                 // remember first sleepy
 331              		.loc 1 54 20
 332 0110 63860402 		beqz	s1,.L7
 333              	.LBB95:
  56:src/riscv.cpp **** 
 334              		.loc 1 56 17
  56:src/riscv.cpp **** 
 335              		.loc 1 56 28 is_stmt 0
 336 0114 83B78401 		ld	a5,24(s1)
  56:src/riscv.cpp **** 
 337              		.loc 1 56 17
 338 0118 63920702 		bnez	a5,.L7
  58:src/riscv.cpp ****                 Scheduler::put(tcb);
 339              		.loc 1 58 17 is_stmt 1
  58:src/riscv.cpp ****                 Scheduler::put(tcb);
 340              		.loc 1 58 36 is_stmt 0
 341 011c 23A00406 		sw	zero,96(s1)
  59:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
 342              		.loc 1 59 17 is_stmt 1
  59:src/riscv.cpp ****                 TCB* next = tcb -> next_sleepy;
 343              		.loc 1 59 31 is_stmt 0
 344 0120 13850400 		mv	a0,s1
 345 0124 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 345      E7800000 
 346              	.LVL16:
  60:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
 347              		.loc 1 60 17 is_stmt 1
  60:src/riscv.cpp ****                 tcb -> next_sleepy = nullptr;
 348              		.loc 1 60 22 is_stmt 0
 349 012c 83B70401 		ld	a5,16(s1)
 350              	.LVL17:
  61:src/riscv.cpp ****                 tcb = next;
 351              		.loc 1 61 17 is_stmt 1
  61:src/riscv.cpp ****                 tcb = next;
 352              		.loc 1 61 36 is_stmt 0
 353 0130 23B80400 		sd	zero,16(s1)
  62:src/riscv.cpp ****             }
 354              		.loc 1 62 17 is_stmt 1
 355              	.LVL18:
  62:src/riscv.cpp ****             }
 356              		.loc 1 62 21 is_stmt 0
 357 0134 93840700 		mv	s1,a5
 358              	.LBE95:
  54:src/riscv.cpp ****                 // remember first sleepy
 359              		.loc 1 54 13
 360 0138 6FF09FFD 		j	.L8
 361              	.LVL19:
 362              	.L7:
  65:src/riscv.cpp **** 
 363              		.loc 1 65 13 is_stmt 1
  65:src/riscv.cpp **** 
 364              		.loc 1 65 37 is_stmt 0
 365 013c 97070000 		la	a5,_ZN9Scheduler12first_sleepyE
 365      83B70700 
 366 0144 23B09700 		sd	s1,0(a5)
GAS LISTING /tmp/ccfEVpwv.s 			page 13


 367              	.LVL20:
 368              	.L6:
 369              	.LBE94:
 370              	.LBE91:
  69:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 371              		.loc 1 69 9 is_stmt 1
  69:src/riscv.cpp ****         if (TCB::time_slice_count >= TCB::running->getTimeSlice())
 372              		.loc 1 69 31 is_stmt 0
 373 0148 17070000 		la	a4,_ZN3TCB16time_slice_countE
 373      03370700 
 374 0150 83370700 		ld	a5,0(a4)
 375 0154 93871700 		addi	a5,a5,1
 376 0158 2330F700 		sd	a5,0(a4)
  70:src/riscv.cpp ****         {
 377              		.loc 1 70 9 is_stmt 1
 378              	.LBB96:
  70:src/riscv.cpp ****         {
 379              		.loc 1 70 64 is_stmt 0
 380 015c 17070000 		la	a4,_ZN3TCB7runningE
 380      03370700 
 381 0164 03370700 		ld	a4,0(a4)
 382              	.LVL21:
 383              	.LBB97:
 384              	.LBB98:
 385              		.file 4 "src/../h/thread.hpp"
   1:src/../h/thread.hpp **** //
   2:src/../h/thread.hpp **** // Created by os on 4/9/24.
   3:src/../h/thread.hpp **** //
   4:src/../h/thread.hpp **** 
   5:src/../h/thread.hpp **** #ifndef PROJECT_BASE_THREAD_HPP
   6:src/../h/thread.hpp **** #define PROJECT_BASE_THREAD_HPP
   7:src/../h/thread.hpp **** 
   8:src/../h/thread.hpp **** #include "../lib/hw.h"
   9:src/../h/thread.hpp **** #include "../h/Memoryallocator.hpp"
  10:src/../h/thread.hpp **** #include "../h/riscv.hpp"
  11:src/../h/thread.hpp **** #include "../h/syscall_c.h"
  12:src/../h/thread.hpp **** 
  13:src/../h/thread.hpp **** //extern void thread_dispatch();
  14:src/../h/thread.hpp **** 
  15:src/../h/thread.hpp **** using routine_ptr = void(*)(void *);
  16:src/../h/thread.hpp **** 
  17:src/../h/thread.hpp **** // _thread je wrapper ove klase
  18:src/../h/thread.hpp **** class TCB final {
  19:src/../h/thread.hpp **** 
  20:src/../h/thread.hpp ****     friend class RISCV;
  21:src/../h/thread.hpp ****     friend class Sem;
  22:src/../h/thread.hpp ****     friend class Scheduler;
  23:src/../h/thread.hpp **** 
  24:src/../h/thread.hpp **** public:
  25:src/../h/thread.hpp **** 
  26:src/../h/thread.hpp ****     static TCB* running; // current thread
  27:src/../h/thread.hpp **** 
  28:src/../h/thread.hpp ****     enum state {
  29:src/../h/thread.hpp ****         RUNNABLE,
  30:src/../h/thread.hpp ****         SLEEPING,
  31:src/../h/thread.hpp ****         CREATED,
  32:src/../h/thread.hpp ****         FINISHED,
GAS LISTING /tmp/ccfEVpwv.s 			page 14


  33:src/../h/thread.hpp ****         BLOCKED
  34:src/../h/thread.hpp ****     };
  35:src/../h/thread.hpp ****     struct Context {
  36:src/../h/thread.hpp ****         // nadogradi kasnije
  37:src/../h/thread.hpp ****         uint64 pc;
  38:src/../h/thread.hpp ****         uint64 sp;
  39:src/../h/thread.hpp ****         uint64 sstatus;
  40:src/../h/thread.hpp ****         uint64 sepc;
  41:src/../h/thread.hpp ****     };
  42:src/../h/thread.hpp **** 
  43:src/../h/thread.hpp ****     void start();
  44:src/../h/thread.hpp **** 
  45:src/../h/thread.hpp ****     static int _threadCreate(TCB** handle, routine_ptr routine, void* args, void* stack_space); // 
  46:src/../h/thread.hpp **** 
  47:src/../h/thread.hpp ****     static void yield(TCB*, TCB*);
  48:src/../h/thread.hpp **** 
  49:src/../h/thread.hpp ****     static void dispatch();
  50:src/../h/thread.hpp **** 
  51:src/../h/thread.hpp ****     state getState() const {return current_state;}
  52:src/../h/thread.hpp ****     time_t getTimeSlice() const {return time_slice;}
 386              		.loc 4 52 34 is_stmt 1
 387              		.loc 4 52 41 is_stmt 0
 388 0168 03370702 		ld	a4,32(a4)
 389              	.LVL22:
 390              	.LBE98:
 391              	.LBE97:
  70:src/riscv.cpp ****         {
 392              		.loc 1 70 9
 393 016c 63E4E70E 		bltu	a5,a4,.L4
 394              	.LBB99:
  72:src/riscv.cpp ****             uint64 sstatus = rd_sstatus();
 395              		.loc 1 72 13 is_stmt 1
 396              	.LBB100:
 397              	.LBB101:
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 398              		.loc 2 89 5
  90:src/../h/riscv.hpp ****     return value;
 399              		.loc 2 90 5
  90:src/../h/riscv.hpp ****     return value;
 400              		.loc 2 90 53 is_stmt 0
 401              	#APP
 402              	# 90 "src/../h/riscv.hpp" 1
 403              		csrr a5, sepc
 404              	# 0 "" 2
 405              	#NO_APP
 406 0174 2334F4FA 		sd	a5,-88(s0)
  91:src/../h/riscv.hpp **** }
 407              		.loc 2 91 5 is_stmt 1
  91:src/../h/riscv.hpp **** }
 408              		.loc 2 91 12 is_stmt 0
 409 0178 033984FA 		ld	s2,-88(s0)
 410              	.LVL23:
 411              	.LBE101:
 412              	.LBE100:
  73:src/riscv.cpp **** 
 413              		.loc 1 73 13 is_stmt 1
 414              	.LBB102:
GAS LISTING /tmp/ccfEVpwv.s 			page 15


 415              	.LBB103:
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 416              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return value;
 417              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return value;
 418              		.loc 2 130 56 is_stmt 0
 419              	#APP
 420              	# 130 "src/../h/riscv.hpp" 1
 421              		csrr a5, sstatus
 422              	# 0 "" 2
 423              	#NO_APP
 424 0180 2330F4FA 		sd	a5,-96(s0)
 425              		.loc 2 131 5 is_stmt 1
 426              		.loc 2 131 12 is_stmt 0
 427 0184 833404FA 		ld	s1,-96(s0)
 428              	.LVL24:
 429              	.LBE103:
 430              	.LBE102:
  75:src/riscv.cpp ****             TCB::dispatch();
 431              		.loc 1 75 13 is_stmt 1
  75:src/riscv.cpp ****             TCB::dispatch();
 432              		.loc 1 75 35 is_stmt 0
 433 0188 97070000 		la	a5,_ZN3TCB16time_slice_countE
 433      83B70700 
 434 0190 23B00700 		sd	zero,0(a5)
  76:src/riscv.cpp **** 
 435              		.loc 1 76 13 is_stmt 1
  76:src/riscv.cpp **** 
 436              		.loc 1 76 26 is_stmt 0
 437 0194 97000000 		call	_ZN3TCB8dispatchEv@plt
 437      E7800000 
 438              	.LVL25:
  78:src/riscv.cpp ****             wr_sstatus(sstatus);
 439              		.loc 1 78 13 is_stmt 1
 440              	.LBB104:
 441              	.LBB105:
  95:src/../h/riscv.hpp **** }
 442              		.loc 2 95 5
  95:src/../h/riscv.hpp **** }
 443              		.loc 2 95 54 is_stmt 0
 444              	#APP
 445              	# 95 "src/../h/riscv.hpp" 1
 446              		csrw sepc, s2
 447              	# 0 "" 2
 448              	.LVL26:
 449              	#NO_APP
 450              	.LBE105:
 451              	.LBE104:
  79:src/riscv.cpp **** 
 452              		.loc 1 79 13 is_stmt 1
 453              	.LBB106:
 454              	.LBB107:
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void RISCV::wr_sstatus(uint64 value) {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %0" : : "r"(value));
GAS LISTING /tmp/ccfEVpwv.s 			page 16


 455              		.loc 2 135 5
 456              		.loc 2 135 57 is_stmt 0
 457              	#APP
 458              	# 135 "src/../h/riscv.hpp" 1
 136              	}
 459              		csrw sstatus, s1
 460              	# 0 "" 2
 461              		.loc 2 136 1
 462              	#NO_APP
 463 01a4 6F00000B 		j	.L4
 464              	.LVL27:
 465              	.L33:
 466              	.LBE107:
 467              	.LBE106:
 468              	.LBE99:
 469              	.LBE96:
 470              	.LBE88:
 471              	.LBB108:
 472              	.LBB70:
  89:src/riscv.cpp ****         uint64 sstatus = rd_sstatus();
 473              		.loc 1 89 9 is_stmt 1
 474              	.LBB71:
 475              	.LBB72:
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sepc" : "=r"(value));
 476              		.loc 2 89 5
  90:src/../h/riscv.hpp ****     return value;
 477              		.loc 2 90 5
  90:src/../h/riscv.hpp ****     return value;
 478              		.loc 2 90 53 is_stmt 0
 479              	#APP
 480              	# 90 "src/../h/riscv.hpp" 1
 481              		csrr a5, sepc
 482              	# 0 "" 2
 483              	#NO_APP
 484 01ac 233CF4FA 		sd	a5,-72(s0)
  91:src/../h/riscv.hpp **** }
 485              		.loc 2 91 5 is_stmt 1
  91:src/../h/riscv.hpp **** }
 486              		.loc 2 91 12 is_stmt 0
 487 01b0 833984FB 		ld	s3,-72(s0)
 488              	.LVL28:
 489              	.LBE72:
 490              	.LBE71:
  90:src/riscv.cpp **** 
 491              		.loc 1 90 9 is_stmt 1
 492              	.LBB73:
 493              	.LBB74:
 129:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %0, sstatus" : "=r"(value));
 494              		.loc 2 129 5
 130:src/../h/riscv.hpp ****     return value;
 495              		.loc 2 130 5
 130:src/../h/riscv.hpp ****     return value;
 496              		.loc 2 130 56 is_stmt 0
 497              	#APP
 498              	# 130 "src/../h/riscv.hpp" 1
 499              		csrr a5, sstatus
 500              	# 0 "" 2
GAS LISTING /tmp/ccfEVpwv.s 			page 17


 501              	#NO_APP
 502 01b8 2338F4FA 		sd	a5,-80(s0)
 131:src/../h/riscv.hpp **** }
 503              		.loc 2 131 5 is_stmt 1
 131:src/../h/riscv.hpp **** }
 504              		.loc 2 131 12 is_stmt 0
 505 01bc 033904FB 		ld	s2,-80(s0)
 506              	.LVL29:
 507              	.LBE74:
 508              	.LBE73:
  92:src/riscv.cpp ****         if (irq == CONSOLE_IRQ) {
 509              		.loc 1 92 9 is_stmt 1
  92:src/riscv.cpp ****         if (irq == CONSOLE_IRQ) {
 510              		.loc 1 92 29 is_stmt 0
 511 01c0 97000000 		call	plic_claim@plt
 511      E7800000 
 512              	.LVL30:
 513 01c8 93040500 		mv	s1,a0
 514              	.LVL31:
  93:src/riscv.cpp **** 
 515              		.loc 1 93 9 is_stmt 1
 516              	.LBB75:
 517 01cc 9307A000 		li	a5,10
 518 01d0 630CF500 		beq	a0,a5,.L13
 519              	.LVL32:
 520              	.L11:
 521              	.LBE75:
 105:src/riscv.cpp ****         wr_sstatus(sstatus);
 522              		.loc 1 105 9
 523              	.LBB78:
 524              	.LBB79:
  95:src/../h/riscv.hpp **** }
 525              		.loc 2 95 5
  95:src/../h/riscv.hpp **** }
 526              		.loc 2 95 54 is_stmt 0
 527              	#APP
 528              	# 95 "src/../h/riscv.hpp" 1
 529              		csrw sepc, s3
 530              	# 0 "" 2
 531              	.LVL33:
 532              	#NO_APP
 533              	.LBE79:
 534              	.LBE78:
 106:src/riscv.cpp ****         clear_sip(SE);
 535              		.loc 1 106 9 is_stmt 1
 536              	.LBB80:
 537              	.LBB81:
 135:src/../h/riscv.hpp **** }
 538              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 539              		.loc 2 135 57 is_stmt 0
 540              	#APP
 541              	# 135 "src/../h/riscv.hpp" 1
 542              		csrw sstatus, s2
 543              	# 0 "" 2
 544              	.LVL34:
 545              	#NO_APP
GAS LISTING /tmp/ccfEVpwv.s 			page 18


 546              	.LBE81:
 547              	.LBE80:
 107:src/riscv.cpp **** 
 548              		.loc 1 107 9 is_stmt 1
 549              	.LBB82:
 550              	.LBB83:
  45:src/../h/riscv.hpp ****     }
 551              		.loc 2 45 9
  45:src/../h/riscv.hpp ****     }
 552              		.loc 2 45 55 is_stmt 0
 553 01dc 93070020 		li	a5,512
 554              	#APP
 555              	# 45 "src/../h/riscv.hpp" 1
  46:src/../h/riscv.hpp **** 
 556              		csrc sip, a5
 557              	# 0 "" 2
 558              		.loc 2 46 5
 559              	#NO_APP
 560 01e4 6F000007 		j	.L4
 561              	.LVL35:
 562              	.L13:
 563              	.LBE83:
 564              	.LBE82:
 565              	.LBB84:
 566              	.LBB76:
  95:src/riscv.cpp **** 
 567              		.loc 1 95 13 is_stmt 1
  95:src/riscv.cpp **** 
 568              		.loc 1 95 69
  95:src/riscv.cpp **** 
 569              		.loc 1 95 20 is_stmt 0
 570 01e8 97070000 		la	a5,CONSOLE_STATUS
 570      83B70700 
 571 01f0 83B70700 		ld	a5,0(a5)
 572 01f4 83C70700 		lbu	a5,0(a5)
  95:src/riscv.cpp **** 
 573              		.loc 1 95 69
 574 01f8 93F71700 		andi	a5,a5,1
 575 01fc 638C0702 		beqz	a5,.L12
  95:src/riscv.cpp **** 
 576              		.loc 1 95 101 discriminator 1
 577 0200 97070000 		la	a5,_ZN9myConsole11inputBufferE
 577      83B70700 
 578 0208 03B50700 		ld	a0,0(a5)
 579 020c 97000000 		call	_ZNK13BoundedBuffer4fullEv@plt
 579      E7800000 
 580              	.LVL36:
  95:src/riscv.cpp **** 
 581              		.loc 1 95 69 discriminator 1
 582 0214 63100502 		bnez	a0,.L12
 583              	.LBB77:
  97:src/riscv.cpp ****                 myConsole::input_putc(c);
 584              		.loc 1 97 17 is_stmt 1
  97:src/riscv.cpp ****                 myConsole::input_putc(c);
 585              		.loc 1 97 26 is_stmt 0
 586 0218 97070000 		la	a5,CONSOLE_RX_DATA
 586      83B70700 
GAS LISTING /tmp/ccfEVpwv.s 			page 19


 587 0220 83B70700 		ld	a5,0(a5)
 588              	.LVL37:
  98:src/riscv.cpp ****                 // put new char to input buffer.
 589              		.loc 1 98 17 is_stmt 1
  98:src/riscv.cpp ****                 // put new char to input buffer.
 590              		.loc 1 98 38 is_stmt 0
 591 0224 03C50700 		lbu	a0,0(a5)
 592 0228 97000000 		call	_ZN9myConsole10input_putcEc@plt
 592      E7800000 
 593              	.LVL38:
 594              	.LBE77:
  95:src/riscv.cpp **** 
 595              		.loc 1 95 13
 596 0230 6FF09FFB 		j	.L13
 597              	.L12:
 102:src/riscv.cpp ****         }
 598              		.loc 1 102 13 is_stmt 1 discriminator 4
 102:src/riscv.cpp ****         }
 599              		.loc 1 102 26 is_stmt 0 discriminator 4
 600 0234 13850400 		mv	a0,s1
 601 0238 97000000 		call	plic_complete@plt
 601      E7800000 
 602              	.LVL39:
 603              	.LBE76:
 604 0240 6FF05FF9 		j	.L11
 605              	.LVL40:
 606              	.L30:
 607              	.LBE84:
 608              	.LBE70:
 609              	.LBB85:
 610              	.LBB68:
 130:src/riscv.cpp ****             case MEM_ALLOC:
 611              		.loc 1 130 13 is_stmt 1
 131:src/riscv.cpp ****                 MemoryAllocator::mem_alloc((size_t)a1);
 612              		.loc 1 131 17
 613              		.loc 1 131 43 is_stmt 0
 614 0244 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 614      E7800000 
 615              	.LVL41:
 132:src/riscv.cpp ****                 break;
 616              		.loc 1 132 17 is_stmt 1
 617              	.L15:
 133:src/riscv.cpp ****             case MEM_FREE:
 134:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 135:src/riscv.cpp ****                 break;
 136:src/riscv.cpp ****             case THREAD_CREATE:
 137:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 138:src/riscv.cpp ****                 break;
 139:src/riscv.cpp ****             case THREAD_EXIT:
 140:src/riscv.cpp ****                 TCB::_threadExit();
 141:src/riscv.cpp ****                 break;
 142:src/riscv.cpp ****             case THREAD_DISPATCH:
 143:src/riscv.cpp ****                 TCB::time_slice_count = 0;
 144:src/riscv.cpp ****                 TCB::dispatch();
 145:src/riscv.cpp ****                 break;
 146:src/riscv.cpp ****             case SEM_OPEN:
 147:src/riscv.cpp ****                 Sem::open((sem_t*)a1, (unsigned int)a2);
GAS LISTING /tmp/ccfEVpwv.s 			page 20


 148:src/riscv.cpp ****                 break;
 149:src/riscv.cpp ****             case SEM_CLOSE:
 150:src/riscv.cpp ****                 Sem::s_close((sem_t)a1); // a1 == handle
 151:src/riscv.cpp ****                 break;
 152:src/riscv.cpp ****             case SEM_WAIT:
 153:src/riscv.cpp ****                 Sem::wait(((sem_t)a1)); // a1 <=> handle
 154:src/riscv.cpp ****                 break;
 155:src/riscv.cpp ****             case SEM_SIGNAL:
 156:src/riscv.cpp ****                 Sem::signal((sem_t)a1); // a1 <=> handle
 157:src/riscv.cpp ****                 break;
 158:src/riscv.cpp ****             case SEM_TIMEDWAIT:
 159:src/riscv.cpp ****                 Sem::timedWait((sem_t)a1,(time_t)a2);
 160:src/riscv.cpp ****                 break;
 161:src/riscv.cpp ****             case SEM_TRYWAIT:
 162:src/riscv.cpp ****                 Sem::trywait((sem_t)a1);
 163:src/riscv.cpp ****                 break;
 164:src/riscv.cpp ****             case TIME_SLEEP:
 165:src/riscv.cpp ****                 Scheduler::put_to_sleep((thread_t)TCB::running, (time_t)a1);
 166:src/riscv.cpp ****                 break;
 167:src/riscv.cpp ****             case GETC:
 168:src/riscv.cpp ****                 myConsole::input_getc();
 169:src/riscv.cpp ****                 break;
 170:src/riscv.cpp ****             case PUTC:
 171:src/riscv.cpp ****                 myConsole::output_putc((char) a1);
 172:src/riscv.cpp ****                 break;
 173:src/riscv.cpp ****         }
 174:src/riscv.cpp **** 
 175:src/riscv.cpp ****         wr_sepc(sepc);
 618              		.loc 1 175 9
 619              	.LBB64:
 620              	.LBB65:
  95:src/../h/riscv.hpp **** }
 621              		.loc 2 95 5
  95:src/../h/riscv.hpp **** }
 622              		.loc 2 95 54 is_stmt 0
 623              	#APP
 624              	# 95 "src/../h/riscv.hpp" 1
 625              		csrw sepc, s1
 626              	# 0 "" 2
 627              	.LVL42:
 628              	#NO_APP
 629              	.LBE65:
 630              	.LBE64:
 176:src/riscv.cpp ****         wr_sstatus(sstatus);
 631              		.loc 1 176 9 is_stmt 1
 632              	.LBB66:
 633              	.LBB67:
 135:src/../h/riscv.hpp **** }
 634              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 635              		.loc 2 135 57 is_stmt 0
 636              	#APP
 637              	# 135 "src/../h/riscv.hpp" 1
 638              		csrw sstatus, s2
 639              	# 0 "" 2
 640              	.LVL43:
 641              	#NO_APP
GAS LISTING /tmp/ccfEVpwv.s 			page 21


 642              	.L4:
 643              	.LBE67:
 644              	.LBE66:
 645              	.LBE68:
 646              	.LBE85:
 647              	.LBE108:
 648              	.LBE111:
 177:src/riscv.cpp **** 
 178:src/riscv.cpp ****     } else {
 179:src/riscv.cpp ****         // INVALID INTERRUPT CODE
 180:src/riscv.cpp ****         printInteger(123456789);
 181:src/riscv.cpp ****     }
 182:src/riscv.cpp **** }
 649              		.loc 1 182 1
 650 0254 83308106 		ld	ra,104(sp)
 651              		.cfi_remember_state
 652              		.cfi_restore 1
 653 0258 03340106 		ld	s0,96(sp)
 654              		.cfi_restore 8
 655              		.cfi_def_cfa 2, 112
 656 025c 83348105 		ld	s1,88(sp)
 657              		.cfi_restore 9
 658 0260 03390105 		ld	s2,80(sp)
 659              		.cfi_restore 18
 660 0264 83398104 		ld	s3,72(sp)
 661              		.cfi_restore 19
 662 0268 13010107 		addi	sp,sp,112
 663              		.cfi_def_cfa_offset 0
 664 026c 67800000 		jr	ra
 665              	.LVL44:
 666              	.L29:
 667              		.cfi_restore_state
 668              	.LBB112:
 669              	.LBB109:
 670              	.LBB86:
 671              	.LBB69:
 133:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *)a1);
 672              		.loc 1 133 13 is_stmt 1
 134:src/riscv.cpp ****                 break;
 673              		.loc 1 134 17
 134:src/riscv.cpp ****                 break;
 674              		.loc 1 134 42 is_stmt 0
 675 0270 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 675      E7800000 
 676              	.LVL45:
 135:src/riscv.cpp ****             case THREAD_CREATE:
 677              		.loc 1 135 17 is_stmt 1
 678 0278 6FF05FFD 		j	.L15
 679              	.LVL46:
 680              	.L28:
 136:src/riscv.cpp ****                 TCB::_threadCreate((TCB**)a1, (routine_ptr)a2, (void *)a3, (void *)a4);
 681              		.loc 1 136 13
 137:src/riscv.cpp ****                 break;
 682              		.loc 1 137 17
 137:src/riscv.cpp ****                 break;
 683              		.loc 1 137 35 is_stmt 0
 684 027c 97000000 		call	_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_@plt
GAS LISTING /tmp/ccfEVpwv.s 			page 22


 684      E7800000 
 685              	.LVL47:
 138:src/riscv.cpp ****             case THREAD_EXIT:
 686              		.loc 1 138 17 is_stmt 1
 687 0284 6FF09FFC 		j	.L15
 688              	.LVL48:
 689              	.L27:
 139:src/riscv.cpp ****                 TCB::_threadExit();
 690              		.loc 1 139 13
 140:src/riscv.cpp ****                 break;
 691              		.loc 1 140 17
 140:src/riscv.cpp ****                 break;
 692              		.loc 1 140 33 is_stmt 0
 693 0288 97000000 		call	_ZN3TCB11_threadExitEv@plt
 693      E7800000 
 694              	.LVL49:
 141:src/riscv.cpp ****             case THREAD_DISPATCH:
 695              		.loc 1 141 17 is_stmt 1
 696 0290 6FF0DFFB 		j	.L15
 697              	.LVL50:
 698              	.L26:
 142:src/riscv.cpp ****                 TCB::time_slice_count = 0;
 699              		.loc 1 142 13
 143:src/riscv.cpp ****                 TCB::dispatch();
 700              		.loc 1 143 17
 143:src/riscv.cpp ****                 TCB::dispatch();
 701              		.loc 1 143 39 is_stmt 0
 702 0294 97070000 		la	a5,_ZN3TCB16time_slice_countE
 702      83B70700 
 703 029c 23B00700 		sd	zero,0(a5)
 144:src/riscv.cpp ****                 break;
 704              		.loc 1 144 17 is_stmt 1
 144:src/riscv.cpp ****                 break;
 705              		.loc 1 144 30 is_stmt 0
 706 02a0 97000000 		call	_ZN3TCB8dispatchEv@plt
 706      E7800000 
 707              	.LVL51:
 145:src/riscv.cpp ****             case SEM_OPEN:
 708              		.loc 1 145 17 is_stmt 1
 709 02a8 6FF05FFA 		j	.L15
 710              	.LVL52:
 711              	.L25:
 146:src/riscv.cpp ****                 Sem::open((sem_t*)a1, (unsigned int)a2);
 712              		.loc 1 146 13
 147:src/riscv.cpp ****                 break;
 713              		.loc 1 147 17
 147:src/riscv.cpp ****                 break;
 714              		.loc 1 147 26 is_stmt 0
 715 02ac 9B850500 		sext.w	a1,a1
 716              	.LVL53:
 717 02b0 97000000 		call	_ZN3Sem4openEPPS_j@plt
 717      E7800000 
 718              	.LVL54:
 148:src/riscv.cpp ****             case SEM_CLOSE:
 719              		.loc 1 148 17 is_stmt 1
 720 02b8 6FF05FF9 		j	.L15
 721              	.LVL55:
GAS LISTING /tmp/ccfEVpwv.s 			page 23


 722              	.L24:
 149:src/riscv.cpp ****                 Sem::s_close((sem_t)a1); // a1 == handle
 723              		.loc 1 149 13
 150:src/riscv.cpp ****                 break;
 724              		.loc 1 150 17
 150:src/riscv.cpp ****                 break;
 725              		.loc 1 150 29 is_stmt 0
 726 02bc 97000000 		call	_ZN3Sem7s_closeEPS_@plt
 726      E7800000 
 727              	.LVL56:
 151:src/riscv.cpp ****             case SEM_WAIT:
 728              		.loc 1 151 17 is_stmt 1
 729 02c4 6FF09FF8 		j	.L15
 730              	.LVL57:
 731              	.L23:
 152:src/riscv.cpp ****                 Sem::wait(((sem_t)a1)); // a1 <=> handle
 732              		.loc 1 152 13
 153:src/riscv.cpp ****                 break;
 733              		.loc 1 153 17
 153:src/riscv.cpp ****                 break;
 734              		.loc 1 153 26 is_stmt 0
 735 02c8 97000000 		call	_ZN3Sem4waitEPS_@plt
 735      E7800000 
 736              	.LVL58:
 154:src/riscv.cpp ****             case SEM_SIGNAL:
 737              		.loc 1 154 17 is_stmt 1
 738 02d0 6FF0DFF7 		j	.L15
 739              	.LVL59:
 740              	.L22:
 155:src/riscv.cpp ****                 Sem::signal((sem_t)a1); // a1 <=> handle
 741              		.loc 1 155 13
 156:src/riscv.cpp ****                 break;
 742              		.loc 1 156 17
 156:src/riscv.cpp ****                 break;
 743              		.loc 1 156 28 is_stmt 0
 744 02d4 97000000 		call	_ZN3Sem6signalEPS_@plt
 744      E7800000 
 745              	.LVL60:
 157:src/riscv.cpp ****             case SEM_TIMEDWAIT:
 746              		.loc 1 157 17 is_stmt 1
 747 02dc 6FF01FF7 		j	.L15
 748              	.LVL61:
 749              	.L21:
 158:src/riscv.cpp ****                 Sem::timedWait((sem_t)a1,(time_t)a2);
 750              		.loc 1 158 13
 159:src/riscv.cpp ****                 break;
 751              		.loc 1 159 17
 159:src/riscv.cpp ****                 break;
 752              		.loc 1 159 31 is_stmt 0
 753 02e0 97000000 		call	_ZN3Sem9timedWaitEPS_m@plt
 753      E7800000 
 754              	.LVL62:
 160:src/riscv.cpp ****             case SEM_TRYWAIT:
 755              		.loc 1 160 17 is_stmt 1
 756 02e8 6FF05FF6 		j	.L15
 757              	.LVL63:
 758              	.L20:
GAS LISTING /tmp/ccfEVpwv.s 			page 24


 161:src/riscv.cpp ****                 Sem::trywait((sem_t)a1);
 759              		.loc 1 161 13
 162:src/riscv.cpp ****                 break;
 760              		.loc 1 162 17
 162:src/riscv.cpp ****                 break;
 761              		.loc 1 162 29 is_stmt 0
 762 02ec 97000000 		call	_ZN3Sem7trywaitEPS_@plt
 762      E7800000 
 763              	.LVL64:
 163:src/riscv.cpp ****             case TIME_SLEEP:
 764              		.loc 1 163 17 is_stmt 1
 765 02f4 6FF09FF5 		j	.L15
 766              	.LVL65:
 767              	.L19:
 164:src/riscv.cpp ****                 Scheduler::put_to_sleep((thread_t)TCB::running, (time_t)a1);
 768              		.loc 1 164 13
 165:src/riscv.cpp ****                 break;
 769              		.loc 1 165 17
 165:src/riscv.cpp ****                 break;
 770              		.loc 1 165 40 is_stmt 0
 771 02f8 93050500 		mv	a1,a0
 772              	.LVL66:
 773 02fc 97070000 		la	a5,_ZN3TCB7runningE
 773      83B70700 
 774 0304 03B50700 		ld	a0,0(a5)
 775              	.LVL67:
 776 0308 97000000 		call	_ZN9Scheduler12put_to_sleepEP3TCBm@plt
 776      E7800000 
 777              	.LVL68:
 166:src/riscv.cpp ****             case GETC:
 778              		.loc 1 166 17 is_stmt 1
 779 0310 6FF0DFF3 		j	.L15
 780              	.LVL69:
 781              	.L18:
 167:src/riscv.cpp ****                 myConsole::input_getc();
 782              		.loc 1 167 13
 168:src/riscv.cpp ****                 break;
 783              		.loc 1 168 17
 168:src/riscv.cpp ****                 break;
 784              		.loc 1 168 38 is_stmt 0
 785 0314 97000000 		call	_ZN9myConsole10input_getcEv@plt
 785      E7800000 
 786              	.LVL70:
 169:src/riscv.cpp ****             case PUTC:
 787              		.loc 1 169 17 is_stmt 1
 788 031c 6FF01FF3 		j	.L15
 789              	.LVL71:
 790              	.L16:
 170:src/riscv.cpp ****                 myConsole::output_putc((char) a1);
 791              		.loc 1 170 13
 171:src/riscv.cpp ****                 break;
 792              		.loc 1 171 17
 171:src/riscv.cpp ****                 break;
 793              		.loc 1 171 39 is_stmt 0
 794 0320 1375F50F 		andi	a0,a0,0xff
 795              	.LVL72:
 796 0324 97000000 		call	_ZN9myConsole11output_putcEc@plt
GAS LISTING /tmp/ccfEVpwv.s 			page 25


 796      E7800000 
 797              	.LVL73:
 172:src/riscv.cpp ****         }
 798              		.loc 1 172 17 is_stmt 1
 799 032c 6FF01FF2 		j	.L15
 800              	.LVL74:
 801              	.L14:
 802              	.LBE69:
 180:src/riscv.cpp ****     }
 803              		.loc 1 180 9
 180:src/riscv.cpp ****     }
 804              		.loc 1 180 21 is_stmt 0
 805 0330 37D55B07 		li	a0,123457536
 806              	.LVL75:
 807 0334 130555D1 		addi	a0,a0,-747
 808 0338 97000000 		call	_Z12printIntegerm@plt
 808      E7800000 
 809              	.LVL76:
 810              	.LBE86:
 811              	.LBE109:
 812              	.LBE112:
 813              		.loc 1 182 1
 814 0340 6FF05FF1 		j	.L4
 815              		.cfi_endproc
 816              	.LFE32:
 818              	.Letext0:
 819              		.file 5 "src/../lib/hw.h"
 820              		.file 6 "src/../h/syscall_c.h"
 821              		.file 7 "src/../h/semaphore.hpp"
 822              		.file 8 "src/../h/Memoryallocator.hpp"
 823              		.file 9 "src/../h/List.hpp"
 824              		.file 10 "src/../h/BoundedBuffer.hpp"
 825              		.file 11 "src/../h/Console.hpp"
GAS LISTING /tmp/ccfEVpwv.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccfEVpwv.s:9      .text:0000000000000000 _ZN5RISCV10popSppSpieEv
     /tmp/ccfEVpwv.s:13     .text:0000000000000000 .L0 
     /tmp/ccfEVpwv.s:14     .text:0000000000000000 .L0 
     /tmp/ccfEVpwv.s:15     .text:0000000000000004 .L0 
     /tmp/ccfEVpwv.s:17     .text:0000000000000008 .L0 
     /tmp/ccfEVpwv.s:19     .text:000000000000000c .L0 
     /tmp/ccfEVpwv.s:21     .text:000000000000000c .L0 
     /tmp/ccfEVpwv.s:22     .text:000000000000000c .L0 
     /tmp/ccfEVpwv.s:26     .text:000000000000001c .L0 
     /tmp/ccfEVpwv.s:33     .text:0000000000000028 .L0 
     /tmp/ccfEVpwv.s:34     .text:0000000000000028 .L0 
     /tmp/ccfEVpwv.s:35     .text:0000000000000028 .L0 
     /tmp/ccfEVpwv.s:46     .text:0000000000000030 .L0 
       src/riscv.cpp:21     .text:0000000000000030 .L0 
     /tmp/ccfEVpwv.s:52     .text:0000000000000034 .L0 
       src/riscv.cpp:22     .text:0000000000000034 .L0 
     /tmp/ccfEVpwv.s:58     .text:0000000000000038 .L0 
     /tmp/ccfEVpwv.s:59     .text:000000000000003c .L0 
     /tmp/ccfEVpwv.s:60     .text:000000000000003c .L0 
     /tmp/ccfEVpwv.s:62     .text:0000000000000040 .L0 
     /tmp/ccfEVpwv.s:64     .text:0000000000000044 .L0 
     /tmp/ccfEVpwv.s:70     .text:0000000000000044 _ZN5RISCV16handle_interruptEv
     /tmp/ccfEVpwv.s:73     .text:0000000000000044 .L0 
     /tmp/ccfEVpwv.s:74     .text:0000000000000044 .L0 
     /tmp/ccfEVpwv.s:75     .text:0000000000000048 .L0 
     /tmp/ccfEVpwv.s:81     .text:000000000000005c .L0 
     /tmp/ccfEVpwv.s:82     .text:000000000000005c .L0 
     /tmp/ccfEVpwv.s:83     .text:000000000000005c .L0 
     /tmp/ccfEVpwv.s:84     .text:000000000000005c .L0 
     /tmp/ccfEVpwv.s:85     .text:000000000000005c .L0 
     /tmp/ccfEVpwv.s:87     .text:0000000000000060 .L0 
     /tmp/ccfEVpwv.s:89     .text:0000000000000060 .L0 
     /tmp/ccfEVpwv.s:90     .text:0000000000000060 .L0 
       src/riscv.cpp:31     .text:0000000000000060 .L0 
     /tmp/ccfEVpwv.s:97     .text:0000000000000064 .L0 
       src/riscv.cpp:32     .text:0000000000000064 .L0 
     /tmp/ccfEVpwv.s:103    .text:0000000000000068 .L0 
       src/riscv.cpp:33     .text:0000000000000068 .L0 
     /tmp/ccfEVpwv.s:109    .text:000000000000006c .L0 
       src/riscv.cpp:34     .text:000000000000006c .L0 
     /tmp/ccfEVpwv.s:115    .text:0000000000000070 .L0 
       src/riscv.cpp:35     .text:0000000000000070 .L0 
     /tmp/ccfEVpwv.s:124    .text:0000000000000074 .L0 
     /tmp/ccfEVpwv.s:125    .text:0000000000000074 .L0 
     /tmp/ccfEVpwv.s:126    .text:0000000000000074 .L0 
  src/../h/riscv.hpp:80     .text:0000000000000074 .L0 
     /tmp/ccfEVpwv.s:134    .text:000000000000007c .L0 
     /tmp/ccfEVpwv.s:135    .text:000000000000007c .L0 
     /tmp/ccfEVpwv.s:141    .text:0000000000000080 .L0 
     /tmp/ccfEVpwv.s:149    .text:0000000000000090 .L0 
     /tmp/ccfEVpwv.s:159    .text:00000000000000a0 .L0 
     /tmp/ccfEVpwv.s:160    .text:00000000000000a0 .L0 
     /tmp/ccfEVpwv.s:163    .text:00000000000000a4 .L0 
     /tmp/ccfEVpwv.s:169    .text:00000000000000ac .L0 
     /tmp/ccfEVpwv.s:170    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccfEVpwv.s 			page 27


     /tmp/ccfEVpwv.s:171    .text:00000000000000ac .L0 
  src/../h/riscv.hpp:90     .text:00000000000000ac .L0 
     /tmp/ccfEVpwv.s:179    .text:00000000000000b4 .L0 
     /tmp/ccfEVpwv.s:180    .text:00000000000000b4 .L0 
     /tmp/ccfEVpwv.s:184    .text:00000000000000b8 .L0 
     /tmp/ccfEVpwv.s:189    .text:00000000000000bc .L0 
     /tmp/ccfEVpwv.s:190    .text:00000000000000bc .L0 
     /tmp/ccfEVpwv.s:191    .text:00000000000000bc .L0 
  src/../h/riscv.hpp:130    .text:00000000000000bc .L0 
     /tmp/ccfEVpwv.s:199    .text:00000000000000c4 .L0 
     /tmp/ccfEVpwv.s:200    .text:00000000000000c4 .L0 
     /tmp/ccfEVpwv.s:205    .text:00000000000000c8 .L0 
     /tmp/ccfEVpwv.s:296    .text:00000000000000ec .L0 
     /tmp/ccfEVpwv.s:297    .text:00000000000000ec .L0 
     /tmp/ccfEVpwv.s:298    .text:00000000000000ec .L0 
     /tmp/ccfEVpwv.s:312    .text:00000000000000f4 .L0 
     /tmp/ccfEVpwv.s:313    .text:00000000000000f4 .L0 
     /tmp/ccfEVpwv.s:314    .text:00000000000000f4 .L0 
     /tmp/ccfEVpwv.s:319    .text:0000000000000100 .L0 
     /tmp/ccfEVpwv.s:322    .text:0000000000000104 .L0 
     /tmp/ccfEVpwv.s:323    .text:0000000000000104 .L0 
     /tmp/ccfEVpwv.s:325    .text:0000000000000108 .L0 
     /tmp/ccfEVpwv.s:330    .text:0000000000000110 .L0 
     /tmp/ccfEVpwv.s:331    .text:0000000000000110 .L0 
     /tmp/ccfEVpwv.s:332    .text:0000000000000110 .L0 
     /tmp/ccfEVpwv.s:335    .text:0000000000000114 .L0 
     /tmp/ccfEVpwv.s:336    .text:0000000000000114 .L0 
     /tmp/ccfEVpwv.s:338    .text:0000000000000118 .L0 
     /tmp/ccfEVpwv.s:340    .text:000000000000011c .L0 
     /tmp/ccfEVpwv.s:341    .text:000000000000011c .L0 
     /tmp/ccfEVpwv.s:343    .text:0000000000000120 .L0 
     /tmp/ccfEVpwv.s:344    .text:0000000000000120 .L0 
     /tmp/ccfEVpwv.s:348    .text:000000000000012c .L0 
     /tmp/ccfEVpwv.s:349    .text:000000000000012c .L0 
     /tmp/ccfEVpwv.s:352    .text:0000000000000130 .L0 
     /tmp/ccfEVpwv.s:353    .text:0000000000000130 .L0 
     /tmp/ccfEVpwv.s:356    .text:0000000000000134 .L0 
     /tmp/ccfEVpwv.s:357    .text:0000000000000134 .L0 
     /tmp/ccfEVpwv.s:360    .text:0000000000000138 .L0 
     /tmp/ccfEVpwv.s:364    .text:000000000000013c .L0 
     /tmp/ccfEVpwv.s:365    .text:000000000000013c .L0 
     /tmp/ccfEVpwv.s:372    .text:0000000000000148 .L0 
     /tmp/ccfEVpwv.s:373    .text:0000000000000148 .L0 
     /tmp/ccfEVpwv.s:379    .text:000000000000015c .L0 
     /tmp/ccfEVpwv.s:380    .text:000000000000015c .L0 
     /tmp/ccfEVpwv.s:387    .text:0000000000000168 .L0 
     /tmp/ccfEVpwv.s:388    .text:0000000000000168 .L0 
     /tmp/ccfEVpwv.s:393    .text:000000000000016c .L0 
     /tmp/ccfEVpwv.s:398    .text:0000000000000170 .L0 
     /tmp/ccfEVpwv.s:399    .text:0000000000000170 .L0 
     /tmp/ccfEVpwv.s:400    .text:0000000000000170 .L0 
  src/../h/riscv.hpp:90     .text:0000000000000170 .L0 
     /tmp/ccfEVpwv.s:408    .text:0000000000000178 .L0 
     /tmp/ccfEVpwv.s:409    .text:0000000000000178 .L0 
     /tmp/ccfEVpwv.s:416    .text:000000000000017c .L0 
     /tmp/ccfEVpwv.s:417    .text:000000000000017c .L0 
     /tmp/ccfEVpwv.s:418    .text:000000000000017c .L0 
GAS LISTING /tmp/ccfEVpwv.s 			page 28


  src/../h/riscv.hpp:130    .text:000000000000017c .L0 
     /tmp/ccfEVpwv.s:426    .text:0000000000000184 .L0 
     /tmp/ccfEVpwv.s:427    .text:0000000000000184 .L0 
     /tmp/ccfEVpwv.s:432    .text:0000000000000188 .L0 
     /tmp/ccfEVpwv.s:433    .text:0000000000000188 .L0 
     /tmp/ccfEVpwv.s:436    .text:0000000000000194 .L0 
     /tmp/ccfEVpwv.s:437    .text:0000000000000194 .L0 
     /tmp/ccfEVpwv.s:442    .text:000000000000019c .L0 
     /tmp/ccfEVpwv.s:443    .text:000000000000019c .L0 
  src/../h/riscv.hpp:95     .text:000000000000019c .L0 
     /tmp/ccfEVpwv.s:455    .text:00000000000001a0 .L0 
     /tmp/ccfEVpwv.s:456    .text:00000000000001a0 .L0 
  src/../h/riscv.hpp:135    .text:00000000000001a0 .L0 
     /tmp/ccfEVpwv.s:463    .text:00000000000001a4 .L0 
     /tmp/ccfEVpwv.s:476    .text:00000000000001a8 .L0 
     /tmp/ccfEVpwv.s:477    .text:00000000000001a8 .L0 
     /tmp/ccfEVpwv.s:478    .text:00000000000001a8 .L0 
  src/../h/riscv.hpp:90     .text:00000000000001a8 .L0 
     /tmp/ccfEVpwv.s:486    .text:00000000000001b0 .L0 
     /tmp/ccfEVpwv.s:487    .text:00000000000001b0 .L0 
     /tmp/ccfEVpwv.s:494    .text:00000000000001b4 .L0 
     /tmp/ccfEVpwv.s:495    .text:00000000000001b4 .L0 
     /tmp/ccfEVpwv.s:496    .text:00000000000001b4 .L0 
  src/../h/riscv.hpp:130    .text:00000000000001b4 .L0 
     /tmp/ccfEVpwv.s:504    .text:00000000000001bc .L0 
     /tmp/ccfEVpwv.s:505    .text:00000000000001bc .L0 
     /tmp/ccfEVpwv.s:510    .text:00000000000001c0 .L0 
     /tmp/ccfEVpwv.s:511    .text:00000000000001c0 .L0 
     /tmp/ccfEVpwv.s:517    .text:00000000000001cc .L0 
     /tmp/ccfEVpwv.s:525    .text:00000000000001d4 .L0 
     /tmp/ccfEVpwv.s:526    .text:00000000000001d4 .L0 
  src/../h/riscv.hpp:95     .text:00000000000001d4 .L0 
     /tmp/ccfEVpwv.s:538    .text:00000000000001d8 .L0 
     /tmp/ccfEVpwv.s:539    .text:00000000000001d8 .L0 
  src/../h/riscv.hpp:135    .text:00000000000001d8 .L0 
     /tmp/ccfEVpwv.s:551    .text:00000000000001dc .L0 
     /tmp/ccfEVpwv.s:552    .text:00000000000001dc .L0 
     /tmp/ccfEVpwv.s:553    .text:00000000000001dc .L0 
     /tmp/ccfEVpwv.s:560    .text:00000000000001e4 .L0 
     /tmp/ccfEVpwv.s:568    .text:00000000000001e8 .L0 
     /tmp/ccfEVpwv.s:569    .text:00000000000001e8 .L0 
     /tmp/ccfEVpwv.s:570    .text:00000000000001e8 .L0 
     /tmp/ccfEVpwv.s:574    .text:00000000000001f8 .L0 
     /tmp/ccfEVpwv.s:577    .text:0000000000000200 .L0 
     /tmp/ccfEVpwv.s:582    .text:0000000000000214 .L0 
     /tmp/ccfEVpwv.s:585    .text:0000000000000218 .L0 
     /tmp/ccfEVpwv.s:586    .text:0000000000000218 .L0 
     /tmp/ccfEVpwv.s:590    .text:0000000000000224 .L0 
     /tmp/ccfEVpwv.s:591    .text:0000000000000224 .L0 
     /tmp/ccfEVpwv.s:596    .text:0000000000000230 .L0 
     /tmp/ccfEVpwv.s:599    .text:0000000000000234 .L0 
     /tmp/ccfEVpwv.s:600    .text:0000000000000234 .L0 
     /tmp/ccfEVpwv.s:612    .text:0000000000000244 .L0 
     /tmp/ccfEVpwv.s:613    .text:0000000000000244 .L0 
     /tmp/ccfEVpwv.s:614    .text:0000000000000244 .L0 
     /tmp/ccfEVpwv.s:618    .text:000000000000024c .L0 
     /tmp/ccfEVpwv.s:621    .text:000000000000024c .L0 
GAS LISTING /tmp/ccfEVpwv.s 			page 29


     /tmp/ccfEVpwv.s:622    .text:000000000000024c .L0 
  src/../h/riscv.hpp:95     .text:000000000000024c .L0 
     /tmp/ccfEVpwv.s:634    .text:0000000000000250 .L0 
     /tmp/ccfEVpwv.s:635    .text:0000000000000250 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000250 .L0 
     /tmp/ccfEVpwv.s:650    .text:0000000000000254 .L0 
     /tmp/ccfEVpwv.s:651    .text:0000000000000258 .L0 
     /tmp/ccfEVpwv.s:652    .text:0000000000000258 .L0 
     /tmp/ccfEVpwv.s:654    .text:000000000000025c .L0 
     /tmp/ccfEVpwv.s:655    .text:000000000000025c .L0 
     /tmp/ccfEVpwv.s:657    .text:0000000000000260 .L0 
     /tmp/ccfEVpwv.s:659    .text:0000000000000264 .L0 
     /tmp/ccfEVpwv.s:661    .text:0000000000000268 .L0 
     /tmp/ccfEVpwv.s:663    .text:000000000000026c .L0 
     /tmp/ccfEVpwv.s:667    .text:0000000000000270 .L0 
     /tmp/ccfEVpwv.s:673    .text:0000000000000270 .L0 
     /tmp/ccfEVpwv.s:674    .text:0000000000000270 .L0 
     /tmp/ccfEVpwv.s:675    .text:0000000000000270 .L0 
     /tmp/ccfEVpwv.s:678    .text:0000000000000278 .L0 
     /tmp/ccfEVpwv.s:682    .text:000000000000027c .L0 
     /tmp/ccfEVpwv.s:683    .text:000000000000027c .L0 
     /tmp/ccfEVpwv.s:684    .text:000000000000027c .L0 
     /tmp/ccfEVpwv.s:687    .text:0000000000000284 .L0 
     /tmp/ccfEVpwv.s:691    .text:0000000000000288 .L0 
     /tmp/ccfEVpwv.s:692    .text:0000000000000288 .L0 
     /tmp/ccfEVpwv.s:693    .text:0000000000000288 .L0 
     /tmp/ccfEVpwv.s:696    .text:0000000000000290 .L0 
     /tmp/ccfEVpwv.s:700    .text:0000000000000294 .L0 
     /tmp/ccfEVpwv.s:701    .text:0000000000000294 .L0 
     /tmp/ccfEVpwv.s:702    .text:0000000000000294 .L0 
     /tmp/ccfEVpwv.s:705    .text:00000000000002a0 .L0 
     /tmp/ccfEVpwv.s:706    .text:00000000000002a0 .L0 
     /tmp/ccfEVpwv.s:709    .text:00000000000002a8 .L0 
     /tmp/ccfEVpwv.s:713    .text:00000000000002ac .L0 
     /tmp/ccfEVpwv.s:714    .text:00000000000002ac .L0 
     /tmp/ccfEVpwv.s:715    .text:00000000000002ac .L0 
     /tmp/ccfEVpwv.s:720    .text:00000000000002b8 .L0 
     /tmp/ccfEVpwv.s:724    .text:00000000000002bc .L0 
     /tmp/ccfEVpwv.s:725    .text:00000000000002bc .L0 
     /tmp/ccfEVpwv.s:726    .text:00000000000002bc .L0 
     /tmp/ccfEVpwv.s:729    .text:00000000000002c4 .L0 
     /tmp/ccfEVpwv.s:733    .text:00000000000002c8 .L0 
     /tmp/ccfEVpwv.s:734    .text:00000000000002c8 .L0 
     /tmp/ccfEVpwv.s:735    .text:00000000000002c8 .L0 
     /tmp/ccfEVpwv.s:738    .text:00000000000002d0 .L0 
     /tmp/ccfEVpwv.s:742    .text:00000000000002d4 .L0 
     /tmp/ccfEVpwv.s:743    .text:00000000000002d4 .L0 
     /tmp/ccfEVpwv.s:744    .text:00000000000002d4 .L0 
     /tmp/ccfEVpwv.s:747    .text:00000000000002dc .L0 
     /tmp/ccfEVpwv.s:751    .text:00000000000002e0 .L0 
     /tmp/ccfEVpwv.s:752    .text:00000000000002e0 .L0 
     /tmp/ccfEVpwv.s:753    .text:00000000000002e0 .L0 
     /tmp/ccfEVpwv.s:756    .text:00000000000002e8 .L0 
     /tmp/ccfEVpwv.s:760    .text:00000000000002ec .L0 
     /tmp/ccfEVpwv.s:761    .text:00000000000002ec .L0 
     /tmp/ccfEVpwv.s:762    .text:00000000000002ec .L0 
     /tmp/ccfEVpwv.s:765    .text:00000000000002f4 .L0 
GAS LISTING /tmp/ccfEVpwv.s 			page 30


     /tmp/ccfEVpwv.s:769    .text:00000000000002f8 .L0 
     /tmp/ccfEVpwv.s:770    .text:00000000000002f8 .L0 
     /tmp/ccfEVpwv.s:771    .text:00000000000002f8 .L0 
     /tmp/ccfEVpwv.s:779    .text:0000000000000310 .L0 
     /tmp/ccfEVpwv.s:783    .text:0000000000000314 .L0 
     /tmp/ccfEVpwv.s:784    .text:0000000000000314 .L0 
     /tmp/ccfEVpwv.s:785    .text:0000000000000314 .L0 
     /tmp/ccfEVpwv.s:788    .text:000000000000031c .L0 
     /tmp/ccfEVpwv.s:792    .text:0000000000000320 .L0 
     /tmp/ccfEVpwv.s:793    .text:0000000000000320 .L0 
     /tmp/ccfEVpwv.s:794    .text:0000000000000320 .L0 
     /tmp/ccfEVpwv.s:799    .text:000000000000032c .L0 
     /tmp/ccfEVpwv.s:804    .text:0000000000000330 .L0 
     /tmp/ccfEVpwv.s:805    .text:0000000000000330 .L0 
     /tmp/ccfEVpwv.s:814    .text:0000000000000340 .L0 
     /tmp/ccfEVpwv.s:815    .text:0000000000000344 .L0 
     /tmp/ccfEVpwv.s:826    .text:0000000000000344 .L0 
     /tmp/ccfEVpwv.s:22     .text:000000000000000c .L0 
     /tmp/ccfEVpwv.s:26     .text:000000000000001c .L0 
     /tmp/ccfEVpwv.s:218    .rodata:0000000000000000 .L17
     /tmp/ccfEVpwv.s:209    .text:00000000000000d4 .L0 
     /tmp/ccfEVpwv.s:314    .text:00000000000000f4 .L0 
     /tmp/ccfEVpwv.s:365    .text:000000000000013c .L0 
     /tmp/ccfEVpwv.s:373    .text:0000000000000148 .L0 
     /tmp/ccfEVpwv.s:380    .text:000000000000015c .L0 
     /tmp/ccfEVpwv.s:433    .text:0000000000000188 .L0 
     /tmp/ccfEVpwv.s:570    .text:00000000000001e8 .L0 
     /tmp/ccfEVpwv.s:577    .text:0000000000000200 .L0 
     /tmp/ccfEVpwv.s:586    .text:0000000000000218 .L0 
     /tmp/ccfEVpwv.s:702    .text:0000000000000294 .L0 
     /tmp/ccfEVpwv.s:773    .text:00000000000002fc .L0 
     /tmp/ccfEVpwv.s:42     .text:0000000000000030 .L2
     /tmp/ccfEVpwv.s:288    .text:00000000000000ec .L32
     /tmp/ccfEVpwv.s:465    .text:00000000000001a8 .L33
     /tmp/ccfEVpwv.s:801    .text:0000000000000330 .L14
     /tmp/ccfEVpwv.s:617    .text:000000000000024c .L15
     /tmp/ccfEVpwv.s:368    .text:0000000000000148 .L6
     /tmp/ccfEVpwv.s:362    .text:000000000000013c .L7
     /tmp/ccfEVpwv.s:329    .text:0000000000000110 .L8
     /tmp/ccfEVpwv.s:642    .text:0000000000000254 .L4
     /tmp/ccfEVpwv.s:562    .text:00000000000001e8 .L13
     /tmp/ccfEVpwv.s:597    .text:0000000000000234 .L12
     /tmp/ccfEVpwv.s:520    .text:00000000000001d4 .L11
     /tmp/ccfEVpwv.s:606    .text:0000000000000244 .L30
     /tmp/ccfEVpwv.s:666    .text:0000000000000270 .L29
     /tmp/ccfEVpwv.s:680    .text:000000000000027c .L28
     /tmp/ccfEVpwv.s:689    .text:0000000000000288 .L27
     /tmp/ccfEVpwv.s:698    .text:0000000000000294 .L26
     /tmp/ccfEVpwv.s:711    .text:00000000000002ac .L25
     /tmp/ccfEVpwv.s:722    .text:00000000000002bc .L24
     /tmp/ccfEVpwv.s:731    .text:00000000000002c8 .L23
     /tmp/ccfEVpwv.s:740    .text:00000000000002d4 .L22
     /tmp/ccfEVpwv.s:749    .text:00000000000002e0 .L21
     /tmp/ccfEVpwv.s:758    .text:00000000000002ec .L20
     /tmp/ccfEVpwv.s:767    .text:00000000000002f8 .L19
     /tmp/ccfEVpwv.s:781    .text:0000000000000314 .L18
     /tmp/ccfEVpwv.s:790    .text:0000000000000320 .L16
GAS LISTING /tmp/ccfEVpwv.s 			page 31


     /tmp/ccfEVpwv.s:3206   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccfEVpwv.s:5448   .debug_str:0000000000000c02 .LASF261
     /tmp/ccfEVpwv.s:5528   .debug_str:0000000000000ee7 .LASF262
     /tmp/ccfEVpwv.s:5180   .debug_str:000000000000049b .LASF263
     /tmp/ccfEVpwv.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccfEVpwv.s:818    .text:0000000000000344 .Letext0
     /tmp/ccfEVpwv.s:5026   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccfEVpwv.s:5212   .debug_str:000000000000058f .LASF0
     /tmp/ccfEVpwv.s:5244   .debug_str:0000000000000649 .LASF1
     /tmp/ccfEVpwv.s:5368   .debug_str:00000000000009bf .LASF2
     /tmp/ccfEVpwv.s:5382   .debug_str:0000000000000a5c .LASF4
     /tmp/ccfEVpwv.s:5222   .debug_str:00000000000005d2 .LASF3
     /tmp/ccfEVpwv.s:5040   .debug_str:000000000000004a .LASF5
     /tmp/ccfEVpwv.s:5332   .debug_str:00000000000008de .LASF6
     /tmp/ccfEVpwv.s:5320   .debug_str:0000000000000865 .LASF7
     /tmp/ccfEVpwv.s:5232   .debug_str:000000000000060f .LASF8
     /tmp/ccfEVpwv.s:5176   .debug_str:000000000000047f .LASF9
     /tmp/ccfEVpwv.s:5188   .debug_str:00000000000004eb .LASF10
     /tmp/ccfEVpwv.s:5094   .debug_str:00000000000001fb .LASF11
     /tmp/ccfEVpwv.s:5164   .debug_str:0000000000000439 .LASF12
     /tmp/ccfEVpwv.s:5116   .debug_str:00000000000002c4 .LASF13
     /tmp/ccfEVpwv.s:5092   .debug_str:00000000000001eb .LASF14
     /tmp/ccfEVpwv.s:5422   .debug_str:0000000000000b73 .LASF15
     /tmp/ccfEVpwv.s:5152   .debug_str:00000000000003b0 .LASF16
     /tmp/ccfEVpwv.s:5406   .debug_str:0000000000000aeb .LASF17
     /tmp/ccfEVpwv.s:5526   .debug_str:0000000000000ee1 .LASF83
     /tmp/ccfEVpwv.s:5220   .debug_str:00000000000005cb .LASF22
     /tmp/ccfEVpwv.s:5262   .debug_str:00000000000006dd .LASF18
     /tmp/ccfEVpwv.s:5280   .debug_str:0000000000000756 .LASF19
     /tmp/ccfEVpwv.s:5082   .debug_str:00000000000001ab .LASF20
     /tmp/ccfEVpwv.s:5068   .debug_str:0000000000000120 .LASF21
     /tmp/ccfEVpwv.s:5034   .debug_str:0000000000000027 .LASF23
     /tmp/ccfEVpwv.s:5346   .debug_str:000000000000092d .LASF24
     /tmp/ccfEVpwv.s:5130   .debug_str:0000000000000331 .LASF25
     /tmp/ccfEVpwv.s:5132   .debug_str:000000000000033e .LASF26
     /tmp/ccfEVpwv.s:5360   .debug_str:0000000000000969 .LASF28
     /tmp/ccfEVpwv.s:5140   .debug_str:0000000000000364 .LASF27
     /tmp/ccfEVpwv.s:5370   .debug_str:00000000000009cd .LASF29
     /tmp/ccfEVpwv.s:5078   .debug_str:000000000000019b .LASF30
     /tmp/ccfEVpwv.s:5478   .debug_str:0000000000000d94 .LASF31
     /tmp/ccfEVpwv.s:5186   .debug_str:00000000000004e2 .LASF32
     /tmp/ccfEVpwv.s:5096   .debug_str:000000000000020a .LASF33
     /tmp/ccfEVpwv.s:5358   .debug_str:000000000000095f .LASF34
     /tmp/ccfEVpwv.s:5560   .debug_str:0000000000000fe1 .LASF36
     /tmp/ccfEVpwv.s:5428   .debug_str:0000000000000b9c .LASF38
     /tmp/ccfEVpwv.s:5330   .debug_str:00000000000008c8 .LASF40
     /tmp/ccfEVpwv.s:5510   .debug_str:0000000000000e8b .LASF35
     /tmp/ccfEVpwv.s:5512   .debug_str:0000000000000e93 .LASF37
     /tmp/ccfEVpwv.s:5392   .debug_str:0000000000000a9e .LASF39
     /tmp/ccfEVpwv.s:5558   .debug_str:0000000000000fcd .LASF41
     /tmp/ccfEVpwv.s:5088   .debug_str:00000000000001cd .LASF42
     /tmp/ccfEVpwv.s:5548   .debug_str:0000000000000f73 .LASF43
     /tmp/ccfEVpwv.s:5256   .debug_str:00000000000006a6 .LASF44
     /tmp/ccfEVpwv.s:5438   .debug_str:0000000000000bc7 .LASF45
     /tmp/ccfEVpwv.s:5344   .debug_str:0000000000000924 .LASF46
     /tmp/ccfEVpwv.s:5264   .debug_str:00000000000006e6 .LASF47
     /tmp/ccfEVpwv.s:5516   .debug_str:0000000000000eb2 .LASF48
GAS LISTING /tmp/ccfEVpwv.s 			page 32


     /tmp/ccfEVpwv.s:5326   .debug_str:000000000000089a .LASF49
     /tmp/ccfEVpwv.s:5304   .debug_str:0000000000000806 .LASF50
     /tmp/ccfEVpwv.s:5276   .debug_str:0000000000000734 .LASF51
     /tmp/ccfEVpwv.s:5156   .debug_str:00000000000003e2 .LASF52
     /tmp/ccfEVpwv.s:5416   .debug_str:0000000000000b47 .LASF53
     /tmp/ccfEVpwv.s:5468   .debug_str:0000000000000d42 .LASF54
     /tmp/ccfEVpwv.s:5108   .debug_str:0000000000000284 .LASF55
     /tmp/ccfEVpwv.s:5524   .debug_str:0000000000000ed6 .LASF56
     /tmp/ccfEVpwv.s:5488   .debug_str:0000000000000dfd .LASF57
     /tmp/ccfEVpwv.s:5230   .debug_str:0000000000000605 .LASF58
     /tmp/ccfEVpwv.s:5486   .debug_str:0000000000000de7 .LASF59
     /tmp/ccfEVpwv.s:5464   .debug_str:0000000000000d26 .LASF60
     /tmp/ccfEVpwv.s:5466   .debug_str:0000000000000d2e .LASF61
     /tmp/ccfEVpwv.s:5126   .debug_str:0000000000000315 .LASF62
     /tmp/ccfEVpwv.s:5546   .debug_str:0000000000000f5a .LASF63
     /tmp/ccfEVpwv.s:5350   .debug_str:000000000000093e .LASF64
     /tmp/ccfEVpwv.s:5260   .debug_str:00000000000006c5 .LASF65
     /tmp/ccfEVpwv.s:5198   .debug_str:0000000000000539 .LASF66
     /tmp/ccfEVpwv.s:5146   .debug_str:0000000000000389 .LASF67
     /tmp/ccfEVpwv.s:5458   .debug_str:0000000000000d05 .LASF264
     /tmp/ccfEVpwv.s:5556   .debug_str:0000000000000fc3 .LASF68
     /tmp/ccfEVpwv.s:5172   .debug_str:000000000000046c .LASF69
     /tmp/ccfEVpwv.s:5404   .debug_str:0000000000000add .LASF70
     /tmp/ccfEVpwv.s:5338   .debug_str:0000000000000900 .LASF71
     /tmp/ccfEVpwv.s:5128   .debug_str:0000000000000321 .LASF72
     /tmp/ccfEVpwv.s:5098   .debug_str:000000000000021f .LASF73
     /tmp/ccfEVpwv.s:5038   .debug_str:0000000000000040 .LASF74
     /tmp/ccfEVpwv.s:5296   .debug_str:00000000000007c6 .LASF75
     /tmp/ccfEVpwv.s:5380   .debug_str:0000000000000a51 .LASF76
     /tmp/ccfEVpwv.s:5452   .debug_str:0000000000000ccb .LASF77
     /tmp/ccfEVpwv.s:5366   .debug_str:00000000000009b3 .LASF78
     /tmp/ccfEVpwv.s:5536   .debug_str:0000000000000f1b .LASF79
     /tmp/ccfEVpwv.s:5226   .debug_str:00000000000005f0 .LASF80
     /tmp/ccfEVpwv.s:5290   .debug_str:00000000000007a5 .LASF81
     /tmp/ccfEVpwv.s:5504   .debug_str:0000000000000e65 .LASF82
     /tmp/ccfEVpwv.s:5144   .debug_str:0000000000000383 .LASF84
     /tmp/ccfEVpwv.s:5234   .debug_str:0000000000000622 .LASF85
     /tmp/ccfEVpwv.s:5102   .debug_str:000000000000024b .LASF86
     /tmp/ccfEVpwv.s:5342   .debug_str:000000000000091c .LASF87
     /tmp/ccfEVpwv.s:5076   .debug_str:0000000000000192 .LASF88
     /tmp/ccfEVpwv.s:5270   .debug_str:0000000000000712 .LASF89
     /tmp/ccfEVpwv.s:5432   .debug_str:0000000000000baf .LASF154
     /tmp/ccfEVpwv.s:5518   .debug_str:0000000000000ebb .LASF90
     /tmp/ccfEVpwv.s:5450   .debug_str:0000000000000cc6 .LASF91
     /tmp/ccfEVpwv.s:5446   .debug_str:0000000000000bfa .LASF167
     /tmp/ccfEVpwv.s:5540   .debug_str:0000000000000f38 .LASF92
     /tmp/ccfEVpwv.s:5508   .debug_str:0000000000000e7b .LASF94
     /tmp/ccfEVpwv.s:5084   .debug_str:00000000000001b3 .LASF93
     /tmp/ccfEVpwv.s:5162   .debug_str:0000000000000411 .LASF95
     /tmp/ccfEVpwv.s:5248   .debug_str:000000000000066e .LASF96
     /tmp/ccfEVpwv.s:5060   .debug_str:00000000000000f1 .LASF97
     /tmp/ccfEVpwv.s:5136   .debug_str:0000000000000356 .LASF98
     /tmp/ccfEVpwv.s:5106   .debug_str:0000000000000271 .LASF99
     /tmp/ccfEVpwv.s:5390   .debug_str:0000000000000a95 .LASF100
     /tmp/ccfEVpwv.s:5402   .debug_str:0000000000000ac9 .LASF102
     /tmp/ccfEVpwv.s:5252   .debug_str:0000000000000694 .LASF101
     /tmp/ccfEVpwv.s:5492   .debug_str:0000000000000e1f .LASF103
GAS LISTING /tmp/ccfEVpwv.s 			page 33


     /tmp/ccfEVpwv.s:5044   .debug_str:0000000000000056 .LASF104
     /tmp/ccfEVpwv.s:5258   .debug_str:00000000000006af .LASF105
     /tmp/ccfEVpwv.s:5434   .debug_str:0000000000000bb7 .LASF106
     /tmp/ccfEVpwv.s:5426   .debug_str:0000000000000b86 .LASF107
     /tmp/ccfEVpwv.s:5274   .debug_str:000000000000072d .LASF108
     /tmp/ccfEVpwv.s:5118   .debug_str:00000000000002d4 .LASF109
     /tmp/ccfEVpwv.s:5384   .debug_str:0000000000000a63 .LASF110
     /tmp/ccfEVpwv.s:5036   .debug_str:0000000000000034 .LASF111
     /tmp/ccfEVpwv.s:5550   .debug_str:0000000000000f88 .LASF112
     /tmp/ccfEVpwv.s:5182   .debug_str:00000000000004b9 .LASF113
     /tmp/ccfEVpwv.s:5032   .debug_str:0000000000000017 .LASF114
     /tmp/ccfEVpwv.s:5310   .debug_str:000000000000082a .LASF115
     /tmp/ccfEVpwv.s:5394   .debug_str:0000000000000aa6 .LASF116
     /tmp/ccfEVpwv.s:5364   .debug_str:00000000000009a2 .LASF117
     /tmp/ccfEVpwv.s:5062   .debug_str:0000000000000106 .LASF118
     /tmp/ccfEVpwv.s:5374   .debug_str:00000000000009fe .LASF119
     /tmp/ccfEVpwv.s:5142   .debug_str:0000000000000375 .LASF120
     /tmp/ccfEVpwv.s:5354   .debug_str:000000000000094e .LASF121
     /tmp/ccfEVpwv.s:5134   .debug_str:000000000000034e .LASF122
     /tmp/ccfEVpwv.s:5312   .debug_str:0000000000000837 .LASF123
     /tmp/ccfEVpwv.s:5400   .debug_str:0000000000000ac3 .LASF124
     /tmp/ccfEVpwv.s:5472   .debug_str:0000000000000d59 .LASF125
     /tmp/ccfEVpwv.s:5288   .debug_str:0000000000000797 .LASF126
     /tmp/ccfEVpwv.s:5430   .debug_str:0000000000000ba6 .LASF127
     /tmp/ccfEVpwv.s:5552   .debug_str:0000000000000f95 .LASF183
     /tmp/ccfEVpwv.s:5124   .debug_str:0000000000000307 .LASF251
     /tmp/ccfEVpwv.s:5074   .debug_str:000000000000016a .LASF253
     /tmp/ccfEVpwv.s:5494   .debug_str:0000000000000e38 .LASF197
     /tmp/ccfEVpwv.s:5048   .debug_str:0000000000000088 .LASF199
     /tmp/ccfEVpwv.s:5314   .debug_str:000000000000083c .LASF128
     /tmp/ccfEVpwv.s:5454   .debug_str:0000000000000cd9 .LASF129
     /tmp/ccfEVpwv.s:5532   .debug_str:0000000000000efa .LASF130
     /tmp/ccfEVpwv.s:5138   .debug_str:000000000000035f .LASF131
     /tmp/ccfEVpwv.s:5214   .debug_str:000000000000059c .LASF132
     /tmp/ccfEVpwv.s:5424   .debug_str:0000000000000b7f .LASF133
     /tmp/ccfEVpwv.s:5336   .debug_str:00000000000008ed .LASF134
     /tmp/ccfEVpwv.s:5150   .debug_str:00000000000003a7 .LASF135
     /tmp/ccfEVpwv.s:5300   .debug_str:00000000000007dc .LASF136
     /tmp/ccfEVpwv.s:5064   .debug_str:0000000000000111 .LASF137
     /tmp/ccfEVpwv.s:5168   .debug_str:0000000000000450 .LASF138
     /tmp/ccfEVpwv.s:5502   .debug_str:0000000000000e5d .LASF139
     /tmp/ccfEVpwv.s:5114   .debug_str:00000000000002b0 .LASF140
     /tmp/ccfEVpwv.s:5306   .debug_str:000000000000080d .LASF141
     /tmp/ccfEVpwv.s:5272   .debug_str:000000000000071a .LASF142
     /tmp/ccfEVpwv.s:5194   .debug_str:0000000000000516 .LASF143
     /tmp/ccfEVpwv.s:5218   .debug_str:00000000000005b7 .LASF144
     /tmp/ccfEVpwv.s:5178   .debug_str:000000000000048f .LASF145
     /tmp/ccfEVpwv.s:5418   .debug_str:0000000000000b5a .LASF146
     /tmp/ccfEVpwv.s:5266   .debug_str:00000000000006fb .LASF211
     /tmp/ccfEVpwv.s:5210   .debug_str:0000000000000589 .LASF147
     /tmp/ccfEVpwv.s:5228   .debug_str:00000000000005f5 .LASF148
     /tmp/ccfEVpwv.s:5544   .debug_str:0000000000000f52 .LASF149
     /tmp/ccfEVpwv.s:5386   .debug_str:0000000000000a68 .LASF150
     /tmp/ccfEVpwv.s:5202   .debug_str:0000000000000557 .LASF151
     /tmp/ccfEVpwv.s:5334   .debug_str:00000000000008e5 .LASF152
     /tmp/ccfEVpwv.s:5316   .debug_str:0000000000000848 .LASF153
     /tmp/ccfEVpwv.s:5086   .debug_str:00000000000001c1 .LASF155
GAS LISTING /tmp/ccfEVpwv.s 			page 34


     /tmp/ccfEVpwv.s:5042   .debug_str:0000000000000051 .LASF156
     /tmp/ccfEVpwv.s:5028   .debug_str:0000000000000000 .LASF157
     /tmp/ccfEVpwv.s:5242   .debug_str:0000000000000644 .LASF158
     /tmp/ccfEVpwv.s:5058   .debug_str:00000000000000d8 .LASF159
     /tmp/ccfEVpwv.s:5196   .debug_str:000000000000051e .LASF160
     /tmp/ccfEVpwv.s:5514   .debug_str:0000000000000ea7 .LASF161
     /tmp/ccfEVpwv.s:5534   .debug_str:0000000000000f00 .LASF162
     /tmp/ccfEVpwv.s:5440   .debug_str:0000000000000bdc .LASF163
     /tmp/ccfEVpwv.s:5054   .debug_str:00000000000000c0 .LASF164
     /tmp/ccfEVpwv.s:5216   .debug_str:00000000000005ad .LASF165
     /tmp/ccfEVpwv.s:5376   .debug_str:0000000000000a0a .LASF166
     /tmp/ccfEVpwv.s:5490   .debug_str:0000000000000e15 .LASF168
     /tmp/ccfEVpwv.s:5282   .debug_str:000000000000075f .LASF169
     /tmp/ccfEVpwv.s:5070   .debug_str:0000000000000128 .LASF170
     /tmp/ccfEVpwv.s:5284   .debug_str:000000000000076c .LASF171
     /tmp/ccfEVpwv.s:5474   .debug_str:0000000000000d61 .LASF172
     /tmp/ccfEVpwv.s:5206   .debug_str:0000000000000575 .LASF173
     /tmp/ccfEVpwv.s:5286   .debug_str:0000000000000776 .LASF174
     /tmp/ccfEVpwv.s:5080   .debug_str:00000000000001a5 .LASF175
     /tmp/ccfEVpwv.s:5072   .debug_str:000000000000014d .LASF176
     /tmp/ccfEVpwv.s:5208   .debug_str:000000000000057e .LASF177
     /tmp/ccfEVpwv.s:5224   .debug_str:00000000000005e4 .LASF178
     /tmp/ccfEVpwv.s:5352   .debug_str:0000000000000949 .LASF179
     /tmp/ccfEVpwv.s:5174   .debug_str:0000000000000475 .LASF180
     /tmp/ccfEVpwv.s:5236   .debug_str:000000000000062b .LASF181
     /tmp/ccfEVpwv.s:5250   .debug_str:0000000000000674 .LASF182
     /tmp/ccfEVpwv.s:5542   .debug_str:0000000000000f3e .LASF265
     /tmp/ccfEVpwv.s:5204   .debug_str:000000000000055d .LASF184
     /tmp/ccfEVpwv.s:5240   .debug_str:000000000000063f .LASF185
     /tmp/ccfEVpwv.s:5456   .debug_str:0000000000000cf0 .LASF186
     /tmp/ccfEVpwv.s:5110   .debug_str:000000000000029c .LASF187
     /tmp/ccfEVpwv.s:5302   .debug_str:00000000000007f0 .LASF188
     /tmp/ccfEVpwv.s:5298   .debug_str:00000000000007cf .LASF189
     /tmp/ccfEVpwv.s:5100   .debug_str:0000000000000228 .LASF190
     /tmp/ccfEVpwv.s:5476   .debug_str:0000000000000d82 .LASF191
     /tmp/ccfEVpwv.s:5200   .debug_str:0000000000000544 .LASF192
     /tmp/ccfEVpwv.s:5090   .debug_str:00000000000001d6 .LASF193
     /tmp/ccfEVpwv.s:5470   .debug_str:0000000000000d4d .LASF194
     /tmp/ccfEVpwv.s:5184   .debug_str:00000000000004c5 .LASF195
     /tmp/ccfEVpwv.s:5538   .debug_str:0000000000000f26 .LASF196
     /tmp/ccfEVpwv.s:5166   .debug_str:0000000000000448 .LASF198
     /tmp/ccfEVpwv.s:5308   .debug_str:0000000000000812 .LASF200
     /tmp/ccfEVpwv.s:5522   .debug_str:0000000000000ed1 .LASF201
     /tmp/ccfEVpwv.s:5356   .debug_str:0000000000000959 .LASF202
     /tmp/ccfEVpwv.s:5254   .debug_str:00000000000006a1 .LASF203
     /tmp/ccfEVpwv.s:5398   .debug_str:0000000000000ab6 .LASF204
     /tmp/ccfEVpwv.s:5158   .debug_str:00000000000003e9 .LASF205
     /tmp/ccfEVpwv.s:5292   .debug_str:00000000000007aa .LASF206
     /tmp/ccfEVpwv.s:5122   .debug_str:0000000000000302 .LASF208
     /tmp/ccfEVpwv.s:5238   .debug_str:000000000000063a .LASF207
     /tmp/ccfEVpwv.s:5052   .debug_str:00000000000000aa .LASF209
     /tmp/ccfEVpwv.s:5498   .debug_str:0000000000000e4b .LASF210
     /tmp/ccfEVpwv.s:5372   .debug_str:00000000000009eb .LASF212
     /tmp/ccfEVpwv.s:5414   .debug_str:0000000000000b38 .LASF223
     /tmp/ccfEVpwv.s:5340   .debug_str:000000000000090c .LASF213
     /tmp/ccfEVpwv.s:5482   .debug_str:0000000000000dc1 .LASF214
     /tmp/ccfEVpwv.s:5444   .debug_str:0000000000000bf5 .LASF215
GAS LISTING /tmp/ccfEVpwv.s 			page 35


     /tmp/ccfEVpwv.s:5192   .debug_str:0000000000000511 .LASF216
     /tmp/ccfEVpwv.s:5442   .debug_str:0000000000000bea .LASF217
     /tmp/ccfEVpwv.s:5112   .debug_str:00000000000002a2 .LASF218
     /tmp/ccfEVpwv.s:5294   .debug_str:00000000000007af .LASF219
     /tmp/ccfEVpwv.s:5460   .debug_str:0000000000000d0b .LASF220
     /tmp/ccfEVpwv.s:5412   .debug_str:0000000000000b21 .LASF221
     /tmp/ccfEVpwv.s:5328   .debug_str:00000000000008af .LASF222
     /tmp/ccfEVpwv.s:5408   .debug_str:0000000000000b01 .LASF224
     /tmp/ccfEVpwv.s:5362   .debug_str:0000000000000986 .LASF225
     /tmp/ccfEVpwv.s:5530   .debug_str:0000000000000ef5 .LASF226
     /tmp/ccfEVpwv.s:5388   .debug_str:0000000000000a7a .LASF227
     /tmp/ccfEVpwv.s:5480   .debug_str:0000000000000daa .LASF228
     /tmp/ccfEVpwv.s:5190   .debug_str:00000000000004f9 .LASF229
     /tmp/ccfEVpwv.s:5050   .debug_str:000000000000009a .LASF230
     /tmp/ccfEVpwv.s:5278   .debug_str:0000000000000747 .LASF231
     /tmp/ccfEVpwv.s:5148   .debug_str:00000000000003a1 .LASF232
     /tmp/ccfEVpwv.s:5396   .debug_str:0000000000000aaf .LASF233
     /tmp/ccfEVpwv.s:5436   .debug_str:0000000000000bc2 .LASF234
     /tmp/ccfEVpwv.s:5056   .debug_str:00000000000000ce .LASF235
     /tmp/ccfEVpwv.s:5246   .debug_str:000000000000065c .LASF236
     /tmp/ccfEVpwv.s:5378   .debug_str:0000000000000a3c .LASF237
     /tmp/ccfEVpwv.s:5462   .debug_str:0000000000000d1a .LASF238
     /tmp/ccfEVpwv.s:5506   .debug_str:0000000000000e6e .LASF239
     /tmp/ccfEVpwv.s:5066   .debug_str:000000000000011b .LASF240
     /tmp/ccfEVpwv.s:5484   .debug_str:0000000000000dd2 .LASF241
     /tmp/ccfEVpwv.s:5496   .debug_str:0000000000000e40 .LASF242
     /tmp/ccfEVpwv.s:5154   .debug_str:00000000000003c6 .LASF243
     /tmp/ccfEVpwv.s:5420   .debug_str:0000000000000b67 .LASF244
     /tmp/ccfEVpwv.s:5120   .debug_str:00000000000002e5 .LASF245
     /tmp/ccfEVpwv.s:5348   .debug_str:0000000000000932 .LASF246
     /tmp/ccfEVpwv.s:5104   .debug_str:0000000000000254 .LASF247
     /tmp/ccfEVpwv.s:5554   .debug_str:0000000000000fb8 .LASF248
     /tmp/ccfEVpwv.s:5160   .debug_str:00000000000003f5 .LASF249
     /tmp/ccfEVpwv.s:5318   .debug_str:0000000000000858 .LASF250
     /tmp/ccfEVpwv.s:5322   .debug_str:0000000000000878 .LASF252
     /tmp/ccfEVpwv.s:5046   .debug_str:0000000000000061 .LASF254
     /tmp/ccfEVpwv.s:71     .text:0000000000000044 .LFB32
     /tmp/ccfEVpwv.s:816    .text:0000000000000344 .LFE32
     /tmp/ccfEVpwv.s:4499   .debug_loc:0000000000000000 .LLST1
     /tmp/ccfEVpwv.s:4518   .debug_loc:000000000000005c .LLST2
     /tmp/ccfEVpwv.s:4593   .debug_loc:00000000000001c2 .LLST3
     /tmp/ccfEVpwv.s:4664   .debug_loc:0000000000000315 .LLST4
     /tmp/ccfEVpwv.s:4735   .debug_loc:0000000000000468 .LLST5
     /tmp/ccfEVpwv.s:5410   .debug_str:0000000000000b1a .LASF255
     /tmp/ccfEVpwv.s:4806   .debug_loc:00000000000005bb .LLST6
     /tmp/ccfEVpwv.s:320    .text:0000000000000104 .LBB94
     /tmp/ccfEVpwv.s:369    .text:0000000000000148 .LBE94
     /tmp/ccfEVpwv.s:4833   .debug_loc:000000000000062e .LLST19
     /tmp/ccfEVpwv.s:333    .text:0000000000000114 .LBB95
     /tmp/ccfEVpwv.s:358    .text:0000000000000138 .LBE95
     /tmp/ccfEVpwv.s:4848   .debug_loc:0000000000000677 .LLST20
     /tmp/ccfEVpwv.s:346    .text:000000000000012c .LVL16
     /tmp/ccfEVpwv.s:394    .text:0000000000000170 .LBB99
     /tmp/ccfEVpwv.s:468    .text:00000000000001a8 .LBE99
     /tmp/ccfEVpwv.s:4855   .debug_loc:000000000000069a .LLST22
     /tmp/ccfEVpwv.s:4862   .debug_loc:00000000000006bd .LLST23
     /tmp/ccfEVpwv.s:396    .text:0000000000000170 .LBB100
GAS LISTING /tmp/ccfEVpwv.s 			page 36


     /tmp/ccfEVpwv.s:412    .text:000000000000017c .LBE100
     /tmp/ccfEVpwv.s:414    .text:000000000000017c .LBB102
     /tmp/ccfEVpwv.s:430    .text:0000000000000188 .LBE102
     /tmp/ccfEVpwv.s:440    .text:000000000000019c .LBB104
     /tmp/ccfEVpwv.s:451    .text:00000000000001a0 .LBE104
     /tmp/ccfEVpwv.s:4869   .debug_loc:00000000000006e0 .LLST24
     /tmp/ccfEVpwv.s:453    .text:00000000000001a0 .LBB106
     /tmp/ccfEVpwv.s:467    .text:00000000000001a8 .LBE106
     /tmp/ccfEVpwv.s:4876   .debug_loc:0000000000000703 .LLST25
     /tmp/ccfEVpwv.s:438    .text:000000000000019c .LVL25
     /tmp/ccfEVpwv.s:472    .text:00000000000001a8 .LBB70
     /tmp/ccfEVpwv.s:608    .text:0000000000000244 .LBE70
     /tmp/ccfEVpwv.s:4883   .debug_loc:0000000000000726 .LLST11
     /tmp/ccfEVpwv.s:4890   .debug_loc:0000000000000749 .LLST12
     /tmp/ccfEVpwv.s:4897   .debug_loc:000000000000076c .LLST13
     /tmp/ccfEVpwv.s:583    .text:0000000000000218 .LBB77
     /tmp/ccfEVpwv.s:594    .text:0000000000000230 .LBE77
     /tmp/ccfEVpwv.s:4904   .debug_loc:000000000000078f .LLST14
     /tmp/ccfEVpwv.s:593    .text:0000000000000230 .LVL38
     /tmp/ccfEVpwv.s:474    .text:00000000000001a8 .LBB71
     /tmp/ccfEVpwv.s:490    .text:00000000000001b4 .LBE71
     /tmp/ccfEVpwv.s:492    .text:00000000000001b4 .LBB73
     /tmp/ccfEVpwv.s:508    .text:00000000000001c0 .LBE73
     /tmp/ccfEVpwv.s:523    .text:00000000000001d4 .LBB78
     /tmp/ccfEVpwv.s:534    .text:00000000000001d8 .LBE78
     /tmp/ccfEVpwv.s:4912   .debug_loc:00000000000007b3 .LLST15
     /tmp/ccfEVpwv.s:536    .text:00000000000001d8 .LBB80
     /tmp/ccfEVpwv.s:547    .text:00000000000001dc .LBE80
     /tmp/ccfEVpwv.s:4919   .debug_loc:00000000000007d6 .LLST16
     /tmp/ccfEVpwv.s:549    .text:00000000000001dc .LBB82
     /tmp/ccfEVpwv.s:564    .text:00000000000001e8 .LBE82
     /tmp/ccfEVpwv.s:4926   .debug_loc:00000000000007f9 .LLST17
     /tmp/ccfEVpwv.s:512    .text:00000000000001c8 .LVL30
     /tmp/ccfEVpwv.s:580    .text:0000000000000214 .LVL36
     /tmp/ccfEVpwv.s:602    .text:0000000000000240 .LVL39
     /tmp/ccfEVpwv.s:5016   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccfEVpwv.s:4935   .debug_loc:000000000000081f .LLST7
     /tmp/ccfEVpwv.s:4950   .debug_loc:0000000000000868 .LLST8
     /tmp/ccfEVpwv.s:167    .text:00000000000000ac .LBB60
     /tmp/ccfEVpwv.s:182    .text:00000000000000b8 .LBE60
     /tmp/ccfEVpwv.s:187    .text:00000000000000bc .LBB62
     /tmp/ccfEVpwv.s:203    .text:00000000000000c8 .LBE62
     /tmp/ccfEVpwv.s:619    .text:000000000000024c .LBB64
     /tmp/ccfEVpwv.s:630    .text:0000000000000250 .LBE64
     /tmp/ccfEVpwv.s:4965   .debug_loc:00000000000008b1 .LLST9
     /tmp/ccfEVpwv.s:632    .text:0000000000000250 .LBB66
     /tmp/ccfEVpwv.s:644    .text:0000000000000254 .LBE66
     /tmp/ccfEVpwv.s:4972   .debug_loc:00000000000008d4 .LLST10
     /tmp/ccfEVpwv.s:615    .text:000000000000024c .LVL41
     /tmp/ccfEVpwv.s:676    .text:0000000000000278 .LVL45
     /tmp/ccfEVpwv.s:685    .text:0000000000000284 .LVL47
     /tmp/ccfEVpwv.s:694    .text:0000000000000290 .LVL49
     /tmp/ccfEVpwv.s:707    .text:00000000000002a8 .LVL51
     /tmp/ccfEVpwv.s:718    .text:00000000000002b8 .LVL54
     /tmp/ccfEVpwv.s:727    .text:00000000000002c4 .LVL56
     /tmp/ccfEVpwv.s:736    .text:00000000000002d0 .LVL58
     /tmp/ccfEVpwv.s:745    .text:00000000000002dc .LVL60
GAS LISTING /tmp/ccfEVpwv.s 			page 37


     /tmp/ccfEVpwv.s:754    .text:00000000000002e8 .LVL62
     /tmp/ccfEVpwv.s:763    .text:00000000000002f4 .LVL64
     /tmp/ccfEVpwv.s:777    .text:0000000000000310 .LVL68
     /tmp/ccfEVpwv.s:786    .text:000000000000031c .LVL70
     /tmp/ccfEVpwv.s:797    .text:000000000000032c .LVL73
     /tmp/ccfEVpwv.s:122    .text:0000000000000074 .LBB54
     /tmp/ccfEVpwv.s:138    .text:0000000000000080 .LBE54
     /tmp/ccfEVpwv.s:294    .text:00000000000000ec .LBB89
     /tmp/ccfEVpwv.s:306    .text:00000000000000f4 .LBE89
     /tmp/ccfEVpwv.s:4979   .debug_loc:00000000000008f7 .LLST18
     /tmp/ccfEVpwv.s:309    .text:00000000000000f4 .LBB92
     /tmp/ccfEVpwv.s:317    .text:0000000000000100 .LBE92
     /tmp/ccfEVpwv.s:383    .text:0000000000000168 .LBB97
     /tmp/ccfEVpwv.s:391    .text:000000000000016c .LBE97
     /tmp/ccfEVpwv.s:4987   .debug_loc:000000000000091b .LLST21
     /tmp/ccfEVpwv.s:809    .text:0000000000000340 .LVL76
     /tmp/ccfEVpwv.s:10     .text:0000000000000000 .LFB31
     /tmp/ccfEVpwv.s:65     .text:0000000000000044 .LFE31
     /tmp/ccfEVpwv.s:30     .text:0000000000000028 .LBB52
     /tmp/ccfEVpwv.s:44     .text:0000000000000030 .LBE52
     /tmp/ccfEVpwv.s:4994   .debug_loc:000000000000093e .LLST0
     /tmp/ccfEVpwv.s:5170   .debug_str:0000000000000467 .LASF266
     /tmp/ccfEVpwv.s:5500   .debug_str:0000000000000e58 .LASF256
     /tmp/ccfEVpwv.s:5268   .debug_str:0000000000000707 .LASF257
     /tmp/ccfEVpwv.s:5520   .debug_str:0000000000000ec3 .LASF258
     /tmp/ccfEVpwv.s:5030   .debug_str:0000000000000005 .LASF259
     /tmp/ccfEVpwv.s:5324   .debug_str:000000000000088d .LASF260
     /tmp/ccfEVpwv.s:95     .text:0000000000000064 .LVL2
     /tmp/ccfEVpwv.s:208    .text:00000000000000d4 .LVL11
     /tmp/ccfEVpwv.s:287    .text:00000000000000ec .LVL13
     /tmp/ccfEVpwv.s:328    .text:0000000000000110 .LVL15
     /tmp/ccfEVpwv.s:464    .text:00000000000001a8 .LVL27
     /tmp/ccfEVpwv.s:800    .text:0000000000000330 .LVL74
     /tmp/ccfEVpwv.s:101    .text:0000000000000068 .LVL3
     /tmp/ccfEVpwv.s:605    .text:0000000000000244 .LVL40
     /tmp/ccfEVpwv.s:665    .text:0000000000000270 .LVL44
     /tmp/ccfEVpwv.s:679    .text:000000000000027c .LVL46
     /tmp/ccfEVpwv.s:688    .text:0000000000000288 .LVL48
     /tmp/ccfEVpwv.s:697    .text:0000000000000294 .LVL50
     /tmp/ccfEVpwv.s:710    .text:00000000000002ac .LVL52
     /tmp/ccfEVpwv.s:721    .text:00000000000002bc .LVL55
     /tmp/ccfEVpwv.s:730    .text:00000000000002c8 .LVL57
     /tmp/ccfEVpwv.s:739    .text:00000000000002d4 .LVL59
     /tmp/ccfEVpwv.s:748    .text:00000000000002e0 .LVL61
     /tmp/ccfEVpwv.s:757    .text:00000000000002ec .LVL63
     /tmp/ccfEVpwv.s:766    .text:00000000000002f8 .LVL65
     /tmp/ccfEVpwv.s:775    .text:0000000000000308 .LVL67
     /tmp/ccfEVpwv.s:780    .text:0000000000000314 .LVL69
     /tmp/ccfEVpwv.s:789    .text:0000000000000320 .LVL71
     /tmp/ccfEVpwv.s:795    .text:0000000000000324 .LVL72
     /tmp/ccfEVpwv.s:806    .text:0000000000000334 .LVL75
     /tmp/ccfEVpwv.s:107    .text:000000000000006c .LVL4
     /tmp/ccfEVpwv.s:716    .text:00000000000002b0 .LVL53
     /tmp/ccfEVpwv.s:772    .text:00000000000002fc .LVL66
     /tmp/ccfEVpwv.s:113    .text:0000000000000070 .LVL5
     /tmp/ccfEVpwv.s:119    .text:0000000000000074 .LVL6
     /tmp/ccfEVpwv.s:136    .text:0000000000000080 .LVL7
GAS LISTING /tmp/ccfEVpwv.s 			page 38


     /tmp/ccfEVpwv.s:161    .text:00000000000000a4 .LVL8
     /tmp/ccfEVpwv.s:210    .text:00000000000000dc .LVL12
     /tmp/ccfEVpwv.s:355    .text:0000000000000134 .LVL18
     /tmp/ccfEVpwv.s:361    .text:000000000000013c .LVL19
     /tmp/ccfEVpwv.s:367    .text:0000000000000148 .LVL20
     /tmp/ccfEVpwv.s:350    .text:0000000000000130 .LVL17
     /tmp/ccfEVpwv.s:410    .text:000000000000017c .LVL23
     /tmp/ccfEVpwv.s:428    .text:0000000000000188 .LVL24
     /tmp/ccfEVpwv.s:448    .text:00000000000001a0 .LVL26
     /tmp/ccfEVpwv.s:488    .text:00000000000001b4 .LVL28
     /tmp/ccfEVpwv.s:506    .text:00000000000001c0 .LVL29
     /tmp/ccfEVpwv.s:514    .text:00000000000001cc .LVL31
     /tmp/ccfEVpwv.s:519    .text:00000000000001d4 .LVL32
     /tmp/ccfEVpwv.s:588    .text:0000000000000224 .LVL37
     /tmp/ccfEVpwv.s:531    .text:00000000000001d8 .LVL33
     /tmp/ccfEVpwv.s:544    .text:00000000000001dc .LVL34
     /tmp/ccfEVpwv.s:561    .text:00000000000001e8 .LVL35
     /tmp/ccfEVpwv.s:185    .text:00000000000000bc .LVL9
     /tmp/ccfEVpwv.s:640    .text:0000000000000254 .LVL43
     /tmp/ccfEVpwv.s:201    .text:00000000000000c8 .LVL10
     /tmp/ccfEVpwv.s:627    .text:0000000000000250 .LVL42
     /tmp/ccfEVpwv.s:303    .text:00000000000000f4 .LVL14
     /tmp/ccfEVpwv.s:382    .text:0000000000000168 .LVL21
     /tmp/ccfEVpwv.s:389    .text:000000000000016c .LVL22
     /tmp/ccfEVpwv.s:29     .text:0000000000000028 .LVL0
     /tmp/ccfEVpwv.s:40     .text:0000000000000030 .LVL1
     /tmp/ccfEVpwv.s:827    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccfEVpwv.s:165    .text:00000000000000ac .LBB59
     /tmp/ccfEVpwv.s:289    .text:00000000000000ec .LBE59
     /tmp/ccfEVpwv.s:610    .text:0000000000000244 .LBB68
     /tmp/ccfEVpwv.s:645    .text:0000000000000254 .LBE68
     /tmp/ccfEVpwv.s:671    .text:0000000000000270 .LBB69
     /tmp/ccfEVpwv.s:802    .text:0000000000000330 .LBE69

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_Z14handleNewCharsPv
_ZN9Scheduler12first_sleepyE
_ZN9Scheduler3putEP3TCB
_ZN3TCB16time_slice_countE
_ZN3TCB8dispatchEv
plic_claim
CONSOLE_STATUS
_ZN9myConsole11inputBufferE
_ZNK13BoundedBuffer4fullEv
CONSOLE_RX_DATA
_ZN9myConsole10input_putcEc
plic_complete
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB13_threadCreateEPPS_PFvPvES2_S2_
_ZN3TCB11_threadExitEv
_ZN3Sem4openEPPS_j
_ZN3Sem7s_closeEPS_
_ZN3Sem4waitEPS_
_ZN3Sem6signalEPS_
_ZN3Sem9timedWaitEPS_m
GAS LISTING /tmp/ccfEVpwv.s 			page 39


_ZN3Sem7trywaitEPS_
_ZN9Scheduler12put_to_sleepEP3TCBm
_ZN9myConsole10input_getcEv
_ZN9myConsole11output_putcEc
_Z12printIntegerm
